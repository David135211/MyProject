type:			一字节, 0 for yc&ym, 1 for yx
busno:			一字节, 总线号, 从1开始
devno:			一字节, 设备号, 从1开始
bus_count;		一字节, 连续开始的总线号!	连续采集总线个数!
dev_count:		一字节, 连续的开始设备号!	连续采集设备数目!
mask;			四字节, 保留字段, 暂无意义
register_addr:	两字节, 开始写入的寄存器地址
以上数据均为无符号十六进制, 每个字段之间以","隔开.

eg:采集总线5,设备6的遥测遥脉:
0,5,6,1,1,FFFFFFFF,7D0
	0			5	6	1		1	FFFFFFFF	7D0
	|			|	|	|		|		|		 |
采集遥测遥脉	|	|	|		|		|		 |
			  总线5	|	|		|		|		 |
			  		|	|		|		|		 |
				  设备6	|		|		|		 |
				  	对遥测无用	|		|		 |
							对遥测无用	|		 |
									无意义,保留	 |
											起始寄存器地址

采集遥信总线1,设备7到15数据:
1,1,7,1,9,FFFFFFFF,834
采集遥信总线8,9所有设备的数据:
1,8,1,2,E,FFFFFFFF,927

注意事项:
1.如果想采集超过一个总线号的数据则这两个总线上的设备号的起始和终止序号必须相同.
2.寄存器地址的写入是连续的,点表中的寄存器地址有断开的地方,这一点容易出错.
3.整个报文的长度必须保证在256个字节之内.
	最好保证在200个之内(一个寄存器(一个字)对应两个字节).
4.bus_count和dev_count字段虽然只对遥信的采集有效,
	但采集遥测时也不能省略.其最小值为1,最大值256.
5.mask暂时没有什么意义, 也不能省略, 留作以后不时之需.
6.设备号总线号已经在组件内部进行了处理.
	实际配置的时候只需要按照公司点表的标识配置即可.
