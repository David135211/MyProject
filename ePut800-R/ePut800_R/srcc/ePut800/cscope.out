cscope 15 $HOME/work/ePut800_R/srcc/ePut800 -q 0000010200 0001263199
	@BasePort.cpp

5 
	~"°dio.h
"

6 
	~"°dlib.h
"

7 
	~"°rög.h
"

8 
	~"˘y≥.h
"

10 
	~"Ba£P‹t.h
"

11 
	~"cglobÆ.h
"

14 
	gCBa£P‹t
::
	$CBa£P‹t
()

16 
m_hComm
 = 0;

17 
m_bVÆid
 = 
FALSE
;

18 
m_wP‹tSèã
 = 0;

20 
m_byE«bÀ
 = 1;

21 
m_uTheP‹t
 = 2044;

22 
	}
}

24 
	gCBa£P‹t
::~
	$CBa£P‹t
()

26 
	`Clo£P‹t
();

27 
	}
}

29 
	gCBa£P‹t
::
	$GëCommAârib
–c⁄° * 
p
, * 
ÕszAâr
, 
UINT
& 
uP‹t
 )

31 c⁄° * 
ÕszCål
 = 
p
;

32 c⁄° * 
pRëu∫
 = 
	`°r°r
–
ÕszCål
 , "_" ) ;

33 if–
pRëu∫
 =
NULL
 )

37 
ªsu…
;

38 
ªsu…
 = 
pRëu∫
 - 
ÕszCål
 + 1;

40 
cTy≥Buf
[ 30 ] ;

41 
	`mem£t
–
cTy≥Buf
 , 0 , ( cTypeBuf ) ) ;

42 
	`mem˝y
–
cTy≥Buf
 , 
ÕszCål
 , 
ªsu…
 ) ;

44 
BYTE
 
byComTy≥
 = 0 ;

45 if–!
	`°rcmp
–
cTy≥Buf
 , 
COMRS_485
 ) )

46 
byComTy≥
 = 
Pr›îty
::
COMRS485
 ;

47 if–!
	`°rcmp
–
cTy≥Buf
 , 
LAN_TCP
 ) )

49 
byComTy≥
 = 
Pr›îty
::
LAN_SERVER
 ;

51 
pRëu∫
++ ;

52 
uP‹t
 = 
	`©oi
–
pRëu∫
 ) ;

53 
	`°r˝y
–
ÕszAâr
 , "NULL" ) ;

54  
byComTy≥
 ;

56 if–!
	`°rcmp
–
cTy≥Buf
 , 
LAN_TCP_CLIENT
 ) )

57 
byComTy≥
 = 
Pr›îty
::
LAN_CLIENT
 ;

62 
pRëu∫
++ ;

63 c⁄° * 
pP‹t
 = 
	`°r°r
–
pRëu∫
 , ":" ) ;

64 if–
pP‹t
 =
NULL
 )

67 
ªsu…
 = 
pP‹t
 - 
pRëu∫
 ;

68 
	`mem£t
–
cTy≥Buf
 , 0 , ( cTypeBuf ) ) ;

69 
	`mem˝y
–
cTy≥Buf
 , 
pRëu∫
 , 
ªsu…
 ) ;

70 
uP‹t
 = 
	`©oi
–
cTy≥Buf
 ) ;

73 
pP‹t
++ ;

74 
	`°r˝y
–
ÕszAâr
 , 
pP‹t
 ) ;

76  
byComTy≥
 ;

77 
	}
}

79 
	gCBa£P‹t
::
	$GëCommAârib_‹igöÆ
–c⁄° * 
ÕszCål
, * 
ÕszAâr
, 
UINT
& 
uP‹t
 )

81 
i
, 
nLí
;

82 
k
, 
nStyÀ
 = -1;

83 
szP¨am
[32];

84 c⁄° * 
p
 = 
ÕszCål
;

86 
k
 = 0;

87 
nLí
 = 
	`°æí
(
ÕszCål
);

88  
i
=0; i<
nLí
; i++, 
p
++ )

90 if–*
p
==' ' || *p=='\t' ) { ; }

91 if–!
	`isdigô
(*
p
ËË{ 
szP¨am
[
k
++] = 
	`touµî
(*p); }

92 { 
szP¨am
[
k
] = '\0'; ; }

94 
	`•rötf
–
ÕszAâr
, "%s", 
p
 );

96 if(
	`°rcmp
(
szP¨am
, "COM")==0Ë{ 
nStyÀ
 = 0; }

97 if(
	`°rcmp
(
szP¨am
, "TCP")==0Ë{ 
nStyÀ
 = 1; }

98 if(
	`°rcmp
(
szP¨am
, "UDP")==0Ë{ 
nStyÀ
 = 2; }

99 if(
	`°rcmp
(
szP¨am
, "CAN")==0Ë{ 
nStyÀ
 = 3; }

101  
k
=0; 
i
<
nLí
; i++, 
p
++ )

103 if–*
p
 !':' ) { 
szP¨am
[
k
++] = *p; }

104 { 
szP¨am
[
k
] = '\0'; 
p
++; ; }

106 
	`•rötf
–
ÕszAâr
, "%s", 
p
 );

107 
uP‹t
 = (
UINT
)
	`©oi
(
szP¨am
);

109  
nStyÀ
;

110 
	}
}

112 
	gCBa£P‹t
::
	$Re˚iveProc
( )

114 
	}
}

116 
BOOL
 
CBa£P‹t
::
	$IsP‹tVÆid
( )

118  
FALSE
;

119 
	}
}

121 
	gCBa£P‹t
::
	$Clo£P‹t
( )

123 
	}
}

125 
BOOL
 
CBa£P‹t
::
	$O≥nP‹t
–* 
ÕszEº‹
 )

127  
FALSE
;

128 
	}
}

130 
BOOL
 
	gCBa£P‹t
::
	$SëQueue
–
DWORD
 
dwInQueueSize
, DWORD 
dwOutQueueSize
 )

132  
FALSE
;

133 
	}
}

135 
	gCBa£P‹t
::
	$GëInQueue
( )

138 
	}
}

140 
	gCBa£P‹t
::
	$GëOutQueue
( )

143 
	}
}

145 
	gCBa£P‹t
::
	$RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 )

148 
	}
}

150 
	gCBa£P‹t
::
	$WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 )

153 
	}
}

155 
	gCBa£P‹t
::
	$AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 )

158 
	}
}

160 
	gCBa£P‹t
::
	$AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 )

163 
	}
}

	@BasePort.h

6 #i‚de‡
_BASEPORT_H_


7 
	#_BASEPORT_H_


	)

9 
	~"Ty≥def.h
"

14 ˛as†
	cCBa£P‹t


17 
	mpublic
:

18 
CBa£P‹t
();

19 
	mvútuÆ
 ~
CBa£P‹t
();

20 
vútuÆ
 * 
	$CœssName
(){ (*)"CBasePort";}

23 
¥Ÿe˘ed
:

24 
BOOL
 
m_bVÆid
;

25 
HANDLE
 
m_hComm
;

26 
WORD
 
m_wP‹tSèã
;

28 
public
:

29 
BYTE
 
m_byE«bÀ
;

30 
UINT
 
m_uTheP‹t
;

31 
m_szAârib
[32];

32 
m_szLoˇlAddr
[24];

33 
m_szRemŸeAddr
[24];

36 
public
:

37 
	`GëCommAârib
–c⁄° * 
ÕszCål
, * 
ÕszAâr
, 
UINT
& 
uP‹t
 );

38 
	`GëCommAârib_‹igöÆ
–c⁄° * 
ÕszCål
, * 
ÕszAâr
, 
UINT
& 
uP‹t
 );

39 
	`Re˚iveProc
( );

41 
vútuÆ
 
BOOL
 
	`IsP‹tVÆid
( );

42 
vútuÆ
 
BOOL
 
	`O≥nP‹t
–* 
ÕszEº‹
=
NULL
 );

43 
vútuÆ
 
	`Clo£P‹t
( );

44 
vútuÆ
 
BOOL
 
	`SëQueue
–
DWORD
 
dwInQueueSize
, DWORD 
dwOutQueueSize
 );

45 
vútuÆ
 
	`GëInQueue
( );

46 
vútuÆ
 
	`GëOutQueue
( );

47 
vútuÆ
 
	`RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 );

48 
vútuÆ
 
	`WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 );

50 
vútuÆ
 
	`AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 );

51 
vútuÆ
 
	`AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 );

52 
vútuÆ
 
BOOL
 
	$C⁄√˘
–){  
FALSE
 ;
	}
}

53 
vútuÆ
 
BOOL
 
	$Pög
–* 
cIp
 ){  
FALSE
 ;
	}
}

	@ComPort/CTcpPortServer.cpp

1 
	~"CT˝P‹tSîvî.h
"

2 
	~<°dio.h
>

3 
	~"°ru˘uª.h
"

5 
BOOL
 
	gCT˝P‹tSîvîDñeg©e
::
	$Ac˚±Proc
(
hSockë
, 
nP‹t
,

6 * 
ÕszRemŸe
, * 
ÕszLoˇl
)

8 if–
m_pSîvî
 )

9 
m_pSîvî
->
	`Pro˚ssAc˚±Proc
–
hSockë
 , 
nP‹t
 , 
ÕszRemŸe
 , 
ÕszLoˇl
 ) ;

11 
CDñeg©eBa£
::
	`Ac˚±Proc
–
hSockë
 , 
nP‹t
 , 
ÕszRemŸe
 , 
ÕszLoˇl
 ) ;

12  
TRUE
 ;

13 
	}
}

16 
	gCT˝P‹tSîvî
::
	$CT˝P‹tSîvî
()

19 
m_dñeg©e
.
m_pSîvî
 = 
this
 ;

20 
	}
}

22 
	gCT˝P‹tSîvî
::~
	$CT˝P‹tSîvî
()

25 
	}
}

27 
BOOL
 
CT˝P‹tSîvî
::
	$O≥nP‹t
–* 
ÕszEº‹
 )

29 if–
ÕszEº‹
 =
NULL
 )

30  
FALSE
 ;

33 
m_Li°í
.
m_nTheP‹t
 = 
m_uTheP‹t
 ;

34 
	`°r˝y
–
m_Li°í
.
m_szLoˇlAddr
 , 
m_szAârib
 ) ;

37 
szEº‹
[ 200 ];

38 
	`mem£t
–
szEº‹
 , 0 , ( szError ) );

39 
m_Li°í
.
	`Cª©eObj
–
szEº‹
 ) ;

40 
m_Li°í
.
	`SèπRun
–&
m_dñeg©e
 ) ;

42  
TRUE
 ;

43 
	}
}

45 
BOOL
 
	gCT˝P‹tSîvî
::
	$SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 )

47 if–!
pPr›îty
 )

49 
	`Q_ASSERT
–
FALSE
 ) ;

50  
FALSE
 ;

53 if–
pPr›îty
->
m_ComTy≥
 !
Pr›îty
::
LAN_SERVER
 )

55 
	`Q_ASSERT
–
FALSE
 );

56  
FALSE
 ;

59 
LAN_SERVER_Pr›îty
 * 
pL™Pr›îty
 = ( LAN_SERVER_Pr›îty *)
pPr›îty
 ;

60 
m_uTheP‹t
 = 
pL™Pr›îty
->
wP‹tNo
 ;

61 
	`°r˝y
–
m_szAârib
 , 
pL™Pr›îty
->
£rvîIp
 ) ;

63  
TRUE
 ;

64 
	}
}

66 
BOOL
 
	gCT˝P‹tSîvî
::
	$Pro˚ssAc˚±Proc
(
hSockë
, 
nP‹t
,

67 * 
ÕszRemŸe
, * 
ÕszLoˇl
)

69 
szStyÀ
[32];

71 
	`•rötf
(
szStyÀ
, "TCP%d:%s", 
nP‹t
, 
ÕszRemŸe
);

74 
	`Aâach
–
hSockë
 ) ;

75  
TRUE
 ;

76 
	}
}

	@ComPort/CTcpPortServer.h

1 #i‚de‡
CTCPPORTSERVER_H


2 
	#CTCPPORTSERVER_H


	)

4 
	~"T˝P‹t.h
"

5 
	~"T˝Li°í.h
"

7 
˛ass
 
	gCT˝P‹tSîvî
 ;

9 ˛as†
	cCT˝P‹tSîvîDñeg©e
 : 
public
 
CDñeg©eBa£


11 
public
:

12 
	$CT˝P‹tSîvîDñeg©e
( )

14 
m_pSîvî
 = 
NULL
 ;

16 
vútuÆ
 ~
	$CT˝P‹tSîvîDñeg©e
()

18 
	}
}

20 
vútuÆ
 
BOOL
 
Ac˚±Proc
(
hSockë
, 
nP‹t
,

21 * 
ÕszRemŸe
, * 
ÕszLoˇl
) ;

23 
CT˝P‹tSîvî
 * 
	gm_pSîvî
 ;

26 ˛as†
	cCT˝P‹tSîvî
 : 
public
 
CT˝P‹t


28 
public
:

29 
CT˝P‹tSîvî
();

30 
	mvútuÆ
 ~
CT˝P‹tSîvî
();

31 
vútuÆ
 
BOOL
 
O≥nP‹t
–* 
ÕszEº‹
=
NULL
 );

32 
vútuÆ
 
BOOL
 
SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 );

33 
BOOL
 
Pro˚ssAc˚±Proc
(
hSockë
, 
nP‹t
,

34 * 
ÕszRemŸe
, * 
ÕszLoˇl
) ;

35 
CT˝Li°í
 
	mm_Li°í
 ;

36 
CT˝P‹tSîvîDñeg©e
 
	mm_dñeg©e
 ;

37 
	mm_szLoˇlG©eWay
[24];

38 
	mm_szLoˇlSubNëMask
[24];

39 
	mm_szLoˇlDNS
[24];

	@ComPort/SerialPort.cpp

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

11 
	~<f˙é.h
>

12 
	~<ãrmios.h
>

13 
	~<sys/io˘l.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<sys/°©.h
>

16 
	~<sys/time.h
>

17 
	~<î∫o.h
>

19 
	~"SîülP‹t.h
"

20 
	~"°ru˘uª.h
"

22 
	#MAX_COMM_NUM
 8

	)

23 c⁄° *
	gSERIAL_NAME
[
MAX_COMM_NUM
] =

37 
	gCSîülP‹t
::
	$CSîülP‹t
()

39 
m_uTheP‹t
 = 1;

40 
m_hComm
 = 
ERROR
;

41 
m_nBaudR©e
 = 1200;

42 
	}
}

44 
	gCSîülP‹t
::~
	$CSîülP‹t
()

46 
	`Clo£P‹t
();

47 
	}
}

49 
BOOL
 
	gCSîülP‹t
::
	$IsP‹tVÆid
( )

51  (
m_hComm
 > 0);

52 
	}
}

54 
	gCSîülP‹t
::
	$Clo£P‹t
( )

56 if–!
	`IsP‹tVÆid
() ) ;

57 
	`tcÊush
(
m_hComm
, 
TCIFLUSH
);

58 
	`tcÊush
(
m_hComm
, 
TCOFLUSH
);

59 
	`˛o£
(
m_hComm
);

60 
	}
}

63 
BOOL
 
	gCSîülP‹t
::
	$O≥nP‹t
–* 
ÕszEº‹
 )

65 
i
, 
k
, 
nLí
;

66 
szName
[32];

67 
ãrmios
 
tio
;

68 c⁄° * 
p
 = 
m_szAârib
;

71 
nLí
 = 
	`°æí
(
m_szAârib
);

72  
i
=0, 
k
=0; i<
nLí
; i++, 
p
++ )

74 if–*
p
 !',' ) { 
szName
[
k
++] = *p; }

75 { 
szName
[
k
] = '\0'; ; }

77  
	`©oi
(
szName
) )

79 300: 
m_nBaudR©e
=
B300
; ;

80 600: 
m_nBaudR©e
=
B600
; ;

81 1200: 
m_nBaudR©e
=
B1200
; ;

82 2400: 
m_nBaudR©e
=
B2400
; ;

83 4800: 
m_nBaudR©e
=
B4800
; ;

84 9600: 
m_nBaudR©e
=
B9600
; ;

85 19200: 
m_nBaudR©e
=
B19200
; ;

86 38400: 
m_nBaudR©e
=
B38400
; ;

87 57600: 
m_nBaudR©e
=
B57600
; ;

88 115200: 
m_nBaudR©e
=
B115200
; ;

90 if–
ÕszEº‹
 )

92 
	`•rötf
–
ÕszEº‹
, "Baudøã(%sËîr‹!", 
szName
 );

93 
	`Q_ASSERT
–
FALSE
 ) ;

95  
FALSE
;

97 if(
m_uTheP‹t
>0 && m_uTheP‹t<=
MAX_COMM_NUM
)

98 
	`•rötf
–
szName
, "%s", 
SERIAL_NAME
[
m_uTheP‹t
-1] );

101 if–
ÕszEº‹
 )

103 
	`•rötf
–
ÕszEº‹
, "p‹äum(%dËnÿexô!", 
m_uTheP‹t
 );

104 
	`Q_ASSERT
–
FALSE
 ) ;

106  
FALSE
;

108 
m_hComm
 = 
	`›í
–
szName
, 
O_RDWR
|
O_NOCTTY
|
O_NDELAY
, 0 );

109 if–
m_hComm
 < 0 )

111 if–
ÕszEº‹
 )

113 
	`•rötf
–
ÕszEº‹
, "›í %†îr‹!", 
szName
 );

116  
FALSE
;

118 
	`f˙é
–
m_hComm
, 
F_SETFL
, 0 );

121 
	`tcgë©å
–
m_hComm
, &
tio
 );

123 
	`cf£ti•ìd
–&
tio
, 
m_nBaudR©e
 );

124 
	`cf£to•ìd
–&
tio
, 
m_nBaudR©e
 );

125 
	`cfmakîaw
–&
tio
 );

126 
tio
.
c_oÊag
 |
OPOST
;

127 
tio
.
c_oÊag
 &~
ONLCR
;

128 
p
++;

131  *
p
 )

135 
tio
.
c_cÊag
 &~
PARENB
;

136 
tio
.
c_iÊag
 &~
INPCK
;

140 
tio
.
c_cÊag
 |(
PARODD
 | 
PARENB
);

141 
tio
.
c_iÊag
 |
INPCK
;

145 
tio
.
c_cÊag
 |
PARENB
;

146 
tio
.
c_cÊag
 &~
PARODD
;

147 
tio
.
c_iÊag
 |
INPCK
;

151 
tio
.
c_cÊag
 &~
PARENB
;

152 
tio
.
c_cÊag
 &~
CSTOPB
;

155 
	`Ârötf
(
°dîr
,"UnsupportedÖarity/n");

156  (
FALSE
);

160 
tio
.
c_cÊag
 &~
CSIZE
;

161  
p
[2] )

164 
tio
.
c_cÊag
 |
CS5
;

167 
tio
.
c_cÊag
 |
CS6
;

170 
tio
.
c_cÊag
 |
CS7
;

173 
tio
.
c_cÊag
 |
CS8
;

176 
	`Ârötf
(
°dîr
,"Unsupported data size/n");

177  (
FALSE
);

181  
p
[4] )

184 
tio
.
c_cÊag
 &~
CSTOPB
;

187 
tio
.
c_cÊag
 |
CSTOPB
;

190 
	`Ârötf
(
°dîr
,"Unsupported stop bits/n");

191  (
FALSE
);

195 
	`tc£èâr
–
m_hComm
, 
TCSANOW
, &
tio
 );

196 
	`tcÊush
–
m_hComm
, 
TCIOFLUSH
 );

198 if–
ÕszEº‹
 )

199 
	`•rötf
–
ÕszEº‹
, "›í %s(BAUDRATE=%dËok!", 
szName
, 
m_nBaudR©e
 );

200  
TRUE
;

201 
	}
}

203 
BOOL
 
	gCSîülP‹t
::
	$SëQueue
–
DWORD
 
dwInQueueSize
, DWORD 
dwOutQueueSize
 )

205 if–!
	`IsP‹tVÆid
(ËË 
FALSE
;

208  
TRUE
;

209 
	}
}

211 
	gCSîülP‹t
::
	$GëInQueue
( )

213 
nByãs
 = 0;

214 if–!
	`IsP‹tVÆid
() )  -1;

215 
	`io˘l
(
m_hComm
, 
FIONREAD
, ()&
nByãs
);

216  
nByãs
;

217 
	}
}

219 
	gCSîülP‹t
::
	$GëOutQueue
( )

221 
nByãs
 = 0;

222 if–!
	`IsP‹tVÆid
() )  -1;

224  
nByãs
;

225 
	}
}

227 
	gCSîülP‹t
::
	$RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 )

229 if–!
	`IsP‹tVÆid
(Ë|| 
nRód
<=0 )  -1;

230  
	`ªad
(
m_hComm
, (*)
pBuf
, 
nRód
);

231 
	}
}

233 
	gCSîülP‹t
::
	$WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 )

235 if–!
	`IsP‹tVÆid
(Ë|| 
nWrôe
<=0 )  -1;

236 
	`tcÊush
–
m_hComm
, 
TCOFLUSH
 );

237 
iRä
 = 
	`wrôe
(
m_hComm
, (*)
pBuf
, 
nWrôe
);

239  
iRä
;

240 
	}
}

242 
	gCSîülP‹t
::
	$AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 )

244 
iRä
;

252 if–!
	`IsP‹tVÆid
(Ë|| 
nRód
<=0 )  -1;

253 
fd_£t
 
rfds
;

254 
timevÆ
 
tv
;

256 
	`FD_ZERO
(&
rfds
);

257 
	`FD_SET
(
m_hComm
, &
rfds
);

258 
tv
.
tv_£c
 = 0;

259 
tv
.
tv_u£c
 = 100000;

260  
	`£À˘
(
m_hComm
+1, &
rfds
, 
NULL
, NULL, &
tv
) )

262 
ERROR
:

267 if(
	`FD_ISSET
(
m_hComm
, &
rfds
))

269 
iRä
 = 
	`ªad
(
m_hComm
, (*)
pBuf
, 
nRód
);

270 
	`tcÊush
–
m_hComm
, 
TCIFLUSH
 );

271  
iRä
;

277 
	}
}

279 
	gCSîülP‹t
::
	$AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 )

281 if–!
	`IsP‹tVÆid
(Ë|| 
nWrôe
<=0 )  -1;

283 
fd_£t
 
wfds
;

284 
timevÆ
 
tv
;

286 
	`FD_ZERO
(&
wfds
);

287 
	`FD_SET
(
m_hComm
, &
wfds
);

288 
tv
.
tv_£c
 = 0;

289 
tv
.
tv_u£c
 = 100000;

290  
	`£À˘
(
m_hComm
+1, 
NULL
, &
wfds
, NULL, &
tv
) )

292 
ERROR
:

297 if(
	`FD_ISSET
(
m_hComm
, &
wfds
))

298  
	`wrôe
(
m_hComm
, (*)
pBuf
, 
nWrôe
);

302 
	}
}

304 
BOOL
 
	gCSîülP‹t
::
	$SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 )

306 if–!
pPr›îty
 )

308 
	`Q_ASSERT
–
FALSE
 ) ;

309  
FALSE
 ;

312 if–
pPr›îty
->
m_ComTy≥
 !
Pr›îty
::
COMRS485
 )

314 
	`Q_ASSERT
–
FALSE
 ) ;

315  
FALSE
 ;

318 
COM_Pr›îty
 * 
pComPr›îty
 = ( COM_Pr›îty *)
pPr›îty
 ;

320 
	`•rötf
–
m_szAârib
 , "%ld,%c,%d,%d" , 
pComPr›îty
->
wBaud
 ,

321 ()
pComPr›îty
->
byP¨ôy
 ,ÖComPr›îty->
byD©aBôs
 ,

322 
pComPr›îty
->
bySt›Bôs
 ) ;

325 
m_uTheP‹t
 = 
pComPr›îty
->
wP‹tNo
 ;

326  
TRUE
 ;

327 
	}
}

	@ComPort/SerialPort.h

6 #i‚de‡
_SERIALPORT_H_


7 
	#_SERIALPORT_H_


	)

8 
	~"ccomp‹t.h
"

11 ˛as†
	cCSîülP‹t
 : 
public
 
CComP‹t


14 
public
:

15 
CSîülP‹t
();

16 
	mvútuÆ
 ~
CSîülP‹t
();

19 
	m¥iv©e
:

20 
m_nBaudR©e
;

21 
WORD
 
	mm_uTheP‹t
 ;

22 
	mm_hComm
 ;

23 
	mm_szAârib
[ 100 ] ;

24 
	m¥Ÿe˘ed
:

26 
public
:

29 
public
:

30 
vútuÆ
 
BOOL
 
IsP‹tVÆid
( );

31 
vútuÆ
 
BOOL
 
O≥nP‹t
–* 
ÕszEº‹
=
NULL
 );

32 
vútuÆ
 
Clo£P‹t
( );

33 
vútuÆ
 
BOOL
 
SëQueue
–
DWORD
 
dwInQueueSize
, DWORD 
dwOutQueueSize
 );

34 
vútuÆ
 
GëInQueue
( );

35 
vútuÆ
 
GëOutQueue
( );

36 
vútuÆ
 
RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 );

37 
vútuÆ
 
WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 );

38 
vútuÆ
 
AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 );

39 
vútuÆ
 
AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 );

40 
vútuÆ
 
BOOL
 
SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 );

42 
	m¥iv©e
:

	@ComPort/TcpClient.cpp

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<uni°d.h
>

8 
	~<f˙é.h
>

9 
	~<ãrmios.h
>

10 
	~<˘y≥.h
>

11 
	~<sys/io˘l.h
>

12 
	~<sys/mm™.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/∑øm.h
>

15 
	~<sys/°©.h
>

16 
	~<sys/time.h
>

17 
	~<sig«l.h
>

18 
	~<î∫o.h
>

19 
	~<√töë/ö.h
>

20 
	~<sys/sockë.h
>

21 
	~<¨∑/öë.h
>

22 
	~<√tdb.h
>

24 
	~"T˝Clõ¡.h
"

25 
	~"°ru˘uª.h
"

26 
	#MAX_TCP_SIZE
 1280

	)

31 
	gCT˝Clõ¡
::
	$CT˝Clõ¡
()

33 
m_hComm
 = 
ERROR
 ;

34 
m_bC⁄√t
 = 
FALSE
 ;

35 
	}
}

37 
	gCT˝Clõ¡
::~
	$CT˝Clõ¡
()

39 
	`Clo£P‹t
() ;

40 
	}
}

42 
BOOL
 
	gCT˝Clõ¡
::
	$IsP‹tVÆid
( )

44 if(
m_hComm
 <= 0)

47  
FALSE
;

50 if(
m_bC⁄√t
 <= 0)

53  
FALSE
 ;

56  
TRUE
;

57 
	}
}

59 
BOOL
 
	gCT˝Clõ¡
::
	$O≥nP‹t
–* 
ÕszEº‹
 )

61 
nVÆ
;

62 
buf
[ 24 ] ;

66 
	`mem˝y
(
m_szRemŸeAddr
, 
m_szAârib
, 24);

67 
	`mem˝y
–
buf
 , 
m_szAârib
 , 24 ) ;

68 if–(
m_hComm
=
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0))==
ERROR
 )

70 if–
ÕszEº‹
 )

71 
	`•rötf
–
ÕszEº‹
, "CTcpPort: %s", "Create socketÉrror!" );

72  
FALSE
;

75 
nAddrSize
 = (
sockaddr_ö
);

76 
	`bzîo
((*)&
m_RemŸeAddr
, 
nAddrSize
);

77 
m_RemŸeAddr
.
sö_Ámûy
 = 
AF_INET
;

78 
m_RemŸeAddr
.
sö_p‹t
 = 
	`ht⁄s
–
m_uTheP‹t
 );

79 
m_RemŸeAddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
–
m_szAârib
 );

82 
nVÆ
 = 1;

83 
	`£tsock›t
(
m_hComm
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*)&
nVÆ
, (nVal));

86 
nVÆ
 = 
MAX_TCP_SIZE
;

87 
	`£tsock›t
(
m_hComm
, 
SOL_SOCKET
, 
SO_RCVBUF
, (*)&
nVÆ
, (nVal));

90 
	`C⁄√˘
() ;

92  
TRUE
 ;

93 
	}
}

95 
BOOL
 
	gCT˝Clõ¡
::
	$C⁄√˘
( )

97 if–
m_hComm
 <0 )  
FALSE
;

98 if–
	`c⁄√˘
–
m_hComm
,

99 (
sockaddr
*)&
m_RemŸeAddr
,

100 (
m_RemŸeAddr
ËË=
ERROR
 )

102  
FALSE
;

104 
m_bC⁄√t
 = 
TRUE
 ;

105  
TRUE
;

106 
	}
}

108 
	gCT˝Clõ¡
::
	$Clo£P‹t
( )

110 if(
m_hComm
==
ERROR
) ;

111 
	`shutdown
(
m_hComm
, 2);

112 
	`˛o£
(
m_hComm
);

113 
m_hComm
 = 
ERROR
;

114 
m_bC⁄√t
 = 0;

115 
	}
}

117 
	gCT˝Clõ¡
::
	$RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 )

119 
nByãs
 = 0;

121 if–!
	`IsP‹tVÆid
(Ë|| 
nRód
<=0 )  -1;

122 
nByãs
 = 
	`ªcv
–
m_hComm
, (*)
pBuf
, 
nRód
, 0 );

123 if–
nByãs
 =
ERROR
 )

125 
m_bC⁄√t
 = 
FALSE
 ;

129  
nByãs
;

130 
	}
}

132 
	gCT˝Clõ¡
::
	$WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 )

134 if–!
	`IsP‹tVÆid
(Ë|| 
nWrôe
<=0 )  -1;

136 
nByãs
 = 
	`£nd
–
m_hComm
, (*)
pBuf
, 
nWrôe
, 
MSG_NOSIGNAL
 );

137 if–
nByãs
 =
ERROR
 )

139 
	`≥º‹
( "send" ) ;

140 
m_bC⁄√t
 = 0;

143  
nByãs
;

144 
	}
}

146 
	gCT˝Clõ¡
::
	$AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 )

148 
nByãs
 = 0;

149 
fd_£t
 
rfds
;

150 
timevÆ
 
tv
;

152 if–!
	`IsP‹tVÆid
(Ë|| 
nRód
<=0 )  -1;

153 
	`FD_ZERO
(&
rfds
);

154 
	`FD_SET
(
m_hComm
, &
rfds
);

155 
tv
.
tv_£c
 = 0;

156 
tv
.
tv_u£c
 = 10000;

157  
	`£À˘
(
m_hComm
+1, &
rfds
, 
NULL
, NULL, &
tv
) )

159 
ERROR
:

160 
m_bC⁄√t
 = 0;

165 if(
	`FD_ISSET
(
m_hComm
, &
rfds
))

167 
nByãs
 = 
	`ªcv
–
m_hComm
, (*)
pBuf
, 
nRód
, 0 );

168 if–
nByãs
 =
ERROR
 )

170 if–
nByãs
 == 0 )

171 
	`Clo£P‹t
() ;

175  
nByãs
;

176 
	}
}

178 
	gCT˝Clõ¡
::
	$AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 )

181 
	}
}

183 
BOOL
 
	gCT˝Clõ¡
::
	$Pög
–* 
cIp
 )

190  
TRUE
 ;

191 
	}
}

193 
BOOL
 
	gCT˝Clõ¡
::
	$SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 )

195 if–!
pPr›îty
 )

197 
	`Q_ASSERT
–
FALSE
 ) ;

198  
FALSE
 ;

201 if–
pPr›îty
->
m_ComTy≥
 !
Pr›îty
::
LAN_CLIENT
 )

203 
	`Q_ASSERT
–
FALSE
 );

204  
FALSE
 ;

207 
LAN_CLIENT_Pr›îty
 * 
pL™Pr›îty
 = ( LAN_CLIENT_Pr›îty *)
pPr›îty
 ;

208 
m_uTheP‹t
 = 
pL™Pr›îty
->
wP‹tNo
 ;

209 
	`°r˝y
–
m_szAârib
 , 
pL™Pr›îty
->
˛õ¡Ip
 ) ;

211  
TRUE
 ;

212 
	}
}

	@ComPort/TcpClient.h

6 #i‚de‡
_TCPCLIENT_H_


7 
	#_TCPCLIENT_H_


	)

9 
	~<√töë/ö.h
>

11 
	~"ccomp‹t.h
"

13 ˛as†
	cCT˝Clõ¡
 : 
public
 
CComP‹t


15 
public
:

16 
CT˝Clõ¡
();

17 
	mvútuÆ
 ~
CT˝Clõ¡
();

18 
vútuÆ
 
BOOL
 
IsP‹tVÆid
( );

19 
vútuÆ
 
BOOL
 
O≥nP‹t
–* 
ÕszEº‹
=
NULL
 );

20 
vútuÆ
 
Clo£P‹t
( );

21 
vútuÆ
 
RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 );

22 
vútuÆ
 
WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 );

23 
vútuÆ
 
AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 );

24 
vútuÆ
 
AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 );

25 
vútuÆ
 
BOOL
 
C⁄√˘
( );

26 
vútuÆ
 
BOOL
 
SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 );

27 
	m¥Ÿe˘ed
:

28 
m_hComm
 ;

29 
UINT
 
	mm_uTheP‹t
;

30 
	mm_szAârib
[32];

32 
	mm_szRemŸeAddr
[24];

33 
BOOL
 
	mm_bC⁄√t
 ;

34 
sockaddr_ö
 
	mm_RemŸeAddr
;

35 
BOOL
 
Pög
–* 
cIp
 ) ;

	@ComPort/TcpListen.cpp

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

9 
	~<f˙é.h
>

10 
	~<ãrmios.h
>

11 
	~<˘y≥.h
>

12 
	~<sys/io˘l.h
>

13 
	~<sys/mm™.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<sys/∑øm.h
>

16 
	~<sys/°©.h
>

17 
	~<sys/time.h
>

18 
	~<sig«l.h
>

19 
	~<î∫o.h
>

20 
	~<√töë/ö.h
>

21 
	~<sys/sockë.h
>

22 
	~<¨∑/öë.h
>

23 
	~<√tdb.h
>

25 
	~"T˝Li°í.h
"

27 
	#SERVER_MAX_CONNECTIONS
 4

	)

28 
	#ERROR
 -1

	)

30 * 
	$T˝SvrTask
(*
pLi°íObj
)

32 ((
CT˝Li°í
*)
pLi°íObj
)->
	`W‹kTaskProc
();

33 
	`±hªad_exô
(0);

34  
NULL
;

35 
	}
}

37 
	gCT˝Li°í
::
	$CT˝Li°í
()

39 
m_nTheP‹t
 = 3066;

40 
m_hSockë
 = 
ERROR
;

41 
m_pAc˚±Obj
 = 
NULL
;

42 
m_nAddrSize
 = (
sockaddr_ö
);

43 
m_tTaskID
 = 0;

44 
m_bTaskRun
 = 
FALSE
;

45 
	}
}

47 
	gCT˝Li°í
::~
	$CT˝Li°í
()

49 
	`RunExô
();

50 
	}
}

52 
BOOL
 
	gCT˝Li°í
::
	$IsObjVÆid
( )

54 if(
m_hSockë
 <0Ë 
FALSE
;

55  
TRUE
;

56 
	}
}

58 
	gCT˝Li°í
::
	$Rñó£Obj
( )

60 if(
m_hSockë
<=0) ;

61 
	`˛o£
(
m_hSockë
);

62 
m_hSockë
 = 
ERROR
;

63 
	}
}

65 
	gCT˝Li°í
::
	$RunExô
( )

67 
m_bTaskRun
 = 
FALSE
;

68 if–
m_tTaskID
 >= 0 )

73 
	`Rñó£Obj
();

74 
m_pAc˚±Obj
 = 
NULL
;

75 
	}
}

77 
BOOL
 
	gCT˝Li°í
::
	$Cª©eObj
–* 
ÕszEº‹
 )

79 
nVÆ
=0;

80 
sockaddr_ö
 
loˇlAddr
;

83 if–(
m_hSockë
=
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0))==
ERROR
 )

85 if–
ÕszEº‹
 )

86 
	`•rötf
–
ÕszEº‹
, "CTcpListen: %s", "Create socketÉrror!" );

87  
FALSE
;

90 
m_nAddrSize
 = (
sockaddr_ö
);

91 
	`bzîo
((*)&
loˇlAddr
, 
m_nAddrSize
);

92 
loˇlAddr
.
sö_Ámûy
 = 
AF_INET
;

93 
loˇlAddr
.
sö_p‹t
 = 
	`ht⁄s
(
m_nTheP‹t
);

94 
loˇlAddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
m_szLoˇlAddr
);

96 
nVÆ
 = 1;

97 
	`£tsock›t
(
m_hSockë
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*)&
nVÆ
, (nVal));

99 if–
	`böd
(
m_hSockë
, (
sockaddr
 *)&
loˇlAddr
, 
m_nAddrSize
Ë=
ERROR
 )

101 if–
ÕszEº‹
 )

102 
	`•rötf
–
ÕszEº‹
, "CT˝Li°í: böd(%s:%dËîr‹!", 
m_szLoˇlAddr
, 
m_nTheP‹t
 );

103 
	`˛o£
(
m_hSockë
);

104 
m_hSockë
 = 
ERROR
;

105  
FALSE
;

108 if–
	`li°í
(
m_hSockë
, 
SERVER_MAX_CONNECTIONS
Ë=
ERROR
 )

110 if–
ÕszEº‹
 )

111 
	`•rötf
–
ÕszEº‹
, "CTcpListen:Üisten()Érror!" );

112 
	`˛o£
(
m_hSockë
);

113 
m_hSockë
 = 
ERROR
;

114  
FALSE
;

116 if–
ÕszEº‹
 )

117 
	`•rötf
–
ÕszEº‹
, "CT˝Li°í::Cª©eObj(%s:%dËok.", 
m_szLoˇlAddr
, 
m_nTheP‹t
 );

118  
TRUE
;

119 
	}
}

121 
BOOL
 
	gCT˝Li°í
::
	$SèπRun
–
CDñeg©eBa£
* 
ÕAc˚±Obj
 )

123 
m_pAc˚±Obj
 = 
ÕAc˚±Obj
;

124 
m_bTaskRun
 = 
TRUE
;

125 if–(
m_tTaskID
 = 
	`±hªad_¸óã
(&
m_tThªadID
, 
NULL
, 
T˝SvrTask
, (*)
this
)) < 0 )

127 
	`¥ötf
–"****CT˝Li°í(%s:%d).SèπRun(ËFaûuª****\n", 
m_szLoˇlAddr
, 
m_nTheP‹t
);

128  
FALSE
;

130 
	`¥ötf
("****CT˝Li°í(%s:%d).SèπRun(Ësuc˚ss****\n", 
m_szLoˇlAddr
, 
m_nTheP‹t
);

131  
TRUE
;

132 
	}
}

137 
	gCT˝Li°í
::
	$W‹kTaskProc
()

139 
hClõ¡Fd
;

140 
sockAddrSize
;

143 
	`¥ötf
((*)"****CTcpListen::WorkTaskProc() Run****");

144 
sockAddrSize
 = (
sockaddr_ö
);

145 
m_bTaskRun
)

147 if–!
	`IsObjVÆid
() )

149 
	`Cª©eObj
();

154 if–(
hClõ¡Fd
 = 
	`ac˚±
–
m_hSockë
,

155 (
sockaddr
*)&
m_Clõ¡Addr
,

156 (
sockÀn_t
*)&
sockAddrSize
ËË=
ERROR
 )

158 
	`Rñó£Obj
();

161 if–
m_pAc˚±Obj
 )

163 
	`•rötf
(
m_szRemŸeAddr
, "%s", 
	`öë_¡ﬂ
(
m_Clõ¡Addr
.
sö_addr
) );

164 
m_pAc˚±Obj
->
	`Ac˚±Proc
–
hClõ¡Fd
, 
m_nTheP‹t
,

165 
m_szRemŸeAddr
, 
m_szLoˇlAddr
 );

169 
	`˛o£
(
hClõ¡Fd
);

172 
	`u¶ìp
(500000);

174 
	}
}

	@ComPort/TcpListen.h

6 #i‚de‡
_TCPLISTEN_H_


7 
	#_TCPLISTEN_H_


	)

9 
	~<ve˘‹
>

10 
	~<√töë/ö.h
>

11 
	~<±hªad.h
>

12 
	~<uni°d.h
>

14 
	~"../Ty≥def.h
"

16 (*
	tACCEPTPROC
)(, , *, * );

19 ˛as†
	cCDñeg©eBa£


21 
public
:

22 
	$CDñeg©eBa£
(){}

23 
vútuÆ
 
BOOL
 
	$Ac˚±Proc
(
hSockë
, 
nP‹t
,

24 * 
ÕszRemŸe
, * 
ÕszLoˇl
Ë{
	`˛o£
(
hSockë
);  
FALSE
;
	}
}

25 
	gvútuÆ
 ~
	$CDñeg©eBa£
(Ë{ 
	}
}

30 ˛as†
	cCT˝Li°í


33 
	mpublic
:

34 
CT˝Li°í
();

35 
	mvútuÆ
 ~
CT˝Li°í
();

36 * 
	$CœssName
(){ (*)"CTcpListen";}

39 
¥iv©e
:

40 
m_nAddrSize
;

41 
sockaddr_ö
 
m_Clõ¡Addr
;

43 
¥Ÿe˘ed
:

44 
CDñeg©eBa£
* 
m_pAc˚±Obj
;

45 
HANDLE
 
m_hSockë
;

47 
public
:

48 
m_nTheP‹t
;

49 
m_szLoˇlAddr
[24];

50 
m_szRemŸeAddr
[24];

52 
BOOL
 
m_bTaskRun
;

53 
m_tTaskID
;

54 
±hªad_t
 
m_tThªadID
;

57 
public
:

58 
	`RunExô
( );

59 
BOOL
 
	`IsObjVÆid
( );

60 
BOOL
 
	`Cª©eObj
–* 
ÕszEº‹
=
NULL
 );

61 
	`Rñó£Obj
( );

62 
BOOL
 
	`SèπRun
–
CDñeg©eBa£
* 
ÕAc˚±Obj
 );

63 
	`W‹kTaskProc
( );

64 
	}
};

66 
	g°d
::
	tve˘‹
<
	tCT˝Li°í
*> 
	tCT˝PåVe˘‹
;

67 
	gCT˝PåVe˘‹
::
	tôî©‹
 
	tT˝Iãøt‹
;

	@ComPort/TcpPort.cpp

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

9 
	~<f˙é.h
>

10 
	~<ãrmios.h
>

11 
	~<˘y≥.h
>

12 
	~<sys/io˘l.h
>

13 
	~<sys/mm™.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<sys/∑øm.h
>

16 
	~<sys/°©.h
>

17 
	~<sys/time.h
>

18 
	~<sig«l.h
>

19 
	~<î∫o.h
>

20 
	~<√töë/ö.h
>

21 
	~<sys/sockë.h
>

22 
	~<¨∑/öë.h
>

23 
	~<√tdb.h
>

25 
	~"T˝P‹t.h
"

29 
	gCT˝P‹t
::
	$CT˝P‹t
()

31 
m_nSèã
 = 0;

32 
m_uTheP‹t
 = 3066;

33 
m_hComm
 = 
ERROR
;

34 
	`mem£t
–
m_szAârib
 , 0 ,(m_szAttrib ) );

35 
m_nAddrSize
 = (
sockaddr_ö
);

36 
	`bzîo
((*)&
m_RemŸeAddr
, 
m_nAddrSize
);

37 
m_RemŸeAddr
.
sö_Ámûy
 = 
AF_INET
;

38 
	}
}

40 
	gCT˝P‹t
::~
	$CT˝P‹t
()

42 
	`Clo£P‹t
();

43 
	}
}

45 
BOOL
 
	gCT˝P‹t
::
	$IsP‹tVÆid
( )

47 if(
m_hComm
 <0Ë 
FALSE
;

48 if(
m_nSèã
 <0Ë 
FALSE
;

49  
TRUE
;

50 
	}
}

52 
	gCT˝P‹t
::
	$Clo£P‹t
( )

54 if(
m_hComm
==
ERROR
) ;

55 
	`shutdown
(
m_hComm
, 2);

56 
	`˛o£
(
m_hComm
);

57 
m_hComm
 = 
ERROR
;

58 
m_nSèã
 = 0;

59 
	}
}

61 
	gCT˝P‹t
::
	$Aâach
–
hSockë
 )

63 if–
m_hComm
 >= 0 )

65 
	`shutdown
(
m_hComm
, 2);

66 
	`˛o£
(
m_hComm
);

67 
m_hComm
 = 
ERROR
;

69 
m_hComm
 = 
hSockë
;

70 
m_nSèã
 = 1;

71 
	}
}

73 
BOOL
 
	gCT˝P‹t
::
	$C⁄√˘
( )

79 if–
m_hComm
 <0 )  
FALSE
;

80 if–
	`c⁄√˘
–
m_hComm
,

81 (
sockaddr
*)&
m_RemŸeAddr
,

82 (
m_RemŸeAddr
ËË=
ERROR
 )

84  
FALSE
;

86 
m_nSèã
 = 1;

87  
TRUE
;

88 
	}
}

90 
BOOL
 
	gCT˝P‹t
::
	$O≥nP‹t
–* 
ÕszEº‹
 )

92 
nVÆ
;

93 
sockaddr_ö
 
loˇlAddr
;

97 
	`mem˝y
(
m_szRemŸeAddr
, 
m_szAârib
, 24);

98 if–(
m_hComm
=
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0))==
ERROR
 )

100 if–
ÕszEº‹
 )

101 
	`•rötf
–
ÕszEº‹
, "CTcpPort: %s", "Create socketÉrror!" );

102  
FALSE
;

105 
nVÆ
 = 1;

106 
	`£tsock›t
(
m_hComm
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*)&
nVÆ
, (nVal));

108 
nVÆ
 = 
MAX_TCP_SIZE
;

109 
	`£tsock›t
(
m_hComm
, 
SOL_SOCKET
, 
SO_RCVBUF
, (*)&
nVÆ
, (nVal));

111 
	`bzîo
((*)&
loˇlAddr
, 
m_nAddrSize
);

112 
loˇlAddr
.
sö_Ámûy
 = 
AF_INET
;

113 
loˇlAddr
.
sö_p‹t
 = 
	`ht⁄s
(()
m_uTheP‹t
);

114 
loˇlAddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
m_szLoˇlAddr
);

116 if–
	`böd
(
m_hComm
, (
sockaddr
 *)&
loˇlAddr
, (sockaddr)Ë=
ERROR
 )

118 if–
ÕszEº‹
 )

119 
	`•rötf
–
ÕszEº‹
, "CT˝P‹t: Böd(%sËîr‹!", 
m_szLoˇlAddr
 );

120 
	`˛o£
(
m_hComm
);

121 
m_hComm
 = 
ERROR
;

122  
FALSE
;

128 
m_RemŸeAddr
.
sö_p‹t
 = 
	`ht⁄s
(()
m_uTheP‹t
);

129 
m_RemŸeAddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
m_szRemŸeAddr
);

130 if–
ÕszEº‹
 )

131 
	`•rötf
–
ÕszEº‹
, "›íÅ˝%d i¿%†ok.", 
m_uTheP‹t
, 
m_szLoˇlAddr
 );

132  
TRUE
;

133 
	}
}

135 
BOOL
 
	gCT˝P‹t
::
	$SëQueue
–
DWORD
 
dwInQueueSize
, DWORD 
dwOutQueueSize
 )

144  
TRUE
;

145 
	}
}

147 
	gCT˝P‹t
::
	$GëInQueue
( )

149 
nByãs
 = 0;

150 if–!
	`IsP‹tVÆid
() )  -1;

151 
	`io˘l
(
m_hComm
, 
FIONREAD
, ()&
nByãs
);

152  
nByãs
;

153 
	}
}

155 
	gCT˝P‹t
::
	$GëOutQueue
( )

158 
	}
}

160 
	gCT˝P‹t
::
	$RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 )

162 
nByãs
 = 0;

164 if–!
	`IsP‹tVÆid
(Ë|| 
nRód
<=0 )  -1;

165 
nByãs
 = 
	`ªcv
–
m_hComm
, (*)
pBuf
, 
nRód
, 0 );

166 if–
nByãs
 =
ERROR
 )

168 
m_nSèã
 = 0;

171  
nByãs
;

172 
	}
}

174 
	gCT˝P‹t
::
	$WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 )

176 if–!
	`IsP‹tVÆid
(Ë|| 
nWrôe
<=0 )  -1;

177 
nByãs
 = 
	`£nd
–
m_hComm
, (*)
pBuf
, 
nWrôe
, 
MSG_NOSIGNAL
 );

178 if–
nByãs
 =
ERROR
 )

180 
m_nSèã
 = 0;

183  
nByãs
;

184 
	}
}

186 
	gCT˝P‹t
::
	$AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 )

188 
nByãs
 = 0;

189 
fd_£t
 
rfds
;

190 
timevÆ
 
tv
;

192 if–!
	`IsP‹tVÆid
(Ë|| 
nRód
<=0 )  -1;

193 
	`FD_ZERO
(&
rfds
);

194 
	`FD_SET
(
m_hComm
, &
rfds
);

195 
tv
.
tv_£c
 = 0;

196 
tv
.
tv_u£c
 = 10000;

197  
	`£À˘
(
m_hComm
+1, &
rfds
, 
NULL
, NULL, &
tv
) )

199 
ERROR
:

200 
m_nSèã
 = 0;

205 if(
	`FD_ISSET
(
m_hComm
, &
rfds
))

207 
nByãs
 = 
	`ªcv
–
m_hComm
, (*)
pBuf
, 
nRód
, 0 );

208 if–
nByãs
 =
ERROR
 )

210 if–
nByãs
 == 0 )

211 
	`Clo£P‹t
() ;

215  
nByãs
;

216 
	}
}

218 
	gCT˝P‹t
::
	$AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 )

220 
fd_£t
 
wfds
;

221 
timevÆ
 
tv
;

223 if–!
	`IsP‹tVÆid
(Ë|| 
nWrôe
<=0 )  -1;

224 
	`FD_ZERO
(&
wfds
);

225 
	`FD_SET
(
m_hComm
, &
wfds
);

226 
tv
.
tv_£c
 = 3;

227 
tv
.
tv_u£c
 = 0;

228  
	`£À˘
(
m_hComm
+1, 
NULL
, &
wfds
, NULL, &
tv
) )

230 
ERROR
:

231 
m_nSèã
 = 0;

236 if(
	`FD_ISSET
(
m_hComm
, &
wfds
))

237  
	`£nd
(
m_hComm
, (*)
pBuf
, 
nWrôe
, 
MSG_NOSIGNAL
 );

241 
	}
}

	@ComPort/TcpPort.h

7 #i‚de‡
_TCPPORT_H_


8 
	#_TCPPORT_H_


	)

10 
	~<√töë/ö.h
>

11 
	~"ccomp‹t.h
"

13 
	#MAX_TCP_SIZE
 1280

	)

15 ˛as†
	cCT˝P‹t
 : 
public
 
CComP‹t


17 
public
:

18 
CT˝P‹t
();

19 
	mvútuÆ
 ~
CT˝P‹t
();

20 
WORD
 
	mm_uTheP‹t
 ;

21 
	mm_szAârib
[ 100 ] ;

24 
	m¥iv©e
:

25 
m_nSèã
;

26 
	mm_nAddrSize
;

27 
sockaddr_ö
 
	mm_RemŸeAddr
;

28 
	mm_hComm
 ;

29 
	mm_szRemŸeAddr
[24],
	mm_szLoˇlAddr
[24];

31 
	m¥Ÿe˘ed
:

34 
public
:

35 
Aâach
–
hSockë
 );

36 
BOOL
 
C⁄√˘
( );

37 
vútuÆ
 
BOOL
 
IsP‹tVÆid
( );

38 
vútuÆ
 
BOOL
 
O≥nP‹t
–* 
ÕszEº‹
=
NULL
 );

39 
vútuÆ
 
Clo£P‹t
( );

40 
vútuÆ
 
BOOL
 
SëQueue
–
DWORD
 
dwInQueueSize
, DWORD 
dwOutQueueSize
 );

41 
vútuÆ
 
GëInQueue
( );

42 
vútuÆ
 
GëOutQueue
( );

43 
vútuÆ
 
RódP‹t
–
BYTE
 *
pBuf
, 
nRód
 );

44 
vútuÆ
 
WrôeP‹t
–
BYTE
 *
pBuf
, 
nWrôe
 );

45 
vútuÆ
 
AsyRódD©a
–
BYTE
 *
pBuf
, 
nRód
 );

46 
vútuÆ
 
AsySídD©a
–
BYTE
 *
pBuf
, 
nWrôe
 );

	@ComPort/ccomport.cpp

1 
	~"ccomp‹t.h
"

2 
	~"°ru˘uª.h
"

4 
	gCComP‹t
::
	$CComP‹t
()

6 
	}
}

8 
CComP‹t
::~
	$CComP‹t
()

10 
	}
}

12 
BOOL
 
CComP‹t
::
	$IsP‹tVÆid
 ( )

14  
FALSE
;

15 
	}
}

17 
BOOL
 
	gCComP‹t
::
	$O≥nP‹t
 ( * 
ÕszEº‹
 )

19  
FALSE
;

20 
	}
}

22 
	gCComP‹t
::
	$Clo£P‹t
 ( )

25 
	}
}

28 
	gCComP‹t
::
	$RódP‹t
 ( 
BYTE
 *
pBuf
 , 
nRód
 )

31 
	}
}

33 
	gCComP‹t
::
	$WrôeP‹t
 ( 
BYTE
 *
pBuf
 , 
nWrôe
 )

36 
	}
}

39 
	gCComP‹t
::
	$AsyRódD©a
 ( 
BYTE
 *
pBuf
 , 
nRód
 )

42 
	}
}

45 
	gCComP‹t
::
	$AsySídD©a
 ( 
BYTE
 *
pBuf
 , 
nWrôe
 )

48 
	}
}

50 
BOOL
 
	gCComP‹t
::
	$SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 )

52  
FALSE
 ;

53 
	}
}

	@ComPort/ccomport.h

1 #i‚de‡
CCOMPORT_H


2 
	#CCOMPORT_H


	)

3 
	~"../Ty≥def.h
"

4 
	#ERROR
 -1

	)

6 
	gPr›îty
 ;

8 ˛as†
	cCComP‹t


10 
	mpublic
:

11 
CComP‹t
();

12 
	mvútuÆ
 ~
CComP‹t
();

14 
vútuÆ
 
BOOL
 
IsP‹tVÆid
( ) ;

15 
vútuÆ
 
BOOL
 
O≥nP‹t
–* 
ÕszEº‹
=
NULL
 ) ;

16 
vútuÆ
 
Clo£P‹t
( ) ;

17 
vútuÆ
 
RódP‹t
–
BYTE
 *
pBuf
 , 
nRód
 );

18 
vútuÆ
 
WrôeP‹t
–
BYTE
 *
pBuf
 , 
nWrôe
 );

19 
vútuÆ
 
AsyRódD©a
–
BYTE
 *
pBuf
 , 
nRód
 ) ;

20 
vútuÆ
 
AsySídD©a
–
BYTE
 *
pBuf
 , 
nWrôe
 );

21 
vútuÆ
 
BOOL
 
SëPªO≥nP¨a
–
Pr›îty
 * 
pPr›îty
 );

	@Dbase/database.cpp

1 
	~"d©aba£.h
"

10 
	gD©aba£
::
	$D©aba£
 ()

12 
	`¥ötf
 ( "Database constructor\n" );

13 
	}
}

22 
	gD©aba£
::~
	$D©aba£
 ()

24 
	`¥ötf
 ( "Database destructor\n" );

25 
	}
}

38 *
	gD©aba£
::
	$Cª©eDB
 ( *
szDBP©hName
 )

40 
	`¥ötf
 ( "D©aba£ Cª©eDB %s\n", 
szDBP©hName
 );

41  
NULL
;

42 
	}
}

55 
BOOL
 
	gD©aba£
::
	$DñëeDB
 ( *
szDBP©hName
 )

57 
	`¥ötf
 ( "D©aba£ DñëeDB %s\n", 
szDBP©hName
 );

58  
FALSE
;

59 
	}
}

72 * 
	gD©aba£
::
	$O≥nDB
 ( )

74 
	`¥ötf
 ( "Database OpenDB\n" );

75  
NULL
;

76 
	}
}

88 
BOOL
 
	gD©aba£
::
	$Clo£DB
 ( )

90 
	`¥ötf
 ( "Database CloseDB\n" );

91  
FALSE
;

92 
	}
}

105 
BOOL
 
	gD©aba£
::
	$Cª©eDBTabÀ
 ( *
szTabÀName
, *
szTabÀSåu˘
 )

107 
	`¥ötf
 ( "D©aba£ CRóãDBTaBÀ %s\n", 
szTabÀName
 );

108  
FALSE
;

109 
	}
}

123 
BOOL
 
	gD©aba£
::
	$Cª©eDBTabÀIndex
 ( *
szTabÀName
, *
szIndexName
, c⁄° *
szIndex
 )

125 
	`¥ötf
 ( "Database CreateDBTableIndex %s %s %s\n",

126 
szTabÀName
, 
szIndexName
, 
szIndex
);

127  
FALSE
;

128 
	}
}

148 
BOOL
 
	gD©aba£
::
	$In£πDBD©a
 (*
szTabÀName
, 
°rög
 &
In£πBuf
 )

150 
	`¥ötf
 ( "D©aba£ In£πDBD©®%s\n", 
szTabÀName
 );

151  
FALSE
;

152 
	}
}

165 
BOOL
 
	gD©aba£
::
	$DñëeDBD©a
 ( *
szTabÀName
, *
DñëeBuf
 )

167 
	`¥ötf
 ( "D©aba£ DñëeDBD©®%s\n", 
szTabÀName
 );

168  
FALSE
;

169 
	}
}

182 
BOOL
 
	gD©aba£
::
	$Sñe˘DBD©a
–*
szTabÀName
,

183 *
Sñe˘Buf
,

184 –*
func
 )–* 
d©a


185 ,
n_cﬁumn
,

186 ** 
cﬁumn_vÆue
,

187 ** 
cﬁumn_«me
 ),

188 *
d©a
)

191 
	`¥ötf
 ( "D©aba£ Sñe˘Bu‡%s\n", 
szTabÀName
 );

192  
FALSE
;

193 
	}
}

206 
BOOL
 
	gD©aba£
::
	$Upd©eDBD©a
 ( *
szTabÀName
, *
Upd©eBuf
 )

208 
	`¥ötf
 ( "D©aba£ Upd©eBu‡%s\n", 
szTabÀName
 );

209  
FALSE
;

210 
	}
}

222 
BOOL
 
	gD©aba£
::
	$IsDBExi°
 ( )

224 
	`¥ötf
 ( "Database IsDBExist\n" );

225  
FALSE
;

226 
	}
}

238 
BOOL
 
	gD©aba£
::
	$IsDBTabÀExi°
 ( *
szTabÀName
 )

240 
	`¥ötf
 ( "D©aba£ IsDBTabÀExi° %s\n", 
szTabÀName
 );

241  
FALSE
;

242 
	}
}

	@Dbase/database.h

1 #i‚de‡
DATABASE_H


2 
	#DATABASE_H


	)

4 
	~<io°ªam
>

5 
	~<°dio.h
>

6 
	~<ve˘‹
>

7 
	~<°rög.h
>

8 
	~"dba£d©©y≥.h
"

10 
usög
 
«me•a˚
 
	g°d
;

14 ˛as†
	cD©aba£


16 
	mpublic
:

17 
D©aba£
();

18 
	mvútuÆ
 ~
D©aba£
 ();

19 
	mpublic
:

22 
vútuÆ
 *
Cª©eDB
–*
szDBP©hName
 );

24 
vútuÆ
 
BOOL
 
DñëeDB
–*
szDBP©hName
 );

26 
vútuÆ
 * 
O≥nDB
( );

28 
vútuÆ
 
BOOL
 
Clo£DB
( );

30 
vútuÆ
 
BOOL
 
Cª©eDBTabÀ
–*
szTabÀName
, *
szTabÀSåu˘
 );

32 
vútuÆ
 
BOOL
 
Cª©eDBTabÀIndex
–*
szTabÀName
, *
szIndexName
, c⁄° *
szIndex
 );

34 
vútuÆ
 
BOOL
 
In£πDBD©a
–*
szTabÀName
, 
°rög
 &
In£πBuf
 );

38 
vútuÆ
 
BOOL
 
DñëeDBD©a
–*
szTabÀName
, *
DñëeBuf
 );

40 
vútuÆ
 
BOOL
 
Sñe˘DBD©a
–*
szTabÀName
,

41 *
Sñe˘Buf
,

42 –*
func
 )–* 
d©a


43 ,
n_cﬁumn
,

44 ** 
cﬁumn_vÆue
,

45 ** 
cﬁumn_«me
 ),

46 *
d©a
);

48 
vútuÆ
 
BOOL
 
	`Upd©eDBD©a
–*
szTabÀName
, *
Upd©eBuf
 );

51 
vútuÆ
 
BOOL
 
	`IsDBExi°
( );

53 
vútuÆ
 
BOOL
 
	`IsDBTabÀExi°
–*
szTabÀName
 );

56 
¥Ÿe˘ed
:

58 
¥iv©e
:

	@Dbase/dbasedatatype.h

21 #i‚de‡ 
DBASEDATATYPE_INC


22 
	#DBASEDATATYPE_INC


	)

26 
	~"Ty≥def.h
"

35 
	#MAX_DBASE_NAME_LEN
 128

	)

36 
	#MAX_DBASE_HISTORY_TABLE_NAME_LEN
 64

	)

40 
	#SOESTRUCT
 "(ID INTEGER PRIMARY KEY AUTOINCREMENT,\
 i¡16_t , \
 i¡16_t , \
 i¡8_t, \
 ch¨, \
 ch¨, \
 ch¨)"

	)

55 #¥agm®
∑ck
( 1 )

57 
	s_S€D©a


59 
WORD
 
	mBusNo
;

60 
WORD
 
	mDevNo
;

61 
BYTE
 
	mD©aTy≥
;

62 
	mLoˇti⁄
[32];

63 
	mC⁄ã¡
[64];

64 
	mD©eTime
[32];

65 
_S€D©a
()

67 
	mBusNo
 = 0;

68 
	mDevNo
 = 0;

69 
	mD©aTy≥
 = 0xFF;

70 
mem£t
–
Loˇti⁄
 , 0 , (Location) );

71 
mem£t
–
C⁄ã¡
 , 0 , (Content) );

72 
mem£t
–
D©eTime
 , 0 , (DateTime) );

74 }
	tSOEDATA
;

75 #¥agm®
∑ck
( )

	@Dbase/dbasemanager.cpp

22 
	~<°dio.h
>

23 
	~<°rög.h
>

24 
	~<°dlib.h
>

26 
	~"dba£m™agî.h
"

27 
	~"dba£m™agî_s€.h
"

33 
	#DBMANAGER_MOUDLE_SOE
 1

	)

54 
	gCDBa£M™agî
::
	$CDBa£M™agî
 ()

57 
	`mem£t
–
m_szDBP©hName
, 0, 
MAX_DBASE_NAME_LEN
 );

58 
	`mem£t
–
m_szDBTabÀName
, 0,
MAX_DBASE_HISTORY_TABLE_NAME_LEN
 );

59 
m_byMoudÀ
 = 0;

60 
	`°r˝y
–
m_szDBP©hName
, "/media/mmcblk0p1/ePut800Soe.db");

61 
	`°r˝y
–
m_szDBTabÀName
, "Soe");

62 
m_byMoudÀ
 = 
DBMANAGER_MOUDLE_SOE
;

64 
	`¥ötf
 ( "CreateDBMoudle constructor\n" );

65 
	}
}

75 
	gCDBa£M™agî
::~
	$CDBa£M™agî
 ()

77 
	`¥ötf
 ( "CDBaseManager desstructor\n" );

79 if–
NULL
 !
m_pMoudÀ
 )

81 
dñëe
 
m_pMoudÀ
;

82 
m_pMoudÀ
 = 
NULL
;

84 
	}
}

98 
CDBa£M™agî
 * 
	gCDBa£M™agî
::
	$Inô
 ()

112 if–!
	`RódCfgInfo
( ) )

114  
NULL
;

118  
	`Cª©eDBMoudÀ
( );

119 
	}
}

131 
BOOL
 
	gCDBa£M™agî
::
	$RódCfgInfo
 ( )

209  
TRUE
;

210 
	}
}

222 
CDBa£M™agî
 * 
	gCDBa£M™agî
::
	$Cª©eDBMoudÀ
 ( )

224  
m_byMoudÀ
 )

226 
DBMANAGER_MOUDLE_SOE
:

229 
CDBa£M™agî_SOE
 *
pMoudÀ
 = 
√w
 CDBaseManager_SOE;

230 if–
NULL
 =
pMoudÀ
 )

232 
	`¥ötf
 ( "CDBaseManager CreateDBMoudleÇewÉrr!!!\n" );

233  
NULL
;

237 
	`°r˝y
–
pMoudÀ
->
m_szDBP©hName
, m_szDBPathName );

238 
	`°r˝y
–
pMoudÀ
->
m_szDBTabÀName
, m_szDBTableName );

243 
pMoudÀ
->
m_byMoudÀ
 = m_byMoudle;

246 if–
pMoudÀ
->
	`Inô
( ) )

248 
	`¥ötf
 ( "createÉem moudle OK\n" );

249 
m_pMoudÀ
 = ( 
CDBa£M™agî_SOE
 * )
pMoudÀ
;

250  
m_pMoudÀ
;

253 
dñëe
 
pMoudÀ
;

254 
	`¥ötf
 ( "createÉem moudle Error\n" );

255  
NULL
;

261 
	`¥ötf
 ( "not find dbase moudle\n" );

264  
NULL
;

265 
	}
}

276 
	gCDBa£M™agî
::
	$Sñe˘D©aByTime
 ( *
pszBegöTime
, *
pszEndTime
, 
BYTE
 
D©aTy≥
 )

278 
	`¥ötf
 ( "CDBaseManager SelectHistoryDataBytimeÖszBeginTime=%sÖszEndTime=%s\n" ,

279 
pszBegöTime
, 
pszEndTime
);

281 
	}
}

292 
BOOL
 
	gCDBa£M™agî
::
	$Upd©eD©a
 ( * 
d©a
 )

294 
	`¥ötf
 ( "CDBaseManager UpdateHistoryData\n" );

295  
FALSE
;

296 
	}
}

307 
BOOL
 
	gCDBa£M™agî
::
	$In£πD©a
 ( * 
d©a
 )

309 
	`¥ötf
 ( "CDBaseManager InsertHistoryData\n" );

310  
FALSE
;

311 
	}
}

322 
BOOL
 
	gCDBa£M™agî
::
	$DñëeD©a
 ( )

324  
FALSE
;

325 
	}
}

334 
	gCDBa£M™agî
::
	$CÀ¨D©a
()

337 
	}
}

349 * 
CDBa£M™agî
::
	$GëD©a
–
DWORD
 
pos
 )

351  
NULL
;

352 
	}
}

362 
	gCDBa£M™agî
::
	$Sñe˘D©aByBusLöeAndAddr
–
WORD
 
wBusLöe
, WORD 
wAddr
, 
BYTE
 
D©aTy≥
 )

365 
	}
}

375 
	gCDBa£M™agî
::
	$Sñe˘AŒD©a
(
BYTE
 
D©aTy≥
)

378 
	}
}

387 
	gCDBa£M™agî
::
	$Sñe˘Fú°PageOfAŒD©a
–
DWORD
 
d©™um
, 
BYTE
 
D©aTy≥
)

390 
	}
}

399 
	gCDBa£M™agî
::
	$Sñe˘Fú°PageOfD©aByTime
–
DWORD
 
d©™um
, *
pszBegöTime
,*
pszEndTime
, 
BYTE
 
D©aTy≥
)

402 
	}
}

414 
	gCDBa£M™agî
::
	$Sñe˘Fú°PageOfD©aByBusLöeAndAddr
–
DWORD
 
d©™um
, 
WORD
 
wBusLöe
, WORD 
wAddr
, 
BYTE
 
D©aTy≥
 )

418 
	}
}

	@Dbase/dbasemanager.h

22 #i‚de‡ 
DBASEMANAGER_INC


23 
	#DBASEMANAGER_INC


	)

25 
	~"../Ty≥def.h
"

26 
	~"dba£d©©y≥.h
"

28 
	#DBASE_SOE_DATATYPE
 1

29 
	#DBASE_YXALARM_DATATYPE
 2

30 

	)

32 
	#DBMANAGER_MOUDLE_SOE
 1

	)

46 ˛as†
	cCDBa£M™agî


48 
	mpublic
:

50 
CDBa£M™agî
 ();

51 
	mvútuÆ
 ~
CDBa£M™agî
 ();

54 
CDBa£M™agî
 *
Inô
( );

56 
vútuÆ
 
Sñe˘AŒD©a
–
BYTE
 
D©aTy≥
);

58 
vútuÆ
 
Sñe˘Fú°PageOfAŒD©a
(
DWORD
 
d©™um
, 
BYTE
 
D©aTy≥
);

60 
vútuÆ
 
Sñe˘D©aByTime
 ( *
pszBegöTime
, *
pszEndTime
, 
BYTE
 
D©aTy≥
 );

62 
vútuÆ
 
Sñe˘Fú°PageOfD©aByTime
 ( 
DWORD
 
d©™um
, *
pszBegöTime
, *
pszEndTime
, 
BYTE
 
D©aTy≥
 );

64 
vútuÆ
 
Sñe˘D©aByBusLöeAndAddr
 ( 
WORD
 
wBusLöe
 , WORD 
wAddr
 , 
BYTE
 
D©aTy≥
);

66 
vútuÆ
 
Sñe˘Fú°PageOfD©aByBusLöeAndAddr
 ( 
DWORD
 
d©™um
,
WORD
 
wBusLöe
 , WORD 
wAddr
, 
BYTE
 
D©aTy≥
 );

68 
vútuÆ
 
BOOL
 
In£πD©a
 ( *
d©a
 );

70 
vútuÆ
 
BOOL
 
Upd©eD©a
–*
d©a
 );

72 
vútuÆ
 
BOOL
 
DñëeD©a
( );

74 
vútuÆ
 
CÀ¨D©a
( );

76 
	mpublic
:

78 
vútuÆ
 * 
GëD©a
 ( 
DWORD
 
pos
 );

80 
	mpublic
:

82 
m_szDBP©hName
[
MAX_DBASE_NAME_LEN
];

83 
	mm_szDBTabÀName
[
MAX_DBASE_HISTORY_TABLE_NAME_LEN
];

85 
BYTE
 
	mm_byMoudÀ
;

87 
CDBa£M™agî
 *
	mm_pMoudÀ
;

88 
	m¥Ÿe˘ed
:

91 
¥iv©e
:

94 
BOOL
 
RódCfgInfo
( );

96 
CDBa£M™agî
 *
Cª©eDBMoudÀ
( );

	@Dbase/dbasemanager_soe.cpp

1 
	~"dba£m™agî_s€.h
"

2 
	~<sys/time.h
>

15 
	$dba£_£À˘_hi°‹y_d©a_¥o˚ss
 ( * 
d©a
, 
n_cﬁumn
, ** 
cﬁumn_vÆue
, ** 
cﬁumn_«me
 )

17 
SOEDATA
 
TempD©a
;

18 
CDBa£M™agî_SOE
 * 
m_pCDBa£
 = (CDBa£M™agî_SOE *)
d©a
;

19 if–
NULL
 =
m_pCDBa£
 )

24 if–
NULL
=&
m_pCDBa£
->
I¡îru±Sñe˘
 )

29 if–
m_pCDBa£
->
I¡îru±Sñe˘
 =
TRUE
 )

31 
	`¥ötf
("CallbackÑoutineÑequestedánábort \n");

32  
SQLITE_ABORT
;

34 if–
m_pCDBa£
 =
NULL
 )

36 
	`¥ötf
("dbase_select_history_data_callbackÖarameter data = NULL\n");

40 if–
n_cﬁumn
 > 7 )

42 
	`¥ötf
 ( "dbase_select_history_data_callbackÇ_column > 6\n" );

46 
TempD©a
.
BusNo
 = 
	`©oi
–
cﬁumn_vÆue
[1] );

47 
TempD©a
.
DevNo
 = 
	`©oi
–
cﬁumn_vÆue
[2] );

48 
TempD©a
.
D©aTy≥
 = 
	`©oi
–
cﬁumn_vÆue
[3] );

49 
	`°r˝y
–
TempD©a
.
Loˇti⁄
 , 
cﬁumn_vÆue
[4] );

50 
	`°r˝y
–
TempD©a
.
C⁄ã¡
 , 
cﬁumn_vÆue
[5] );

51 
	`°r˝y
–
TempD©a
.
D©eTime
 , 
cﬁumn_vÆue
[6] );

53 
m_pCDBa£
->
m_S€D©a
->
	`push_back
–
TempD©a
 );

55 
m_pCDBa£
->
CuºítAŒPage
 = (–m_pCDBa£->
m_S€D©a
->
	`size
() - 1 ) / 8) +1;

66 
	}
}

79 
	$dba£_£À˘_hi°‹y_d©a_by_bu¢o_devno_¥o˚ss
 ( * 
d©a
, 
n_cﬁumn
, ** 
cﬁumn_vÆue
, ** 
cﬁumn_«me
 )

81 
SOEDATA
 
TempD©a
;

82 
CDBa£M™agî_SOE
 * 
m_pCDBa£
 = (CDBa£M™agî_SOE *)
d©a
;

89 if–
m_pCDBa£
 =
NULL
 )

91 
	`¥ötf
("dbase_select_history_data_callbackÖarameter data = NULL\n");

95 if–
n_cﬁumn
 > 6 )

97 
	`¥ötf
 ( "dbase_select_history_data_callbackÇ_column > 6\n" );

101 
TempD©a
.
BusNo
 = 
	`©oi
–
cﬁumn_vÆue
[1] );

102 
TempD©a
.
DevNo
 = 
	`©oi
–
cﬁumn_vÆue
[2] );

103 
TempD©a
.
D©aTy≥
 = 
	`©oi
–
cﬁumn_vÆue
[3] );

104 
	`°r˝y
–
TempD©a
.
Loˇti⁄
 , 
cﬁumn_vÆue
[4] );

105 
	`°r˝y
–
TempD©a
.
C⁄ã¡
 , 
cﬁumn_vÆue
[5] );

106 
	`°r˝y
–
TempD©a
.
D©eTime
 , 
cﬁumn_vÆue
[6] );

108 
m_pCDBa£
->
m_S€D©a
->
	`push_back
–
TempD©a
 );

111 
	}
}

114 
	gCDBa£M™agî_SOE
::
	$CDBa£M™agî_SOE
()

116 
m_pCDBa£
 = 
NULL
;

117 
m_S€D©a
 = 
NULL
;

118 
I¡îru±Sñe˘
 = 
FALSE
;

119 
Fú°Sñe˘Sèã
 = 
TRUE
;

120 
	`mem£t
(
m_szDBP©hName
,0,(m_szDBPathName));

121 
	`°r˝y
(
m_szDBP©hName
,
SOEDBASEPATH
);

122 
	`mem£t
(
m_szDBTabÀName
,0,(m_szDBTableName));

123 
	`°r˝y
(
m_szDBTabÀName
,
SOEDBTABLENAME
);

124 
CuºítAŒPage
 = 1;

127 
	}
}

129 
	gCDBa£M™agî_SOE
::~
	$CDBa£M™agî_SOE
()

132 if–
m_pCDBa£
->
	`IsDBExi°
( ) )

134 
m_pCDBa£
->
	`Clo£DB
( );

138 if–
NULL
 !
m_pCDBa£
)

140 
dñëe
 
m_pCDBa£
;

141 
m_pCDBa£
 = 
NULL
;

144 if–
NULL
 !
m_S€D©a
 )

146 
m_S€D©a
->
	`˛ór
( );

147 
dñëe
 
m_S€D©a
;

148 
m_S€D©a
 = 
NULL
;

150 
	}
}

152 
BOOL
 
	gCDBa£M™agî_SOE
::
	$Inô
()

154 if–
m_pCDBa£
 =
NULL
 )

156 
m_pCDBa£
 = 
√w
 
	`sqlôe3d©a
();

157 if–
m_pCDBa£
 =
NULL
 )

159 
	`¥ötf
("CDBaseManager_SOEÇewÉrror!\n");

160  
FALSE
;

164 if–!
	`Cª©eDB
(Ë|| !
	`Cª©eDBTabÀAndIndex
() )

166 
	`¥ötf
("CDBaseManager_SOE open fail!\n");

168 if–
NULL
 =
m_S€D©a
 )

170 
m_S€D©a
 = 
√w
 
ve˘‹
<
SOEDATA
>;

171 if–
NULL
 =
m_S€D©a
 )

173 
	`¥ötf
 ( "CDBaseManager_SOE InitVector m_SoeDataÇewÉrr!!!\n" );

178  
TRUE
;

179 
	}
}

181 
BOOL
 
	gCDBa£M™agî_SOE
::
	$Cª©eDB
()

183 
m_pCDBa£
->
	`Cª©eDB
–
m_szDBP©hName
 );

184 if–!
m_pCDBa£
->
	`IsDBExi°
() )

186 
	`¥ötf
("dbase_soe.db create fail!\n");

187  
FALSE
;

189  
TRUE
;

190 
	}
}

192 
BOOL
 
	gCDBa£M™agî_SOE
::
	$Clo£DB
()

194 if–!
m_pCDBa£
->
	`Clo£DB
() )

196 
	`¥ötf
("dbase_soe.db close fail!\n");

197  
FALSE
;

199  
TRUE
;

200 
	}
}

202 
BOOL
 
	gCDBa£M™agî_SOE
::
	$DñëeDB
()

204 
m_pCDBa£
->
	`DñëeDB
–
m_szDBP©hName
 );

205  
TRUE
;

206 
	}
}

217 
BOOL
 
	gCDBa£M™agî_SOE
::
	$Cª©eDBTabÀAndIndex
()

219 
TempBuf
[256] = "";

220 
BOOL
 
bRä
 = 
FALSE
;

224 
	`•rötf
–
TempBuf
, "%s%s", 
m_szDBTabÀName
 , 
SOESTRUCT
 );

225 
m_pCDBa£
->
	`Cª©eDBTabÀ
–
m_szDBTabÀName
, 
TempBuf
 );

226 
bRä
 = 
m_pCDBa£
->
	`IsDBTabÀExi°
–
m_szDBTabÀName
 );

227 i‡–!
bRä
 )

229 
	`¥ötf
 ( "CDBaseManager_SOE Init CreateDBTable %sÉrr!!!\n",

230 
m_szDBTabÀName
);

231  
FALSE
;

236 
	`•rötf
–
TempBuf
, "%s.ödex", 
m_szDBTabÀName
 );

237 
bRä
 = 
m_pCDBa£
->
	`Cª©eDBTabÀIndex
–
m_szDBTabÀName
 ,

238 
TempBuf
 ,

239 
SOEDBTABLEINDEXDATA
 );

240 if–!
bRä
 )

242 
	`¥ötf
 ( "CDBaseManager_SOE Init CreateDBTable DataType_DataTime Index %sÉrr!!!\n",

243 
m_szDBTabÀName
);

244  
FALSE
;

247 
	`•rötf
–
TempBuf
, "%s1.ödex", 
m_szDBTabÀName
 );

248 
bRä
 = 
m_pCDBa£
->
	`Cª©eDBTabÀIndex
–
m_szDBTabÀName
 ,

249 
TempBuf
 ,

250 
SOEDBTABLEINDEXNO
);

251 if–!
bRä
 )

253 
	`¥ötf
 ( "CDBaseManager_SOE Init CreateDBTable BusNo_DevNo Index %sÉrr!!!\n",

254 
m_szDBTabÀName
);

255  
FALSE
;

258 
	`•rötf
–
TempBuf
, "%s2.ödex", 
m_szDBTabÀName
 );

259 
bRä
 = 
m_pCDBa£
->
	`Cª©eDBTabÀIndex
–
m_szDBTabÀName
 ,

260 
TempBuf
 ,

261 
SOEDBTABLEDATATIME
);

262 if–!
bRä
 )

264 
	`¥ötf
 ( "CDBaseManager_SOE Init CreateDBTable BusNo_DevNo Index %sÉrr!!!\n",

265 
m_szDBTabÀName
);

266  
FALSE
;

269 
	`•rötf
–
TempBuf
, "%s3.ödex", 
m_szDBTabÀName
 );

270 
bRä
 = 
m_pCDBa£
->
	`Cª©eDBTabÀIndex
–
m_szDBTabÀName
 ,

271 
TempBuf
 ,

273 if–!
bRä
 )

275 
	`¥ötf
 ( "CDBaseManager_SOE Init CreateDBTable BusNo_DevNo Index %sÉrr!!!\n",

276 
m_szDBTabÀName
);

277  
FALSE
;

280 
	`•rötf
–
TempBuf
, "%s4.ödex", 
m_szDBTabÀName
 );

281 
bRä
 = 
m_pCDBa£
->
	`Cª©eDBTabÀIndex
–
m_szDBTabÀName
 ,

282 
TempBuf
 ,

283 
SOEDBTABLEDATATYPE
);

284 if–!
bRä
 )

286 
	`¥ötf
 ( "CDBaseManager_SOE Init CreateDBTable datatype Index %sÉrr!!!\n",

287 
m_szDBTabÀName
);

288  
FALSE
;

290  
TRUE
;

291 
	}
}

303 
BOOL
 
	gCDBa£M™agî_SOE
::
	$In£πD©a
 ( *
d©a
 )

305 
°rög
 
In£πBuf
;

306 
szTmpBuf
[1024];

308 
SOEDATA
 *
pd©a
 = (SOEDATA *)
d©a
;

313 
	`•rötf
–
szTmpBuf
,

315 
	`vÆues
 (
NULL
, %
u
, %u, %u,'%s','%s','%s' );\
n
",

316 
m_szDBTabÀName
, 
pd©a
->
BusNo
 ,Öd©a->
DevNo
 ,Öd©a->
D©aTy≥
 ,Öd©a->
Loˇti⁄
 ,Öd©a->
C⁄ã¡
 ,Öd©a->
D©eTime
 );

318 
In£πBuf
 +
szTmpBuf
;

320  
m_pCDBa£
->
	`In£πDBD©a
–
m_szDBTabÀName
 , 
In£πBuf
 );

321 
	}
}

330 
	gCDBa£M™agî_SOE
::
	$Sñe˘AŒD©a
–
BYTE
 
D©aTy≥
 )

332 
Sñe˘Buf
[256] = "";

333 
	`•rötf
–
Sñe˘Buf
, "whîêD©aTy≥=%d ordî by ID DESC", 
D©aTy≥
 );

334 
m_S€D©a
->
	`˛ór
();

336 if–!
m_pCDBa£
->
	`IsDBExi°
() )

338 
	`¥ötf
("dbase_soe.db create fail!\n");

344 if–!
m_pCDBa£
->
	`Sñe˘DBD©a
–
m_szDBTabÀName
,

345 
Sñe˘Buf
,

346 
dba£_£À˘_hi°‹y_d©a_¥o˚ss
,

347 
this
) )

349 
	`¥ötf
 ( "CDBaseManager_SOE SelectDataByDataTypeÉrr!!!\n" );

353  
m_S€D©a
->
	`size
();

354 
	}
}

363 
	gCDBa£M™agî_SOE
::
	$Sñe˘Fú°PageOfAŒD©a
–
DWORD
 
d©™um
, 
BYTE
 
D©aTy≥
)

365 
Sñe˘Buf
[256] = "";

366 
m_S€D©a
->
	`˛ór
();

368 if–!
m_pCDBa£
->
	`IsDBExi°
() )

370 
	`¥ötf
("dbase_soe.db create fail!\n");

374 
	`•rötf
–
Sñe˘Buf
, "whîêD©aTy≥=%d ordî by ID DESCÜimô %lu", 
D©aTy≥
, 
d©™um
 );

376 if–!
m_pCDBa£
->
	`Sñe˘DBD©a
–
m_szDBTabÀName
,

377 
Sñe˘Buf
,

378 
dba£_£À˘_hi°‹y_d©a_¥o˚ss
,

379 
this
) )

381 
	`¥ötf
 ( "CDBaseManager_SOE SelectDataByDataTypeÉrr!!!\n" );

385  
m_S€D©a
->
	`size
();

386 
	}
}

398 
	gCDBa£M™agî_SOE
::
	$Sñe˘D©aByBusLöeAndAddr
 ( 
WORD
 
wBusLöe
 , WORD 
wAddr
 , 
BYTE
 
D©aTy≥
)

400 
Sñe˘Buf
[256] = "";

401 
m_S€D©a
->
	`˛ór
();

403 if–!
m_pCDBa£
->
	`IsDBExi°
() )

405 
	`¥ötf
("dbase_soe.db create fail!\n");

409 
	`•rötf
–
Sñe˘Buf
, "whîê%s=%uánd %s=%uánd D©aTy≥=%d ordî by ID DESC",
D©aTy≥
 , 
SOEDBTABLEBUSNO
 ,

410 
wBusLöe
 , 
SOEDBTABLEDEVNO
 , 
wAddr
 );

412 if–!
m_pCDBa£
->
	`Sñe˘DBD©a
–
m_szDBTabÀName
,

413 
Sñe˘Buf
,

414 
dba£_£À˘_hi°‹y_d©a_by_bu¢o_devno_¥o˚ss
,

415 
this
) )

417 
	`¥ötf
 ( "CDBaseManager_SOE SelectDataByDataTypeÉrr!!!\n" );

420  
m_S€D©a
->
	`size
();

421 
	}
}

433 
	gCDBa£M™agî_SOE
::
	$Sñe˘Fú°PageOfD©aByBusLöeAndAddr
–
DWORD
 
d©™um
, 
WORD
 
wBusLöe
, WORD 
wAddr
, 
BYTE
 
D©aTy≥
 )

435 
Sñe˘Buf
[256] = "";

436 
m_S€D©a
->
	`˛ór
();

438 if–!
m_pCDBa£
->
	`IsDBExi°
() )

440 
	`¥ötf
("dbase_soe.db create fail!\n");

444 
	`•rötf
–
Sñe˘Buf
, "whîê%s=%uánd %s=%uánd D©aTy≥=%d ordî by ID DESCÜimô %lu", 
SOEDBTABLEBUSNO
 ,

445 
wBusLöe
 , 
SOEDBTABLEDEVNO
 , 
wAddr
 , 
d©™um
 );

447 if–!
m_pCDBa£
->
	`Sñe˘DBD©a
–
m_szDBTabÀName
,

448 
Sñe˘Buf
,

449 
dba£_£À˘_hi°‹y_d©a_by_bu¢o_devno_¥o˚ss
,

450 
this
) )

452 
	`¥ötf
 ( "CDBaseManager_SOE SelectDataByDataTypeÉrr!!!\n" );

455  
m_S€D©a
->
	`size
();

457 
	}
}

469 
	gCDBa£M™agî_SOE
::
	$Sñe˘D©aByTime
 ( *
pszBegöTime
, *
pszEndTime
, 
BYTE
 
D©aTy≥
 )

471 
Sñe˘Buf
[256] = "";

472 
m_S€D©a
->
	`˛ór
();

473 
I¡îru±Sñe˘
 = 
FALSE
;

475 if–!
m_pCDBa£
->
	`IsDBExi°
() )

477 
	`¥ötf
("dbase_soe.db create fail!\n");

481 
	`•rötf
–
Sñe˘Buf
, "whîêD©aTy≥=%dánd %†bëwì¿d©ëime('%s'Ë™d d©ëime('%s'Ë", 
D©aTy≥
,

482 
SOEDBTABLEDATATIME
 , 
pszBegöTime
 , 
pszEndTime
 );

492 
TempOrdîBuf
[256] = " order by ID DESC";

502 
	`°rˇt
–
Sñe˘Buf
 , 
TempOrdîBuf
 );

504 if–!
m_pCDBa£
->
	`Sñe˘DBD©a
–
m_szDBTabÀName
,

505 
Sñe˘Buf
,

506 
dba£_£À˘_hi°‹y_d©a_¥o˚ss
,

507 
this
) )

509 
	`¥ötf
 ( "CDBaseManager_SOE SelectDataByDataTypeÉrr!!!\n" );

513  
m_S€D©a
->
	`size
();

514 
	}
}

523 
	gCDBa£M™agî_SOE
::
	$Sñe˘Fú°PageOfD©aByTime
–
DWORD
 
d©™um
, *
pszBegöTime
, * 
pszEndTime
, 
BYTE
 
D©aTy≥
)

525 
Sñe˘Buf
[256] = "";

526 
m_S€D©a
->
	`˛ór
();

527 
I¡îru±Sñe˘
 = 
FALSE
;

529 if–!
m_pCDBa£
->
	`IsDBExi°
() )

531 
	`¥ötf
("dbase_soe.db create fail!\n");

535 
	`•rötf
–
Sñe˘Buf
, "whîêD©aTy≥ = %dánd %†bëwì¿d©ëime('%s'Ë™d d©ëime('%s')",
D©aTy≥
,

536 
SOEDBTABLEDATATIME
 , 
pszBegöTime
 , 
pszEndTime
 );

539 
TempOrdîBuf
[256] = "";

540 
	`•rötf
–
TempOrdîBuf
, " ordî by ID DESCÜimô %lu", 
d©™um
 );

542 
	`°rˇt
–
Sñe˘Buf
 , 
TempOrdîBuf
 );

544 if–!
m_pCDBa£
->
	`Sñe˘DBD©a
–
m_szDBTabÀName
,

545 
Sñe˘Buf
,

546 
dba£_£À˘_hi°‹y_d©a_¥o˚ss
,

547 
this
) )

549 
	`¥ötf
 ( "CDBaseManager_SOE SelectDataByDataTypeÉrr!!!\n" );

553  
m_S€D©a
->
	`size
();

554 
	}
}

556 * 
	gCDBa£M™agî_SOE
::
	$GëD©a
 ( 
DWORD
 
pos
 )

558 
DWORD
 
size
 = 
m_S€D©a
->
	`size
();

559 if–
pos
 >
size
 )

560  
NULL
;

562 
SOEDATA
 * 
TempD©a
 = &
m_S€D©a
->
	`©
(
pos
);

563  
TempD©a
;

564 
	}
}

566 
	gCDBa£M™agî_SOE
::
	$CÀ¨D©a
 ( )

568 
m_S€D©a
->
	`˛ór
();

569 
	}
}

	@Dbase/dbasemanager_soe.h

1 #i‚def 
DBASEMANGER_SOE_H


2 
	#DBASEMANGER_SOE_H


	)

4 
	~<±hªad.h
>

5 
	~<°dlib.h
>

6 
	~"sqlôe3dba£.h
"

7 
	~"dba£m™agî.h
"

10 
	#SOEDBASEPATH
 "./S€Dba£.db"

	)

11 
	#SOEDBTABLENAME
 "S€TabÀ"

	)

12 
	#SOEDBREALTIMETABLENAME
 "RólTimeS€TabÀ"

	)

13 
	#SOEDBTABLEINDEXDATA
 "D©aTy≥,D©eTime"

	)

14 
	#SOEDBTABLEINDEXNO
 "BusNo,DevNo"

	)

15 
	#SOEDBTABLEDATATYPE
 "D©aTy≥"

	)

16 
	#SOEDBTABLEDATATIME
 "D©eTime"

	)

17 
	#SOEDBTABLEBUSNO
 "BusNo"

	)

18 
	#SOEDBTABLEDEVNO
 "DevNo"

	)

19 
	#SOEDBTABLEPOINTNO
 "PoötNo"

	)

20 
	#REALTIMEDBTABLINDEX
 "BusNo,DevNo,PoötNo"

	)

25 ˛as†
	cCDBa£M™agî_SOE
 : 
public
 
CDBa£M™agî


27 
public
 :

28 
CDBa£M™agî_SOE
();

29 ~
CDBa£M™agî_SOE
();

32 
vútuÆ
 
BOOL
 
Inô
( );

35 
vútuÆ
 
Sñe˘AŒD©a
–
BYTE
 
D©aTy≥
);

37 
vútuÆ
 
Sñe˘Fú°PageOfAŒD©a
(
DWORD
 
d©™um
, 
BYTE
 
D©aTy≥
 );

39 
vútuÆ
 
Sñe˘D©aByTime
 ( *
pszBegöTime
, *
pszEndTime
 , 
BYTE
 
D©aTy≥
);

41 
vútuÆ
 
Sñe˘Fú°PageOfD©aByTime
 (
DWORD
 
d©™um
, *
pszBegöTime
, *
pszEndTime
 , 
BYTE
 
D©aTy≥
);

43 
vútuÆ
 
Sñe˘D©aByBusLöeAndAddr
 ( 
WORD
 
wBusLöe
 , WORD 
wAddr
 , 
BYTE
 
D©aTy≥
);

45 
vútuÆ
 
Sñe˘Fú°PageOfD©aByBusLöeAndAddr
 (
DWORD
 
d©™um
, 
WORD
 
wBusLöe
 , WORD 
wAddr
 , 
BYTE
 
D©aTy≥
);

47 
vútuÆ
 
BOOL
 
In£πD©a
 ( *
d©a
 );

49 
vútuÆ
 * 
GëD©a
 ( 
DWORD
 
Pos
 );

51 
vútuÆ
 
CÀ¨D©a
( );

53 
	m¥iv©e
 :

55 
BOOL
 
Cª©eDB
( );

57 
BOOL
 
Clo£DB
( );

59 
BOOL
 
DñëeDB
( );

61 
BOOL
 
Cª©eDBTabÀAndIndex
( );

63 
	mpublic
:

65 
D©aba£
 *
m_pCDBa£
;

66 
±hªad_t
 
	mm_In£πHi°‹yThªadId
;

69 
	mpublic
:

70 
BOOL
 
I¡îru±Sñe˘
;

71 
BOOL
 
	mFú°Sñe˘Sèã
;

72 
WORD
 
	mCuºítAŒPage
;

73 
	mve˘‹
<
	mSOEDATA
> * 
	mm_S€D©a
;

	@Dbase/sqlite3.h

33 #i‚de‡
_SQLITE3_H_


34 
	#_SQLITE3_H_


	)

35 
	~<°d¨g.h
>

40 #ifde‡
__˝lu•lus


48 #i‚de‡
SQLITE_EXTERN


49 
	#SQLITE_EXTERN
 

	)

52 #i‚de‡
SQLITE_API


53 
	#SQLITE_API


	)

70 
	#SQLITE_DEPRECATED


	)

71 
	#SQLITE_EXPERIMENTAL


	)

76 #ifde‡
SQLITE_VERSION


77 #unde‡
SQLITE_VERSION


79 #ifde‡
SQLITE_VERSION_NUMBER


80 #unde‡
SQLITE_VERSION_NUMBER


110 
	#SQLITE_VERSION
 "3.8.8.2"

	)

111 
	#SQLITE_VERSION_NUMBER
 3008008

	)

112 
	#SQLITE_SOURCE_ID
 "2015-01-30 14:30:45 7757fc721220e136620a89c9d28247f28bbbc098"

	)

144 
SQLITE_API
 
SQLITE_EXTERN
 c⁄° 
sqlôe3_vîsi⁄
[];

145 
SQLITE_API
 c⁄° *
sqlôe3_libvîsi⁄
();

146 
SQLITE_API
 c⁄° *
sqlôe3_sour˚id
();

147 
SQLITE_API
 
sqlôe3_libvîsi⁄_numbî
();

171 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


172 
SQLITE_API
 
sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
);

173 
SQLITE_API
 c⁄° *
sqlôe3_compûe›ti⁄_gë
(
N
);

212 
SQLITE_API
 
sqlôe3_thªadß„
();

228 
sqlôe3
 
	tsqlôe3
;

246 #ifde‡
SQLITE_INT64_TYPE


247 
SQLITE_INT64_TYPE
 
	tsqlôe_öt64
;

248 
	tSQLITE_INT64_TYPE
 
	tsqlôe_uöt64
;

249 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__BORLANDC__
)

250 
__öt64
 
	tsqlôe_öt64
;

251 
	t__öt64
 
	tsqlôe_uöt64
;

253 
	tsqlôe_öt64
;

254 
	tsqlôe_uöt64
;

256 
sqlôe_öt64
 
	tsqlôe3_öt64
;

257 
sqlôe_uöt64
 
	tsqlôe3_uöt64
;

263 #ifde‡
SQLITE_OMIT_FLOATING_POINT


264 
sqlôe3_öt64


	)

308 
SQLITE_API
 
sqlôe3_˛o£
(
sqlôe3
*);

309 
SQLITE_API
 
sqlôe3_˛o£_v2
(
sqlôe3
*);

316 (*
sqlôe3_ˇŒback
)(*,,**, **);

379 
SQLITE_API
 
sqlôe3_exec
(

380 
sqlôe3
*,

381 c⁄° *
sql
,

382 (*
ˇŒback
)(*,,**,**),

384 **
îrmsg


398 
	#SQLITE_OK
 0

	)

400 
	#SQLITE_ERROR
 1

	)

401 
	#SQLITE_INTERNAL
 2

	)

402 
	#SQLITE_PERM
 3

	)

403 
	#SQLITE_ABORT
 4

	)

404 
	#SQLITE_BUSY
 5

	)

405 
	#SQLITE_LOCKED
 6

	)

406 
	#SQLITE_NOMEM
 7

	)

407 
	#SQLITE_READONLY
 8

	)

408 
	#SQLITE_INTERRUPT
 9

	)

409 
	#SQLITE_IOERR
 10

	)

410 
	#SQLITE_CORRUPT
 11

	)

411 
	#SQLITE_NOTFOUND
 12

	)

412 
	#SQLITE_FULL
 13

	)

413 
	#SQLITE_CANTOPEN
 14

	)

414 
	#SQLITE_PROTOCOL
 15

	)

415 
	#SQLITE_EMPTY
 16

	)

416 
	#SQLITE_SCHEMA
 17

	)

417 
	#SQLITE_TOOBIG
 18

	)

418 
	#SQLITE_CONSTRAINT
 19

	)

419 
	#SQLITE_MISMATCH
 20

	)

420 
	#SQLITE_MISUSE
 21

	)

421 
	#SQLITE_NOLFS
 22

	)

422 
	#SQLITE_AUTH
 23

	)

423 
	#SQLITE_FORMAT
 24

	)

424 
	#SQLITE_RANGE
 25

	)

425 
	#SQLITE_NOTADB
 26

	)

426 
	#SQLITE_NOTICE
 27

	)

427 
	#SQLITE_WARNING
 28

	)

428 
	#SQLITE_ROW
 100

	)

429 
	#SQLITE_DONE
 101

	)

448 
	#SQLITE_IOERR_READ
 (
SQLITE_IOERR
 | (1<<8))

	)

449 
	#SQLITE_IOERR_SHORT_READ
 (
SQLITE_IOERR
 | (2<<8))

	)

450 
	#SQLITE_IOERR_WRITE
 (
SQLITE_IOERR
 | (3<<8))

	)

451 
	#SQLITE_IOERR_FSYNC
 (
SQLITE_IOERR
 | (4<<8))

	)

452 
	#SQLITE_IOERR_DIR_FSYNC
 (
SQLITE_IOERR
 | (5<<8))

	)

453 
	#SQLITE_IOERR_TRUNCATE
 (
SQLITE_IOERR
 | (6<<8))

	)

454 
	#SQLITE_IOERR_FSTAT
 (
SQLITE_IOERR
 | (7<<8))

	)

455 
	#SQLITE_IOERR_UNLOCK
 (
SQLITE_IOERR
 | (8<<8))

	)

456 
	#SQLITE_IOERR_RDLOCK
 (
SQLITE_IOERR
 | (9<<8))

	)

457 
	#SQLITE_IOERR_DELETE
 (
SQLITE_IOERR
 | (10<<8))

	)

458 
	#SQLITE_IOERR_BLOCKED
 (
SQLITE_IOERR
 | (11<<8))

	)

459 
	#SQLITE_IOERR_NOMEM
 (
SQLITE_IOERR
 | (12<<8))

	)

460 
	#SQLITE_IOERR_ACCESS
 (
SQLITE_IOERR
 | (13<<8))

	)

461 
	#SQLITE_IOERR_CHECKRESERVEDLOCK
 (
SQLITE_IOERR
 | (14<<8))

	)

462 
	#SQLITE_IOERR_LOCK
 (
SQLITE_IOERR
 | (15<<8))

	)

463 
	#SQLITE_IOERR_CLOSE
 (
SQLITE_IOERR
 | (16<<8))

	)

464 
	#SQLITE_IOERR_DIR_CLOSE
 (
SQLITE_IOERR
 | (17<<8))

	)

465 
	#SQLITE_IOERR_SHMOPEN
 (
SQLITE_IOERR
 | (18<<8))

	)

466 
	#SQLITE_IOERR_SHMSIZE
 (
SQLITE_IOERR
 | (19<<8))

	)

467 
	#SQLITE_IOERR_SHMLOCK
 (
SQLITE_IOERR
 | (20<<8))

	)

468 
	#SQLITE_IOERR_SHMMAP
 (
SQLITE_IOERR
 | (21<<8))

	)

469 
	#SQLITE_IOERR_SEEK
 (
SQLITE_IOERR
 | (22<<8))

	)

470 
	#SQLITE_IOERR_DELETE_NOENT
 (
SQLITE_IOERR
 | (23<<8))

	)

471 
	#SQLITE_IOERR_MMAP
 (
SQLITE_IOERR
 | (24<<8))

	)

472 
	#SQLITE_IOERR_GETTEMPPATH
 (
SQLITE_IOERR
 | (25<<8))

	)

473 
	#SQLITE_IOERR_CONVPATH
 (
SQLITE_IOERR
 | (26<<8))

	)

474 
	#SQLITE_LOCKED_SHAREDCACHE
 (
SQLITE_LOCKED
 | (1<<8))

	)

475 
	#SQLITE_BUSY_RECOVERY
 (
SQLITE_BUSY
 | (1<<8))

	)

476 
	#SQLITE_BUSY_SNAPSHOT
 (
SQLITE_BUSY
 | (2<<8))

	)

477 
	#SQLITE_CANTOPEN_NOTEMPDIR
 (
SQLITE_CANTOPEN
 | (1<<8))

	)

478 
	#SQLITE_CANTOPEN_ISDIR
 (
SQLITE_CANTOPEN
 | (2<<8))

	)

479 
	#SQLITE_CANTOPEN_FULLPATH
 (
SQLITE_CANTOPEN
 | (3<<8))

	)

480 
	#SQLITE_CANTOPEN_CONVPATH
 (
SQLITE_CANTOPEN
 | (4<<8))

	)

481 
	#SQLITE_CORRUPT_VTAB
 (
SQLITE_CORRUPT
 | (1<<8))

	)

482 
	#SQLITE_READONLY_RECOVERY
 (
SQLITE_READONLY
 | (1<<8))

	)

483 
	#SQLITE_READONLY_CANTLOCK
 (
SQLITE_READONLY
 | (2<<8))

	)

484 
	#SQLITE_READONLY_ROLLBACK
 (
SQLITE_READONLY
 | (3<<8))

	)

485 
	#SQLITE_READONLY_DBMOVED
 (
SQLITE_READONLY
 | (4<<8))

	)

486 
	#SQLITE_ABORT_ROLLBACK
 (
SQLITE_ABORT
 | (2<<8))

	)

487 
	#SQLITE_CONSTRAINT_CHECK
 (
SQLITE_CONSTRAINT
 | (1<<8))

	)

488 
	#SQLITE_CONSTRAINT_COMMITHOOK
 (
SQLITE_CONSTRAINT
 | (2<<8))

	)

489 
	#SQLITE_CONSTRAINT_FOREIGNKEY
 (
SQLITE_CONSTRAINT
 | (3<<8))

	)

490 
	#SQLITE_CONSTRAINT_FUNCTION
 (
SQLITE_CONSTRAINT
 | (4<<8))

	)

491 
	#SQLITE_CONSTRAINT_NOTNULL
 (
SQLITE_CONSTRAINT
 | (5<<8))

	)

492 
	#SQLITE_CONSTRAINT_PRIMARYKEY
 (
SQLITE_CONSTRAINT
 | (6<<8))

	)

493 
	#SQLITE_CONSTRAINT_TRIGGER
 (
SQLITE_CONSTRAINT
 | (7<<8))

	)

494 
	#SQLITE_CONSTRAINT_UNIQUE
 (
SQLITE_CONSTRAINT
 | (8<<8))

	)

495 
	#SQLITE_CONSTRAINT_VTAB
 (
SQLITE_CONSTRAINT
 | (9<<8))

	)

496 
	#SQLITE_CONSTRAINT_ROWID
 (
SQLITE_CONSTRAINT
 |(10<<8))

	)

497 
	#SQLITE_NOTICE_RECOVER_WAL
 (
SQLITE_NOTICE
 | (1<<8))

	)

498 
	#SQLITE_NOTICE_RECOVER_ROLLBACK
 (
SQLITE_NOTICE
 | (2<<8))

	)

499 
	#SQLITE_WARNING_AUTOINDEX
 (
SQLITE_WARNING
 | (1<<8))

	)

500 
	#SQLITE_AUTH_USER
 (
SQLITE_AUTH
 | (1<<8))

	)

509 
	#SQLITE_OPEN_READONLY
 0x00000001

	)

510 
	#SQLITE_OPEN_READWRITE
 0x00000002

	)

511 
	#SQLITE_OPEN_CREATE
 0x00000004

	)

512 
	#SQLITE_OPEN_DELETEONCLOSE
 0x00000008

	)

513 
	#SQLITE_OPEN_EXCLUSIVE
 0x00000010

	)

514 
	#SQLITE_OPEN_AUTOPROXY
 0x00000020

	)

515 
	#SQLITE_OPEN_URI
 0x00000040

	)

516 
	#SQLITE_OPEN_MEMORY
 0x00000080

	)

517 
	#SQLITE_OPEN_MAIN_DB
 0x00000100

	)

518 
	#SQLITE_OPEN_TEMP_DB
 0x00000200

	)

519 
	#SQLITE_OPEN_TRANSIENT_DB
 0x00000400

	)

520 
	#SQLITE_OPEN_MAIN_JOURNAL
 0x00000800

	)

521 
	#SQLITE_OPEN_TEMP_JOURNAL
 0x00001000

	)

522 
	#SQLITE_OPEN_SUBJOURNAL
 0x00002000

	)

523 
	#SQLITE_OPEN_MASTER_JOURNAL
 0x00004000

	)

524 
	#SQLITE_OPEN_NOMUTEX
 0x00008000

	)

525 
	#SQLITE_OPEN_FULLMUTEX
 0x00010000

	)

526 
	#SQLITE_OPEN_SHAREDCACHE
 0x00020000

	)

527 
	#SQLITE_OPEN_PRIVATECACHE
 0x00040000

	)

528 
	#SQLITE_OPEN_WAL
 0x00080000

	)

560 
	#SQLITE_IOCAP_ATOMIC
 0x00000001

	)

561 
	#SQLITE_IOCAP_ATOMIC512
 0x00000002

	)

562 
	#SQLITE_IOCAP_ATOMIC1K
 0x00000004

	)

563 
	#SQLITE_IOCAP_ATOMIC2K
 0x00000008

	)

564 
	#SQLITE_IOCAP_ATOMIC4K
 0x00000010

	)

565 
	#SQLITE_IOCAP_ATOMIC8K
 0x00000020

	)

566 
	#SQLITE_IOCAP_ATOMIC16K
 0x00000040

	)

567 
	#SQLITE_IOCAP_ATOMIC32K
 0x00000080

	)

568 
	#SQLITE_IOCAP_ATOMIC64K
 0x00000100

	)

569 
	#SQLITE_IOCAP_SAFE_APPEND
 0x00000200

	)

570 
	#SQLITE_IOCAP_SEQUENTIAL
 0x00000400

	)

571 
	#SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 0x00000800

	)

572 
	#SQLITE_IOCAP_POWERSAFE_OVERWRITE
 0x00001000

	)

573 
	#SQLITE_IOCAP_IMMUTABLE
 0x00002000

	)

582 
	#SQLITE_LOCK_NONE
 0

	)

583 
	#SQLITE_LOCK_SHARED
 1

	)

584 
	#SQLITE_LOCK_RESERVED
 2

	)

585 
	#SQLITE_LOCK_PENDING
 3

	)

586 
	#SQLITE_LOCK_EXCLUSIVE
 4

	)

614 
	#SQLITE_SYNC_NORMAL
 0x00002

	)

615 
	#SQLITE_SYNC_FULL
 0x00003

	)

616 
	#SQLITE_SYNC_DATAONLY
 0x00010

	)

629 
sqlôe3_fûe
 
	tsqlôe3_fûe
;

630 
	ssqlôe3_fûe
 {

631 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

724 
sqlôe3_io_mëhods
 
	tsqlôe3_io_mëhods
;

725 
	ssqlôe3_io_mëhods
 {

726 
iVîsi⁄
;

727 (*
xClo£
)(
sqlôe3_fûe
*);

728 (*
xRód
)(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

729 (*
xWrôe
)(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

730 (*
xTrunˇã
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

731 (*
xSync
)(
sqlôe3_fûe
*, 
Êags
);

732 (*
xFûeSize
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

733 (*
xLock
)(
sqlôe3_fûe
*, );

734 (*
xU∆ock
)(
sqlôe3_fûe
*, );

735 (*
xCheckRe£rvedLock
)(
sqlôe3_fûe
*, *
pResOut
);

736 (*
xFûeC⁄åﬁ
)(
sqlôe3_fûe
*, 
›
, *
pArg
);

737 (*
xSe˘‹Size
)(
sqlôe3_fûe
*);

738 (*
xDevi˚Ch¨a˘îi°ics
)(
sqlôe3_fûe
*);

740 (*
xShmM≠
)(
sqlôe3_fûe
*, 
iPg
, 
pgsz
, , volatile**);

741 (*
xShmLock
)(
sqlôe3_fûe
*, 
off£t
, 
n
, 
Êags
);

742 (*
xShmB¨rõr
)(
sqlôe3_fûe
*);

743 (*
xShmUnm≠
)(
sqlôe3_fûe
*, 
dñëeFœg
);

745 (*
xFëch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, 
iAmt
, **
µ
);

746 (*
xUn„tch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, *
p
);

951 
	#SQLITE_FCNTL_LOCKSTATE
 1

	)

952 
	#SQLITE_GET_LOCKPROXYFILE
 2

	)

953 
	#SQLITE_SET_LOCKPROXYFILE
 3

	)

954 
	#SQLITE_LAST_ERRNO
 4

	)

955 
	#SQLITE_FCNTL_SIZE_HINT
 5

	)

956 
	#SQLITE_FCNTL_CHUNK_SIZE
 6

	)

957 
	#SQLITE_FCNTL_FILE_POINTER
 7

	)

958 
	#SQLITE_FCNTL_SYNC_OMITTED
 8

	)

959 
	#SQLITE_FCNTL_WIN32_AV_RETRY
 9

	)

960 
	#SQLITE_FCNTL_PERSIST_WAL
 10

	)

961 
	#SQLITE_FCNTL_OVERWRITE
 11

	)

962 
	#SQLITE_FCNTL_VFSNAME
 12

	)

963 
	#SQLITE_FCNTL_POWERSAFE_OVERWRITE
 13

	)

964 
	#SQLITE_FCNTL_PRAGMA
 14

	)

965 
	#SQLITE_FCNTL_BUSYHANDLER
 15

	)

966 
	#SQLITE_FCNTL_TEMPFILENAME
 16

	)

967 
	#SQLITE_FCNTL_MMAP_SIZE
 18

	)

968 
	#SQLITE_FCNTL_TRACE
 19

	)

969 
	#SQLITE_FCNTL_HAS_MOVED
 20

	)

970 
	#SQLITE_FCNTL_SYNC
 21

	)

971 
	#SQLITE_FCNTL_COMMIT_PHASETWO
 22

	)

972 
	#SQLITE_FCNTL_WIN32_SET_HANDLE
 23

	)

984 
sqlôe3_muãx
 
	tsqlôe3_muãx
;

1143 
sqlôe3_vfs
 
	tsqlôe3_vfs
;

1144 (*
sqlôe3_sysˇŒ_±r
)();

1145 
	ssqlôe3_vfs
 {

1146 
iVîsi⁄
;

1147 
szOsFûe
;

1148 
mxP©h«me
;

1149 
sqlôe3_vfs
 *
pNext
;

1150 c⁄° *
zName
;

1151 *
pAµD©a
;

1152 (*
xO≥n
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_fûe
*,

1153 
Êags
, *
pOutFœgs
);

1154 (*
xDñëe
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

1155 (*
xAc˚ss
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *
pResOut
);

1156 (*
xFuŒP©h«me
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
, *
zOut
);

1157 *(*
xDlO≥n
)(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

1158 (*
xDlEº‹
)(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

1159 (*(*
xDlSym
)(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

1160 (*
xDlClo£
)(
sqlôe3_vfs
*, *);

1161 (*
xR™dom√ss
)(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

1162 (*
xSÀï
)(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

1163 (*
xCuºítTime
)(
sqlôe3_vfs
*, *);

1164 (*
xGëLa°Eº‹
)(
sqlôe3_vfs
*, , *);

1169 (*
xCuºítTimeI¡64
)(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

1174 (*
xSëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_sysˇŒ_±r
);

1175 
sqlôe3_sysˇŒ_±r
 (*
xGëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1176 c⁄° *(*
xNextSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1204 
	#SQLITE_ACCESS_EXISTS
 0

	)

1205 
	#SQLITE_ACCESS_READWRITE
 1

	)

1206 
	#SQLITE_ACCESS_READ
 2

	)

1230 
	#SQLITE_SHM_UNLOCK
 1

	)

1231 
	#SQLITE_SHM_LOCK
 2

	)

1232 
	#SQLITE_SHM_SHARED
 4

	)

1233 
	#SQLITE_SHM_EXCLUSIVE
 8

	)

1243 
	#SQLITE_SHM_NLOCK
 8

	)

1321 
SQLITE_API
 
sqlôe3_öôülize
();

1322 
SQLITE_API
 
sqlôe3_shutdown
();

1323 
SQLITE_API
 
sqlôe3_os_öô
();

1324 
SQLITE_API
 
sqlôe3_os_íd
();

1355 
SQLITE_API
 
sqlôe3_c⁄fig
(, ...);

1373 
SQLITE_API
 
sqlôe3_db_c⁄fig
(
sqlôe3
*, 
›
, ...);

1438 
sqlôe3_mem_mëhods
 
	tsqlôe3_mem_mëhods
;

1439 
	ssqlôe3_mem_mëhods
 {

1440 *(*
xMÆloc
)();

1441 (*
xFªe
)(*);

1442 *(*
xRóŒoc
)(*,);

1443 (*
xSize
)(*);

1444 (*
xRoundup
)();

1445 (*
xInô
)(*);

1446 (*
xShutdown
)(*);

1447 *
pAµD©a
;

1766 
	#SQLITE_CONFIG_SINGLETHREAD
 1

	)

1767 
	#SQLITE_CONFIG_MULTITHREAD
 2

	)

1768 
	#SQLITE_CONFIG_SERIALIZED
 3

	)

1769 
	#SQLITE_CONFIG_MALLOC
 4

	)

1770 
	#SQLITE_CONFIG_GETMALLOC
 5

	)

1771 
	#SQLITE_CONFIG_SCRATCH
 6

	)

1772 
	#SQLITE_CONFIG_PAGECACHE
 7

	)

1773 
	#SQLITE_CONFIG_HEAP
 8

	)

1774 
	#SQLITE_CONFIG_MEMSTATUS
 9

	)

1775 
	#SQLITE_CONFIG_MUTEX
 10

	)

1776 
	#SQLITE_CONFIG_GETMUTEX
 11

	)

1778 
	#SQLITE_CONFIG_LOOKASIDE
 13

	)

1779 
	#SQLITE_CONFIG_PCACHE
 14

	)

1780 
	#SQLITE_CONFIG_GETPCACHE
 15

	)

1781 
	#SQLITE_CONFIG_LOG
 16

	)

1782 
	#SQLITE_CONFIG_URI
 17

	)

1783 
	#SQLITE_CONFIG_PCACHE2
 18

	)

1784 
	#SQLITE_CONFIG_GETPCACHE2
 19

	)

1785 
	#SQLITE_CONFIG_COVERING_INDEX_SCAN
 20

	)

1786 
	#SQLITE_CONFIG_SQLLOG
 21

	)

1787 
	#SQLITE_CONFIG_MMAP_SIZE
 22

	)

1788 
	#SQLITE_CONFIG_WIN32_HEAPSIZE
 23

	)

1789 
	#SQLITE_CONFIG_PCACHE_HDRSZ
 24

	)

1790 
	#SQLITE_CONFIG_PMASZ
 25

	)

1850 
	#SQLITE_DBCONFIG_LOOKASIDE
 1001

	)

1851 
	#SQLITE_DBCONFIG_ENABLE_FKEY
 1002

	)

1852 
	#SQLITE_DBCONFIG_ENABLE_TRIGGER
 1003

	)

1862 
SQLITE_API
 
sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
*, 
⁄off
);

1913 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_œ°_ö£π_rowid
(
sqlôe3
*);

1965 
SQLITE_API
 
sqlôe3_ch™ges
(
sqlôe3
*);

1988 
SQLITE_API
 
sqlôe3_tŸÆ_ch™ges
(
sqlôe3
*);

2027 
SQLITE_API
 
sqlôe3_öãºu±
(
sqlôe3
*);

2062 
SQLITE_API
 
sqlôe3_com∂ëe
(c⁄° *
sql
);

2063 
SQLITE_API
 
sqlôe3_com∂ëe16
(c⁄° *
sql
);

2123 
SQLITE_API
 
sqlôe3_busy_h™dÀr
(
sqlôe3
*, (*)(*,), *);

2145 
SQLITE_API
 
sqlôe3_busy_timeout
(
sqlôe3
*, 
ms
);

2219 
SQLITE_API
 
sqlôe3_gë_èbÀ
(

2220 
sqlôe3
 *
db
,

2221 c⁄° *
zSql
,

2222 ***
∑zResu…
,

2223 *
≤Row
,

2224 *
≤Cﬁumn
,

2225 **
pzEºmsg


2227 
SQLITE_API
 
sqlôe3_‰ì_èbÀ
(**
ªsu…
);

2323 
SQLITE_API
 *
sqlôe3_m¥ötf
(const *,...);

2324 
SQLITE_API
 *
sqlôe3_vm¥ötf
(c⁄° *, 
va_li°
);

2325 
SQLITE_API
 *
sqlôe3_¢¥ötf
(,*,const *, ...);

2326 
SQLITE_API
 *
sqlôe3_v¢¥ötf
(,*,c⁄° *, 
va_li°
);

2416 
SQLITE_API
 *
sqlôe3_mÆloc
();

2417 
SQLITE_API
 *
sqlôe3_mÆloc64
(
sqlôe3_uöt64
);

2418 
SQLITE_API
 *
sqlôe3_ªÆloc
(*, );

2419 
SQLITE_API
 *
sqlôe3_ªÆloc64
(*, 
sqlôe3_uöt64
);

2420 
SQLITE_API
 
sqlôe3_‰ì
(*);

2421 
SQLITE_API
 
sqlôe3_uöt64
 
sqlôe3_msize
(*);

2446 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_u£d
();

2447 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_highw©î
(
ª£tFœg
);

2470 
SQLITE_API
 
sqlôe3_øndom√ss
(
N
, *
P
);

2552 
SQLITE_API
 
sqlôe3_£t_auth‹izî
(

2553 
sqlôe3
*,

2554 (*
xAuth
)(*,,const *,const *,const *,const *),

2555 *
pU£rD©a


2570 
	#SQLITE_DENY
 1

	)

2571 
	#SQLITE_IGNORE
 2

	)

2593 
	#SQLITE_CREATE_INDEX
 1

	)

2594 
	#SQLITE_CREATE_TABLE
 2

	)

2595 
	#SQLITE_CREATE_TEMP_INDEX
 3

	)

2596 
	#SQLITE_CREATE_TEMP_TABLE
 4

	)

2597 
	#SQLITE_CREATE_TEMP_TRIGGER
 5

	)

2598 
	#SQLITE_CREATE_TEMP_VIEW
 6

	)

2599 
	#SQLITE_CREATE_TRIGGER
 7

	)

2600 
	#SQLITE_CREATE_VIEW
 8

	)

2601 
	#SQLITE_DELETE
 9

	)

2602 
	#SQLITE_DROP_INDEX
 10

	)

2603 
	#SQLITE_DROP_TABLE
 11

	)

2604 
	#SQLITE_DROP_TEMP_INDEX
 12

	)

2605 
	#SQLITE_DROP_TEMP_TABLE
 13

	)

2606 
	#SQLITE_DROP_TEMP_TRIGGER
 14

	)

2607 
	#SQLITE_DROP_TEMP_VIEW
 15

	)

2608 
	#SQLITE_DROP_TRIGGER
 16

	)

2609 
	#SQLITE_DROP_VIEW
 17

	)

2610 
	#SQLITE_INSERT
 18

	)

2611 
	#SQLITE_PRAGMA
 19

	)

2612 
	#SQLITE_READ
 20

	)

2613 
	#SQLITE_SELECT
 21

	)

2614 
	#SQLITE_TRANSACTION
 22

	)

2615 
	#SQLITE_UPDATE
 23

	)

2616 
	#SQLITE_ATTACH
 24

	)

2617 
	#SQLITE_DETACH
 25

	)

2618 
	#SQLITE_ALTER_TABLE
 26

	)

2619 
	#SQLITE_REINDEX
 27

	)

2620 
	#SQLITE_ANALYZE
 28

	)

2621 
	#SQLITE_CREATE_VTABLE
 29

	)

2622 
	#SQLITE_DROP_VTABLE
 30

	)

2623 
	#SQLITE_FUNCTION
 31

	)

2624 
	#SQLITE_SAVEPOINT
 32

	)

2625 
	#SQLITE_COPY
 0

	)

2626 
	#SQLITE_RECURSIVE
 33

	)

2656 
SQLITE_API
 *
sqlôe3_åa˚
(
sqlôe3
*, (*
xTø˚
)(*,const *), *);

2657 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 *
sqlôe3_¥ofûe
(
sqlôe3
*,

2658 (*
xProfûe
)(*,c⁄° *,
sqlôe3_uöt64
), *);

2691 
SQLITE_API
 
sqlôe3_¥ogªss_h™dÀr
(
sqlôe3
*, , (*)(*), *);

2919 
SQLITE_API
 
sqlôe3_›í
(

2920 c⁄° *
fûíame
,

2921 
sqlôe3
 **
µDb


2923 
SQLITE_API
 
sqlôe3_›í16
(

2924 c⁄° *
fûíame
,

2925 
sqlôe3
 **
µDb


2927 
SQLITE_API
 
sqlôe3_›í_v2
(

2928 c⁄° *
fûíame
,

2929 
sqlôe3
 **
µDb
,

2930 
Êags
,

2931 c⁄° *
zVfs


2973 
SQLITE_API
 c⁄° *
sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
);

2974 
SQLITE_API
 
sqlôe3_uri_boﬁón
(c⁄° *
zFûe
, c⁄° *
zP¨am
, 
bDeÁu…
);

2975 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_uri_öt64
(const *, const *, sqlite3_int64);

3016 
SQLITE_API
 
sqlôe3_îrcode
(
sqlôe3
 *
db
);

3017 
SQLITE_API
 
sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
);

3018 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg
(
sqlôe3
*);

3019 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg16
(
sqlôe3
*);

3020 
SQLITE_API
 c⁄° *
sqlôe3_îr°r
();

3046 
sqlôe3_°mt
 
	tsqlôe3_°mt
;

3087 
SQLITE_API
 
sqlôe3_limô
(
sqlôe3
*, 
id
, 
√wVÆ
);

3145 
	#SQLITE_LIMIT_LENGTH
 0

	)

3146 
	#SQLITE_LIMIT_SQL_LENGTH
 1

	)

3147 
	#SQLITE_LIMIT_COLUMN
 2

	)

3148 
	#SQLITE_LIMIT_EXPR_DEPTH
 3

	)

3149 
	#SQLITE_LIMIT_COMPOUND_SELECT
 4

	)

3150 
	#SQLITE_LIMIT_VDBE_OP
 5

	)

3151 
	#SQLITE_LIMIT_FUNCTION_ARG
 6

	)

3152 
	#SQLITE_LIMIT_ATTACHED
 7

	)

3153 
	#SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 8

	)

3154 
	#SQLITE_LIMIT_VARIABLE_NUMBER
 9

	)

3155 
	#SQLITE_LIMIT_TRIGGER_DEPTH
 10

	)

3156 
	#SQLITE_LIMIT_WORKER_THREADS
 11

	)

3239 
SQLITE_API
 
sqlôe3_¥ï¨e
(

3240 
sqlôe3
 *
db
,

3241 c⁄° *
zSql
,

3242 
nByã
,

3243 
sqlôe3_°mt
 **
µStmt
,

3244 c⁄° **
pzTaû


3246 
SQLITE_API
 
sqlôe3_¥ï¨e_v2
(

3247 
sqlôe3
 *
db
,

3248 c⁄° *
zSql
,

3249 
nByã
,

3250 
sqlôe3_°mt
 **
µStmt
,

3251 c⁄° **
pzTaû


3253 
SQLITE_API
 
sqlôe3_¥ï¨e16
(

3254 
sqlôe3
 *
db
,

3255 c⁄° *
zSql
,

3256 
nByã
,

3257 
sqlôe3_°mt
 **
µStmt
,

3258 c⁄° **
pzTaû


3260 
SQLITE_API
 
sqlôe3_¥ï¨e16_v2
(

3261 
sqlôe3
 *
db
,

3262 c⁄° *
zSql
,

3263 
nByã
,

3264 
sqlôe3_°mt
 **
µStmt
,

3265 c⁄° **
pzTaû


3275 
SQLITE_API
 c⁄° *
sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
);

3306 
SQLITE_API
 
sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
);

3325 
SQLITE_API
 
sqlôe3_°mt_busy
(
sqlôe3_°mt
*);

3364 
Mem
 
	tsqlôe3_vÆue
;

3378 
sqlôe3_c⁄ãxt
 
	tsqlôe3_c⁄ãxt
;

3486 
SQLITE_API
 
sqlôe3_böd_blob
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3487 
SQLITE_API
 
sqlôe3_böd_blob64
(
sqlôe3_°mt
*, , c⁄° *, 
sqlôe3_uöt64
,

3489 
SQLITE_API
 
sqlôe3_böd_doubÀ
(
sqlôe3_°mt
*, , );

3490 
SQLITE_API
 
sqlôe3_böd_öt
(
sqlôe3_°mt
*, , );

3491 
SQLITE_API
 
sqlôe3_böd_öt64
(
sqlôe3_°mt
*, , 
sqlôe3_öt64
);

3492 
SQLITE_API
 
sqlôe3_böd_nuŒ
(
sqlôe3_°mt
*, );

3493 
SQLITE_API
 
sqlôe3_böd_ãxt
(
sqlôe3_°mt
*,,const *,,(*)(*));

3494 
SQLITE_API
 
sqlôe3_böd_ãxt16
(
sqlôe3_°mt
*, , const *, , (*)(*));

3495 
SQLITE_API
 
sqlôe3_böd_ãxt64
(
sqlôe3_°mt
*, , c⁄° *, 
sqlôe3_uöt64
,

3496 (*)(*), 
ícodög
);

3497 
SQLITE_API
 
sqlôe3_böd_vÆue
(
sqlôe3_°mt
*, , c⁄° 
sqlôe3_vÆue
*);

3498 
SQLITE_API
 
sqlôe3_böd_zîoblob
(
sqlôe3_°mt
*, , 
n
);

3518 
SQLITE_API
 
sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
*);

3545 
SQLITE_API
 c⁄° *
sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
*, );

3561 
SQLITE_API
 
sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
*, c⁄° *
zName
);

3570 
SQLITE_API
 
sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
*);

3581 
SQLITE_API
 
sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3609 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
*, 
N
);

3610 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
*, 
N
);

3657 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
*,);

3658 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
*,);

3659 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
*,);

3660 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
*,);

3661 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
*,);

3662 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
*,);

3693 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
*,);

3694 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
*,);

3773 
SQLITE_API
 
sqlôe3_°ï
(
sqlôe3_°mt
*);

3793 
SQLITE_API
 
sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3816 
	#SQLITE_INTEGER
 1

	)

3817 
	#SQLITE_FLOAT
 2

	)

3818 
	#SQLITE_BLOB
 4

	)

3819 
	#SQLITE_NULL
 5

	)

3820 #ifde‡
SQLITE_TEXT


3821 #unde‡
SQLITE_TEXT


3823 
	#SQLITE_TEXT
 3

	)

3825 
	#SQLITE3_TEXT
 3

	)

3989 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
*, 
iCﬁ
);

3990 
SQLITE_API
 
sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
*, 
iCﬁ
);

3991 
SQLITE_API
 
sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
*, 
iCﬁ
);

3992 
SQLITE_API
 
sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
*, 
iCﬁ
);

3993 
SQLITE_API
 
sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
*, 
iCﬁ
);

3994 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
*, 
iCﬁ
);

3995 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
*, 
iCﬁ
);

3996 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
*, 
iCﬁ
);

3997 
SQLITE_API
 
sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
*, 
iCﬁ
);

3998 
SQLITE_API
 
sqlôe3_vÆue
 *
sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
*, 
iCﬁ
);

4025 
SQLITE_API
 
sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
);

4051 
SQLITE_API
 
sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
);

4150 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄
(

4151 
sqlôe3
 *
db
,

4152 c⁄° *
zFun˘i⁄Name
,

4153 
nArg
,

4154 
eTextRï
,

4155 *
pAµ
,

4156 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4157 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4158 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4160 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄16
(

4161 
sqlôe3
 *
db
,

4162 c⁄° *
zFun˘i⁄Name
,

4163 
nArg
,

4164 
eTextRï
,

4165 *
pAµ
,

4166 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4167 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4168 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4170 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄_v2
(

4171 
sqlôe3
 *
db
,

4172 c⁄° *
zFun˘i⁄Name
,

4173 
nArg
,

4174 
eTextRï
,

4175 *
pAµ
,

4176 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4177 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4178 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

4179 (*
xDe°roy
)(*)

4188 
	#SQLITE_UTF8
 1

	)

4189 
	#SQLITE_UTF16LE
 2

	)

4190 
	#SQLITE_UTF16BE
 3

	)

4191 
	#SQLITE_UTF16
 4

	)

4192 
	#SQLITE_ANY
 5

	)

4193 
	#SQLITE_UTF16_ALIGNED
 8

	)

4203 
	#SQLITE_DETERMINISTIC
 0x800

	)

4215 #i‚de‡
SQLITE_OMIT_DEPRECATED


4216 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
*);

4217 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_expúed
(
sqlôe3_°mt
*);

4218 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
*, sqlite3_stmt*);

4219 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_globÆ_ªcovî
();

4220 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_thªad_˛ónup
();

4221 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_mem‹y_Æ¨m
((*)(*,
sqlôe3_öt64
,),

4222 *,
sqlôe3_öt64
);

4270 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_blob
(
sqlôe3_vÆue
*);

4271 
SQLITE_API
 
sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
*);

4272 
SQLITE_API
 
sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
*);

4273 
SQLITE_API
 
sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
*);

4274 
SQLITE_API
 
sqlôe3_vÆue_öt
(
sqlôe3_vÆue
*);

4275 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
*);

4276 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
*);

4277 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
*);

4278 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
*);

4279 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
*);

4280 
SQLITE_API
 
sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
*);

4281 
SQLITE_API
 
sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
*);

4325 
SQLITE_API
 *
sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
*, 
nByãs
);

4339 
SQLITE_API
 *
sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
*);

4350 
SQLITE_API
 
sqlôe3
 *
sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
*);

4402 
SQLITE_API
 *
sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
);

4403 
SQLITE_API
 
sqlôe3_£t_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
, *, (*)(*));

4420 (*
sqlôe3_de°ru˘‹_ty≥
)(*);

4421 
	#SQLITE_STATIC
 ((
sqlôe3_de°ru˘‹_ty≥
)0)

	)

4422 
	#SQLITE_TRANSIENT
 ((
sqlôe3_de°ru˘‹_ty≥
)-1)

	)

4538 
SQLITE_API
 
sqlôe3_ªsu…_blob
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4539 
SQLITE_API
 
sqlôe3_ªsu…_blob64
(
sqlôe3_c⁄ãxt
*,const *,

4540 
sqlôe3_uöt64
,(*)(*));

4541 
SQLITE_API
 
sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
*, );

4542 
SQLITE_API
 
sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
*, const *, );

4543 
SQLITE_API
 
sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
*, const *, );

4544 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
*);

4545 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
*);

4546 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
*, );

4547 
SQLITE_API
 
sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
*, );

4548 
SQLITE_API
 
sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_öt64
);

4549 
SQLITE_API
 
sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
*);

4550 
SQLITE_API
 
sqlôe3_ªsu…_ãxt
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4551 
SQLITE_API
 
sqlôe3_ªsu…_ãxt64
(
sqlôe3_c⁄ãxt
*, c⁄° *,
sqlôe3_uöt64
,

4552 (*)(*), 
ícodög
);

4553 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4554 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16À
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4555 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16be
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4556 
SQLITE_API
 
sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_vÆue
*);

4557 
SQLITE_API
 
sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
*, 
n
);

4638 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄
(

4639 
sqlôe3
*,

4640 c⁄° *
zName
,

4641 
eTextRï
,

4642 *
pArg
,

4643 (*
xCom∑ª
)(*,,const *,,const *)

4645 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄_v2
(

4646 
sqlôe3
*,

4647 c⁄° *
zName
,

4648 
eTextRï
,

4649 *
pArg
,

4650 (*
xCom∑ª
)(*,,const *,,const *),

4651 (*
xDe°roy
)(*)

4653 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄16
(

4654 
sqlôe3
*,

4655 c⁄° *
zName
,

4656 
eTextRï
,

4657 *
pArg
,

4658 (*
xCom∑ª
)(*,,const *,,const *)

4687 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded
(

4688 
sqlôe3
*,

4690 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4692 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded16
(

4693 
sqlôe3
*,

4695 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4698 #ifde‡
SQLITE_HAS_CODEC


4706 
SQLITE_API
 
sqlôe3_key
(

4707 
sqlôe3
 *
db
,

4708 c⁄° *
pKey
, 
nKey


4710 
SQLITE_API
 
sqlôe3_key_v2
(

4711 
sqlôe3
 *
db
,

4712 c⁄° *
zDbName
,

4713 c⁄° *
pKey
, 
nKey


4724 
SQLITE_API
 
sqlôe3_ªkey
(

4725 
sqlôe3
 *
db
,

4726 c⁄° *
pKey
, 
nKey


4728 
SQLITE_API
 
sqlôe3_ªkey_v2
(

4729 
sqlôe3
 *
db
,

4730 c⁄° *
zDbName
,

4731 c⁄° *
pKey
, 
nKey


4738 
SQLITE_API
 
sqlôe3_a˘iv©e_£e
(

4739 c⁄° *
zPassPhø£


4743 #ifde‡
SQLITE_ENABLE_CEROD


4748 
SQLITE_API
 
sqlôe3_a˘iv©e_˚rod
(

4749 c⁄° *
zPassPhø£


4770 
SQLITE_API
 
sqlôe3_¶ìp
();

4828 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_ãmp_dúe˘‹y
;

4865 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_d©a_dúe˘‹y
;

4888 
SQLITE_API
 
sqlôe3_gë_autocommô
(
sqlôe3
*);

4900 
SQLITE_API
 
sqlôe3
 *
sqlôe3_db_h™dÀ
(
sqlôe3_°mt
*);

4916 
SQLITE_API
 c⁄° *
sqlôe3_db_fûíame
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

4925 
SQLITE_API
 
sqlôe3_db_ªad⁄ly
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

4940 
SQLITE_API
 
sqlôe3_°mt
 *
sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, sqlôe3_°mà*
pStmt
);

4988 
SQLITE_API
 *
sqlôe3_commô_hook
(
sqlôe3
*, (*)(*), *);

4989 
SQLITE_API
 *
sqlôe3_rﬁlback_hook
(
sqlôe3
*, (*)(*), *);

5039 
SQLITE_API
 *
sqlôe3_upd©e_hook
(

5040 
sqlôe3
*,

5041 (*)(*,,c⁄° *,c⁄° *,
sqlôe3_öt64
),

5074 
SQLITE_API
 
sqlôe3_íabÀ_sh¨ed_ˇche
();

5090 
SQLITE_API
 
sqlôe3_ªÀa£_mem‹y
();

5103 
SQLITE_API
 
sqlôe3_db_ªÀa£_mem‹y
(
sqlôe3
*);

5155 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_so·_hóp_limô64
(sqlôe3_öt64 
N
);

5166 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_so·_hóp_limô
(
N
);

5235 
SQLITE_API
 
sqlôe3_èbÀ_cﬁumn_mëad©a
(

5236 
sqlôe3
 *
db
,

5237 c⁄° *
zDbName
,

5238 c⁄° *
zTabÀName
,

5239 c⁄° *
zCﬁumnName
,

5240 c⁄° **
pzD©aTy≥
,

5241 c⁄° **
pzCﬁlSeq
,

5242 *
pNŸNuŒ
,

5243 *
pPrim¨yKey
,

5244 *
pAutoöc


5281 
SQLITE_API
 
sqlôe3_lﬂd_exãnsi⁄
(

5282 
sqlôe3
 *
db
,

5283 c⁄° *
zFûe
,

5284 c⁄° *
zProc
,

5285 **
pzEºMsg


5301 
SQLITE_API
 
sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
);

5339 
SQLITE_API
 
sqlôe3_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5351 
SQLITE_API
 
sqlôe3_ˇn˚l_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5359 
SQLITE_API
 
sqlôe3_ª£t_auto_exãnsi⁄
();

5373 
sqlôe3_vèb
 
	tsqlôe3_vèb
;

5374 
sqlôe3_ödex_öfo
 
	tsqlôe3_ödex_öfo
;

5375 
sqlôe3_vèb_curs‹
 
	tsqlôe3_vèb_curs‹
;

5376 
sqlôe3_moduÀ
 
	tsqlôe3_moduÀ
;

5394 
	ssqlôe3_moduÀ
 {

5395 
iVîsi⁄
;

5396 (*
xCª©e
)(
sqlôe3
*, *
pAux
,

5397 
¨gc
, c⁄° *c⁄°*
¨gv
,

5398 
sqlôe3_vèb
 **
µVTab
, **);

5399 (*
xC⁄√˘
)(
sqlôe3
*, *
pAux
,

5400 
¨gc
, c⁄° *c⁄°*
¨gv
,

5401 
sqlôe3_vèb
 **
µVTab
, **);

5402 (*
xBe°Index
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_ödex_öfo
*);

5403 (*
xDisc⁄√˘
)(
sqlôe3_vèb
 *
pVTab
);

5404 (*
xDe°roy
)(
sqlôe3_vèb
 *
pVTab
);

5405 (*
xO≥n
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
);

5406 (*
xClo£
)(
sqlôe3_vèb_curs‹
*);

5407 (*
xFûãr
)(
sqlôe3_vèb_curs‹
*, 
idxNum
, c⁄° *
idxSå
,

5408 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
);

5409 (*
xNext
)(
sqlôe3_vèb_curs‹
*);

5410 (*
xEof
)(
sqlôe3_vèb_curs‹
*);

5411 (*
xCﬁumn
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_c⁄ãxt
*, );

5412 (*
xRowid
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_öt64
 *
pRowid
);

5413 (*
xUpd©e
)(
sqlôe3_vèb
 *, , 
sqlôe3_vÆue
 **, 
sqlôe3_öt64
 *);

5414 (*
xBegö
)(
sqlôe3_vèb
 *
pVTab
);

5415 (*
xSync
)(
sqlôe3_vèb
 *
pVTab
);

5416 (*
xCommô
)(
sqlôe3_vèb
 *
pVTab
);

5417 (*
xRﬁlback
)(
sqlôe3_vèb
 *
pVTab
);

5418 (*
xFödFun˘i⁄
)(
sqlôe3_vèb
 *
pVèb
, 
nArg
, c⁄° *
zName
,

5419 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

5420 **
µArg
);

5421 (*
xRíame
)(
sqlôe3_vèb
 *
pVèb
, c⁄° *
zNew
);

5424 (*
xSavïoöt
)(
sqlôe3_vèb
 *
pVTab
, );

5425 (*
xRñó£
)(
sqlôe3_vèb
 *
pVTab
, );

5426 (*
xRﬁlbackTo
)(
sqlôe3_vèb
 *
pVTab
, );

5494 
	ssqlôe3_ödex_öfo
 {

5496 
nC⁄°øöt
;

5497 
	ssqlôe3_ödex_c⁄°øöt
 {

5498 
iCﬁumn
;

5499 
›
;

5500 
ußbÀ
;

5501 
iTîmOff£t
;

5502 } *
aC⁄°øöt
;

5503 
nOrdîBy
;

5504 
	ssqlôe3_ödex_‹dîby
 {

5505 
iCﬁumn
;

5506 
desc
;

5507 } *
aOrdîBy
;

5509 
	ssqlôe3_ödex_c⁄°øöt_ußge
 {

5510 
¨gvIndex
;

5511 
omô
;

5512 } *
aC⁄°øötUßge
;

5513 
idxNum
;

5514 *
idxSå
;

5515 
√edToFªeIdxSå
;

5516 
‹dîByC⁄sumed
;

5517 
e°im©edCo°
;

5519 
sqlôe3_öt64
 
e°im©edRows
;

5530 
	#SQLITE_INDEX_CONSTRAINT_EQ
 2

	)

5531 
	#SQLITE_INDEX_CONSTRAINT_GT
 4

	)

5532 
	#SQLITE_INDEX_CONSTRAINT_LE
 8

	)

5533 
	#SQLITE_INDEX_CONSTRAINT_LT
 16

	)

5534 
	#SQLITE_INDEX_CONSTRAINT_GE
 32

	)

5535 
	#SQLITE_INDEX_CONSTRAINT_MATCH
 64

	)

5562 
SQLITE_API
 
sqlôe3_¸óã_moduÀ
(

5563 
sqlôe3
 *
db
,

5564 c⁄° *
zName
,

5565 c⁄° 
sqlôe3_moduÀ
 *
p
,

5566 *
pClõ¡D©a


5568 
SQLITE_API
 
sqlôe3_¸óã_moduÀ_v2
(

5569 
sqlôe3
 *
db
,

5570 c⁄° *
zName
,

5571 c⁄° 
sqlôe3_moduÀ
 *
p
,

5572 *
pClõ¡D©a
,

5573 (*
xDe°roy
)(*)

5594 
	ssqlôe3_vèb
 {

5595 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

5596 
nRef
;

5597 *
zEºMsg
;

5618 
	ssqlôe3_vèb_curs‹
 {

5619 
sqlôe3_vèb
 *
pVèb
;

5631 
SQLITE_API
 
sqlôe3_de˛¨e_vèb
(
sqlôe3
*, c⁄° *
zSQL
);

5649 
SQLITE_API
 
sqlôe3_ovîlﬂd_fun˘i⁄
(
sqlôe3
*, c⁄° *
zFuncName
, 
nArg
);

5673 
sqlôe3_blob
 
	tsqlôe3_blob
;

5746 
SQLITE_API
 
sqlôe3_blob_›í
(

5747 
sqlôe3
*,

5748 c⁄° *
zDb
,

5749 c⁄° *
zTabÀ
,

5750 c⁄° *
zCﬁumn
,

5751 
sqlôe3_öt64
 
iRow
,

5752 
Êags
,

5753 
sqlôe3_blob
 **
µBlob


5778 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
sqlôe3_blob_ª›í
(
sqlôe3_blob
 *, 
sqlôe3_öt64
);

5800 
SQLITE_API
 
sqlôe3_blob_˛o£
(
sqlôe3_blob
 *);

5815 
SQLITE_API
 
sqlôe3_blob_byãs
(
sqlôe3_blob
 *);

5843 
SQLITE_API
 
sqlôe3_blob_ªad
(
sqlôe3_blob
 *, *
Z
, 
N
, 
iOff£t
);

5884 
SQLITE_API
 
sqlôe3_blob_wrôe
(
sqlôe3_blob
 *, c⁄° *
z
, 
n
, 
iOff£t
);

5915 
SQLITE_API
 
sqlôe3_vfs
 *
sqlôe3_vfs_föd
(c⁄° *
zVfsName
);

5916 
SQLITE_API
 
sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
*, 
makeDÊt
);

5917 
SQLITE_API
 
sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
*);

6030 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_muãx_Æloc
();

6031 
SQLITE_API
 
sqlôe3_muãx_‰ì
(
sqlôe3_muãx
*);

6032 
SQLITE_API
 
sqlôe3_muãx_íãr
(
sqlôe3_muãx
*);

6033 
SQLITE_API
 
sqlôe3_muãx_åy
(
sqlôe3_muãx
*);

6034 
SQLITE_API
 
sqlôe3_muãx_Àave
(
sqlôe3_muãx
*);

6101 
sqlôe3_muãx_mëhods
 
	tsqlôe3_muãx_mëhods
;

6102 
	ssqlôe3_muãx_mëhods
 {

6103 (*
xMuãxInô
)();

6104 (*
xMuãxEnd
)();

6105 
sqlôe3_muãx
 *(*
xMuãxAŒoc
)();

6106 (*
xMuãxFªe
)(
sqlôe3_muãx
 *);

6107 (*
xMuãxE¡î
)(
sqlôe3_muãx
 *);

6108 (*
xMuãxTry
)(
sqlôe3_muãx
 *);

6109 (*
xMuãxLóve
)(
sqlôe3_muãx
 *);

6110 (*
xMuãxHñd
)(
sqlôe3_muãx
 *);

6111 (*
xMuãxNŸhñd
)(
sqlôe3_muãx
 *);

6143 #i‚de‡
NDEBUG


6144 
SQLITE_API
 
sqlôe3_muãx_hñd
(
sqlôe3_muãx
*);

6145 
SQLITE_API
 
sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
*);

6158 
	#SQLITE_MUTEX_FAST
 0

	)

6159 
	#SQLITE_MUTEX_RECURSIVE
 1

	)

6160 
	#SQLITE_MUTEX_STATIC_MASTER
 2

	)

6161 
	#SQLITE_MUTEX_STATIC_MEM
 3

	)

6162 
	#SQLITE_MUTEX_STATIC_MEM2
 4

	)

6163 
	#SQLITE_MUTEX_STATIC_OPEN
 4

	)

6164 
	#SQLITE_MUTEX_STATIC_PRNG
 5

	)

6165 
	#SQLITE_MUTEX_STATIC_LRU
 6

	)

6166 
	#SQLITE_MUTEX_STATIC_LRU2
 7

	)

6167 
	#SQLITE_MUTEX_STATIC_PMEM
 7

	)

6168 
	#SQLITE_MUTEX_STATIC_APP1
 8

	)

6169 
	#SQLITE_MUTEX_STATIC_APP2
 9

	)

6170 
	#SQLITE_MUTEX_STATIC_APP3
 10

	)

6181 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_db_muãx
(
sqlôe3
*);

6215 
SQLITE_API
 
sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
*, c⁄° *
zDbName
, 
›
, *);

6234 
SQLITE_API
 
sqlôe3_ã°_c⁄åﬁ
(
›
, ...);

6247 
	#SQLITE_TESTCTRL_FIRST
 5

	)

6248 
	#SQLITE_TESTCTRL_PRNG_SAVE
 5

	)

6249 
	#SQLITE_TESTCTRL_PRNG_RESTORE
 6

	)

6250 
	#SQLITE_TESTCTRL_PRNG_RESET
 7

	)

6251 
	#SQLITE_TESTCTRL_BITVEC_TEST
 8

	)

6252 
	#SQLITE_TESTCTRL_FAULT_INSTALL
 9

	)

6253 
	#SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 10

	)

6254 
	#SQLITE_TESTCTRL_PENDING_BYTE
 11

	)

6255 
	#SQLITE_TESTCTRL_ASSERT
 12

	)

6256 
	#SQLITE_TESTCTRL_ALWAYS
 13

	)

6257 
	#SQLITE_TESTCTRL_RESERVE
 14

	)

6258 
	#SQLITE_TESTCTRL_OPTIMIZATIONS
 15

	)

6259 
	#SQLITE_TESTCTRL_ISKEYWORD
 16

	)

6260 
	#SQLITE_TESTCTRL_SCRATCHMALLOC
 17

	)

6261 
	#SQLITE_TESTCTRL_LOCALTIME_FAULT
 18

	)

6262 
	#SQLITE_TESTCTRL_EXPLAIN_STMT
 19

	)

6263 
	#SQLITE_TESTCTRL_NEVER_CORRUPT
 20

	)

6264 
	#SQLITE_TESTCTRL_VDBE_COVERAGE
 21

	)

6265 
	#SQLITE_TESTCTRL_BYTEORDER
 22

	)

6266 
	#SQLITE_TESTCTRL_ISINIT
 23

	)

6267 
	#SQLITE_TESTCTRL_SORTER_MMAP
 24

	)

6268 
	#SQLITE_TESTCTRL_LAST
 24

	)

6299 
SQLITE_API
 
sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
);

6384 
	#SQLITE_STATUS_MEMORY_USED
 0

	)

6385 
	#SQLITE_STATUS_PAGECACHE_USED
 1

	)

6386 
	#SQLITE_STATUS_PAGECACHE_OVERFLOW
 2

	)

6387 
	#SQLITE_STATUS_SCRATCH_USED
 3

	)

6388 
	#SQLITE_STATUS_SCRATCH_OVERFLOW
 4

	)

6389 
	#SQLITE_STATUS_MALLOC_SIZE
 5

	)

6390 
	#SQLITE_STATUS_PARSER_STACK
 6

	)

6391 
	#SQLITE_STATUS_PAGECACHE_SIZE
 7

	)

6392 
	#SQLITE_STATUS_SCRATCH_SIZE
 8

	)

6393 
	#SQLITE_STATUS_MALLOC_COUNT
 9

	)

6417 
SQLITE_API
 
sqlôe3_db_°©us
(
sqlôe3
*, 
›
, *
pCur
, *
pHiwå
, 
ª£tFlg
);

6509 
	#SQLITE_DBSTATUS_LOOKASIDE_USED
 0

	)

6510 
	#SQLITE_DBSTATUS_CACHE_USED
 1

	)

6511 
	#SQLITE_DBSTATUS_SCHEMA_USED
 2

	)

6512 
	#SQLITE_DBSTATUS_STMT_USED
 3

	)

6513 
	#SQLITE_DBSTATUS_LOOKASIDE_HIT
 4

	)

6514 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 5

	)

6515 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 6

	)

6516 
	#SQLITE_DBSTATUS_CACHE_HIT
 7

	)

6517 
	#SQLITE_DBSTATUS_CACHE_MISS
 8

	)

6518 
	#SQLITE_DBSTATUS_CACHE_WRITE
 9

	)

6519 
	#SQLITE_DBSTATUS_DEFERRED_FKS
 10

	)

6520 
	#SQLITE_DBSTATUS_MAX
 10

	)

6546 
SQLITE_API
 
sqlôe3_°mt_°©us
(
sqlôe3_°mt
*, 
›
,
ª£tFlg
);

6585 
	#SQLITE_STMTSTATUS_FULLSCAN_STEP
 1

	)

6586 
	#SQLITE_STMTSTATUS_SORT
 2

	)

6587 
	#SQLITE_STMTSTATUS_AUTOINDEX
 3

	)

6588 
	#SQLITE_STMTSTATUS_VM_STEP
 4

	)

6601 
sqlôe3_pˇche
 
	tsqlôe3_pˇche
;

6613 
sqlôe3_pˇche_∑ge
 
	tsqlôe3_pˇche_∑ge
;

6614 
	ssqlôe3_pˇche_∑ge
 {

6615 *
pBuf
;

6616 *
pExåa
;

6778 
sqlôe3_pˇche_mëhods2
 
	tsqlôe3_pˇche_mëhods2
;

6779 
	ssqlôe3_pˇche_mëhods2
 {

6780 
iVîsi⁄
;

6781 *
pArg
;

6782 (*
xInô
)(*);

6783 (*
xShutdown
)(*);

6784 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
szExåa
, 
bPurgóbÀ
);

6785 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

6786 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

6787 
sqlôe3_pˇche_∑ge
 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

6788 (*
xU≈ö
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*, 
disˇrd
);

6789 (*
xRekey
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*,

6790 
ﬁdKey
, 
√wKey
);

6791 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

6792 (*
xDe°roy
)(
sqlôe3_pˇche
*);

6793 (*
xShrök
)(
sqlôe3_pˇche
*);

6801 
sqlôe3_pˇche_mëhods
 
	tsqlôe3_pˇche_mëhods
;

6802 
	ssqlôe3_pˇche_mëhods
 {

6803 *
pArg
;

6804 (*
xInô
)(*);

6805 (*
xShutdown
)(*);

6806 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
bPurgóbÀ
);

6807 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

6808 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

6809 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

6810 (*
xU≈ö
)(
sqlôe3_pˇche
*, *, 
disˇrd
);

6811 (*
xRekey
)(
sqlôe3_pˇche
*, *, 
ﬁdKey
, 
√wKey
);

6812 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

6813 (*
xDe°roy
)(
sqlôe3_pˇche
*);

6827 
sqlôe3_backup
 
	tsqlôe3_backup
;

7015 
SQLITE_API
 
sqlôe3_backup
 *
sqlôe3_backup_öô
(

7016 
sqlôe3
 *
pDe°
,

7017 c⁄° *
zDe°Name
,

7018 
sqlôe3
 *
pSour˚
,

7019 c⁄° *
zSour˚Name


7021 
SQLITE_API
 
sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
);

7022 
SQLITE_API
 
sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
);

7023 
SQLITE_API
 
sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
);

7024 
SQLITE_API
 
sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
);

7140 
SQLITE_API
 
sqlôe3_u∆ock_nŸify
(

7141 
sqlôe3
 *
pBlocked
,

7142 (*
xNŸify
)(**
≠Arg
, 
nArg
),

7143 *
pNŸifyArg


7155 
SQLITE_API
 
sqlôe3_°ricmp
(const *, const *);

7156 
SQLITE_API
 
sqlôe3_°∫icmp
(const *, const *, );

7171 
SQLITE_API
 
sqlôe3_°rglob
(c⁄° *
zGlob
, c⁄° *
zSå
);

7194 
SQLITE_API
 
sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...);

7229 
SQLITE_API
 *
sqlôe3_wÆ_hook
(

7230 
sqlôe3
*,

7231 (*)(*,
sqlôe3
*,const *,),

7263 
SQLITE_API
 
sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
N
);

7284 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
);

7377 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt_v2
(

7378 
sqlôe3
 *
db
,

7379 c⁄° *
zDb
,

7380 
eMode
,

7381 *
≤Log
,

7382 *
≤Ck±


7394 
	#SQLITE_CHECKPOINT_PASSIVE
 0

	)

7395 
	#SQLITE_CHECKPOINT_FULL
 1

	)

7396 
	#SQLITE_CHECKPOINT_RESTART
 2

	)

7397 
	#SQLITE_CHECKPOINT_TRUNCATE
 3

	)

7413 
SQLITE_API
 
sqlôe3_vèb_c⁄fig
(
sqlôe3
*, 
›
, ...);

7454 
	#SQLITE_VTAB_CONSTRAINT_SUPPORT
 1

	)

7466 
SQLITE_API
 
sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *);

7480 
	#SQLITE_ROLLBACK
 1

	)

7482 
	#SQLITE_FAIL
 3

	)

7484 
	#SQLITE_REPLACE
 5

	)

7533 
	#SQLITE_SCANSTAT_NLOOP
 0

	)

7534 
	#SQLITE_SCANSTAT_NVISIT
 1

	)

7535 
	#SQLITE_SCANSTAT_EST
 2

	)

7536 
	#SQLITE_SCANSTAT_NAME
 3

	)

7537 
	#SQLITE_SCANSTAT_EXPLAIN
 4

	)

7538 
	#SQLITE_SCANSTAT_SELECTID
 5

	)

7570 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
sqlôe3_°mt_sˇn°©us
(

7571 
sqlôe3_°mt
 *
pStmt
,

7572 
idx
,

7573 
iSˇnSètusOp
,

7574 *
pOut


7585 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
sqlôe3_°mt_sˇn°©us_ª£t
(
sqlôe3_°mt
*);

7592 #ifde‡
SQLITE_OMIT_FLOATING_POINT


7596 #ifde‡
__˝lu•lus


7614 #i‚de‡
_SQLITE3RTREE_H_


7615 
	#_SQLITE3RTREE_H_


	)

7618 #ifde‡
__˝lu•lus


7622 
sqlôe3_πªe_geomëry
 
	tsqlôe3_πªe_geomëry
;

7623 
sqlôe3_πªe_quîy_öfo
 
	tsqlôe3_πªe_quîy_öfo
;

7628 #ifde‡
SQLITE_RTREE_INT_ONLY


7629 
sqlôe3_öt64
 
	tsqlôe3_πªe_dbl
;

7631 
	tsqlôe3_πªe_dbl
;

7640 
SQLITE_API
 
sqlôe3_πªe_geomëry_ˇŒback
(

7641 
sqlôe3
 *
db
,

7642 c⁄° *
zGeom
,

7643 (*
xGeom
)(
sqlôe3_πªe_geomëry
*, , 
sqlôe3_πªe_dbl
*,*),

7644 *
pC⁄ãxt


7652 
	ssqlôe3_πªe_geomëry
 {

7653 *
pC⁄ãxt
;

7654 
nP¨am
;

7655 
sqlôe3_πªe_dbl
 *
aP¨am
;

7656 *
pU£r
;

7657 (*
xDñU£r
)(*);

7666 
SQLITE_API
 
sqlôe3_πªe_quîy_ˇŒback
(

7667 
sqlôe3
 *
db
,

7668 c⁄° *
zQuîyFunc
,

7669 (*
xQuîyFunc
)(
sqlôe3_πªe_quîy_öfo
*),

7670 *
pC⁄ãxt
,

7671 (*
xDe°ru˘‹
)(*)

7684 
	ssqlôe3_πªe_quîy_öfo
 {

7685 *
pC⁄ãxt
;

7686 
nP¨am
;

7687 
sqlôe3_πªe_dbl
 *
aP¨am
;

7688 *
pU£r
;

7689 (*
xDñU£r
)(*);

7690 
sqlôe3_πªe_dbl
 *
aCo‹d
;

7691 *
™Queue
;

7692 
nCo‹d
;

7693 
iLevñ
;

7694 
mxLevñ
;

7695 
sqlôe3_öt64
 
iRowid
;

7696 
sqlôe3_πªe_dbl
 
rP¨ítSc‹e
;

7697 
eP¨ítWôhö
;

7698 
eWôhö
;

7699 
sqlôe3_πªe_dbl
 
rSc‹e
;

7705 
	#NOT_WITHIN
 0

	)

7706 
	#PARTLY_WITHIN
 1

	)

7707 
	#FULLY_WITHIN
 2

	)

7710 #ifde‡
__˝lu•lus


	@Dbase/sqlite3dbase.cpp

1 
	~"sqlôe3dba£.h
"

2 
	~<°dlib.h
>

5 
sqlôe3
* 
	gsqlôe3d©a
::
m_pDBa£
 = 
NULL
;

6 
±hªad_muãx_t
 
	ggDBMuãx
 ;

7 
BOOL
 
	ggIsDBMuãxFœg
 = 
FALSE
;

18 
BOOL
 
	$InôMuãx
 ( )

21 if–!
gIsDBMuãxFœg
 )

23 
iRä
;

24 
iRä
 = 
	`±hªad_muãx_öô
–&
gDBMuãx
, 
NULL
 );

25 i‡–0 !
iRä
 )

27 
	`¥ötf
 ( "sqlite3data gDBMutex initÉrror\n" );

28  
FALSE
;

30 
	`¥ötf
 ( "sqlite3data gDBMutex init Ok\n" );

31 
gIsDBMuãxFœg
 = 
TRUE
;

34  
TRUE
;

35 
	}
}

46 
BOOL
 
	$IsDBMuãxExi°
 ( )

48 if–!
gIsDBMuãxFœg
 )

50  
	`InôMuãx
( );

53  
gIsDBMuãxFœg
;

54 
	}
}

67 
	$Sñe˘TabÀ
 ( * 
d©a
, 
n_cﬁumn
, ** 
cﬁumn_vÆue
, ** 
cﬁumn_«me
 )

69 
BOOL
* 
bRä
 = (BOOL *)
d©a
;

70 if–
n_cﬁumn
 > 0 )

72 *
bRä
 = 
TRUE
;

76 *
bRä
 = 
FALSE
;

80 
	}
}

88 
	gsqlôe3d©a
::
	$sqlôe3d©a
 ()

90 
	`mem£t
–
m_szDBName
, 0, 
MAX_DBASE_NAME_LEN
 );

92 
	}
}

101 
	gsqlôe3d©a
::~
	$sqlôe3d©a
 ()

104 
	}
}

117 *
sqlôe3d©a
::
	$Cª©eDB
–*
szDBP©hName
 )

119 i‡–
NULL
 =
szDBP©hName
 )

121 
	`¥ötf
 ( "sqlite3data CreateDB m_szDBPathName == NULL\n" );

122  
NULL
;

126 if–!
	`IsDBExi°
( ) )

128 
iRä
;

129 
iRä
 = 
	`sqlôe3_›í
–
szDBP©hName
, &
m_pDBa£
 );

130 if–
iRä
 )

132 
	`¥ötf
 ( "sqlôe3d©®ˇn'à›í db %s\n", 
szDBP©hName
 );

133 
	`sqlôe3_˛o£
–
m_pDBa£
 );

134 
m_pDBa£
 = 
NULL
;

135  
NULL
;

137 
iRä
 = 
	`sqlôe3_exec
(
m_pDBa£
,"PRAGMA synchronous = FULL; ",0,0,0);

138 if–
iRä
 !
SQLITE_OK
 )

140 
	`¥ötf
 ( "sqlite3data synchronousÉrr\n" );

142 
	`¥ötf
 ( "sqlôe3d©®›í db %†OK\n", 
szDBP©hName
 );

143 
	`°r˝y
–
m_szDBName
, 
szDBP©hName
 );

147 
	`¥ötf
 ( "sqlôe3d©®›í db %†OK i†ÆªadyÉxi°\n", 
m_szDBName
 );

150 
	`¥ötf
 ( "sqlôe3d©®Cª©eDB %s\n", 
szDBP©hName
 );

151  
m_pDBa£
;

152 
	}
}

165 
BOOL
 
	gsqlôe3d©a
::
	$DñëeDB
 ( *
szDBP©hName
 )

167 
szTmpBuf
[256];

170 
	`•rötf
–
szTmpBuf
, "rm %†-rf", 
szDBP©hName
 );

171 
	`sy°em
–
szTmpBuf
 );

174 
m_pDBa£
 = 
NULL
;

175 
	`¥ötf
 ( "sqlôe3d©®DñëeDB %s\n", 
szDBP©hName
 );

177  
TRUE
;

178 
	}
}

191 * 
	gsqlôe3d©a
::
	$O≥nDB
 ( )

193  
m_pDBa£
;

194 
	}
}

206 
BOOL
 
	gsqlôe3d©a
::
	$Clo£DB
 ( )

208 if–
	`IsDBExi°
( ) )

210 
	`sqlôe3_˛o£
–
m_pDBa£
 );

211 
m_pDBa£
 = 
NULL
;

212 
	`¥ötf
 ( "sqlite3data CloseDB\n" );

213  
TRUE
;

216  
FALSE
;

217 
	}
}

231 
BOOL
 
	gsqlôe3d©a
::
	$Cª©eDBTabÀ
 ( *
szTabÀName
, *
szTabÀSåu˘
 )

233 
szTmpBuf
[1024];

234 *
szEºBuf
;

235 
iRä
;

238 if–
NULL
 =
szTabÀName
 || NULL =
szTabÀSåu˘
 )

240 
	`¥ötf
 ( "CSqliteDBase CreateDBTableÉrr NULL==(Tablename) || NULL=(TableStruct)\n");

241  
FALSE
;

245 if–!
	`IsDBExi°
–Ë|| !
	`IsDBMuãxExi°
( ) )

247  
FALSE
;

252 
	`•rötf
–
szTmpBuf
, "¸óãÅabÀ %s", 
szTabÀSåu˘
 );

254 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

255 
iRä
 = 
	`sqlôe3_exec
–
m_pDBa£
, 
szTmpBuf
, 
NULL
, NULL, &
szEºBuf
 );

256 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

257 if(
iRä
 !
SQLITE_OK
 )

259 
	`¥ötf
( "CSqliteDBase CreateÅableÉrror code:%d: cause%s\n",

260 
iRä
, 
szEºBuf
 );

261 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

262 
	`sqlôe3_‰ì
–
szEºBuf
 );

263 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

265 if–1 !
iRä
 )

267  
FALSE
;

272 
	`¥ötf
 ( "CSqlôeDBa£ CRóãDBTaBÀ %s\n", 
szTabÀName
 );

273  
TRUE
;

274 
	}
}

288 
BOOL
 
	gsqlôe3d©a
::
	$Cª©eDBTabÀIndex
 ( *
szTabÀName
, *
szIndexName
, c⁄° *
szIndex
 )

290 
szTmpBuf
[1024];

291 *
szEºBuf
;

292 
iRä
;

295 if–
NULL
 =
szTabÀName


296 || 
NULL
 =
szIndexName


297 || 
NULL
 =
szIndex
)

299 
	`¥ötf
 ( "sqlite3data CreateDBTableIndexÖaramÉrror!!!\n" );

300  
FALSE
;

304 if–!
	`IsDBExi°
( )

305 || !
	`IsDBMuãxExi°
( )

306 || !
	`IsDBTabÀExi°
–
szTabÀName
 ) )

308  
FALSE
;

313 
	`•rötf
–
szTmpBuf
, "¸óã index '%s' o¿%s–%†)", 
szIndexName
, 
szTabÀName
, 
szIndex
 );

315 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

316 
iRä
 = 
	`sqlôe3_exec
–
m_pDBa£
, 
szTmpBuf
, 
NULL
, NULL, &
szEºBuf
 );

317 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

318 if(
iRä
 !
SQLITE_OK
 )

320 
	`¥ötf
( "sqlite3data create indexÉrror code:%d: cause%s\n",

321 
iRä
, 
szEºBuf
 );

322 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

323 
	`sqlôe3_‰ì
–
szEºBuf
 );

324 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

326 if–1 !
iRä
 )

328  
FALSE
;

333 
	`¥ötf
 ( "sqlite3data CreateDBTableIndex %s %s %s\n",

334 
szTabÀName
, 
szIndexName
, 
szIndex
);

335  
TRUE
;

336 
	}
}

366 
BOOL
 
	gsqlôe3d©a
::
	$In£πDBD©a
 (*
szTabÀName
, 
°rög
 &
In£πBuf
 )

368 *
szEºBuf
;

369 
iRä
;

370 
°rög
 
In£πSå
;

371 
In£πSå
.
	`˛ór
( );

374 if–
NULL
 =
szTabÀName
 )

376 
	`¥ötf
 ( "sqlite3data InsertDBDataÖaramÉrror\n" );

377  
FALSE
;

381 if–!
	`IsDBTabÀExi°
–
szTabÀName
 ) )

383  
FALSE
;

391 
In£πSå
 +
In£πBuf
;

402 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

403 
iRä
 = 
	`sqlôe3_exec
–
m_pDBa£
, 
In£πSå
.
	`c_°r
(), 0, 0, &
szEºBuf
 );

404 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

405 if(
iRä
 !
SQLITE_OK
 )

407 
	`¥ötf
( "sqlite3dataÅable insert dataÉrror code:%d: cause%s\n",

408 
iRä
, 
szEºBuf
 );

409 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

410 
	`sqlôe3_‰ì
–
szEºBuf
 );

411 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

412  
FALSE
;

415 
In£πSå
.
	`˛ór
( );

418  
TRUE
;

419 
	}
}

432 
BOOL
 
	gsqlôe3d©a
::
	$DñëeDBD©a
 ( *
szTabÀName
, *
DñëeBuf
 )

434 
szTmpBuf
[1024];

435 *
szEºBuf
;

436 
iRä
;

439 if–!
	`IsDBExi°
( )

440 || !
	`IsDBMuãxExi°
( )

441 || !
	`IsDBTabÀExi°
–
szTabÀName
 ) )

443  
FALSE
;

448 
	`•rötf
–
szTmpBuf
, "delete from %s %s",

449 
szTabÀName
, (*)
DñëeBuf
 );

452 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

453 
iRä
 = 
	`sqlôe3_exec
–
m_pDBa£
, 
szTmpBuf
, 
NULL
, NULL, &
szEºBuf
 );

454 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

455 if(
iRä
 !
SQLITE_OK
 )

457 
	`¥ötf
( "sqlite3dataÅable delete data code:%d: cause%s\n",

458 
iRä
, 
szEºBuf
 );

459 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

460 
	`sqlôe3_‰ì
–
szEºBuf
 );

461 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

462  
FALSE
;

467  
TRUE
;

468 
	}
}

481 
BOOL
 
	gsqlôe3d©a
::
	$Sñe˘DBD©a
–*
szTabÀName
,

482 *
Sñe˘Buf
,

483 –*
func
 )–* 
d©a


484 ,
n_cﬁumn
,

485 ** 
cﬁumn_vÆue
,

486 ** 
cﬁumn_«me
 ),

487 *
d©a
)

490 
szTmpBuf
[1024];

491 *
szEºBuf
;

492 
iRä
;

496 if–!
	`IsDBExi°
( )

497 || !
	`IsDBMuãxExi°
( )

498 || !
	`IsDBTabÀExi°
–
szTabÀName
 ) )

500  
FALSE
;

505 
	`•rötf
–
szTmpBuf
, "select * from %s %s",

506 
szTabÀName
, (*)
Sñe˘Buf
 );

509 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

510 
iRä
 = 
	`sqlôe3_exec
–
m_pDBa£
, 
szTmpBuf
, 
func
, 
d©a
, &
szEºBuf
 );

511 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

512 if(
iRä
 !
SQLITE_OK
 )

514 if–
iRä
 !
SQLITE_ABORT
 )

515 
	`¥ötf
( "sqlite3dataÅable select data code:%d: cause%s\n",

516 
iRä
, 
szEºBuf
 );

517 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

518 
	`sqlôe3_‰ì
–
szEºBuf
 );

519 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

520 if–
iRä
 =
SQLITE_ABORT
 )

521  
TRUE
;

522  
FALSE
;

526  
TRUE
;

527 
	}
}

540 
BOOL
 
	gsqlôe3d©a
::
	$Upd©eDBD©a
 ( *
szTabÀName
, *
Upd©eBuf
 )

542  
TRUE
;

543 
	}
}

555 
BOOL
 
	gsqlôe3d©a
::
	$IsDBExi°
 ( )

558 if–
NULL
 =
m_pDBa£
 )

560 
	`¥ötf
 ( "sqlôe3d©®DB %†i†nŸÉxi°\n", 
m_szDBName
 );

561  
FALSE
;

564  
TRUE
;

565 
	}
}

577 
BOOL
 
	gsqlôe3d©a
::
	$IsDBTabÀExi°
 ( *
szTabÀName
 )

579 
szTmpBuf
[1024];

580 *
szEºBuf
;

581 
iRä
;

582 
BOOL
 
bRä
 = 
FALSE
;

585 if–!
	`IsDBExi°
–Ë|| !
	`IsDBMuãxExi°
( ) )

587  
FALSE
;

591 
	`•rötf
–
szTmpBuf
, "select count(*) from sqlite_master \
Åype = 'table'ándÇame='%s'",

593 
szTabÀName
);

596 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

597 
iRä
 = 
	`sqlôe3_exec
–
m_pDBa£
, 
szTmpBuf
, 
Sñe˘TabÀ
, &
bRä
, &
szEºBuf
 );

598 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

600 if–
iRä
 =
SQLITE_OK
 )

602  
TRUE
;

606 
	`¥ötf
 ( "sqlite3dataÅable %sÇotÉxistÉrr code=%dÉrr = %s\n",

607 
szTabÀName
, 
iRä
, 
szEºBuf
);

608 
	`±hªad_muãx_lock
–&
gDBMuãx
 );

609 
	`sqlôe3_‰ì
–
szEºBuf
 );

610 
	`±hªad_muãx_u∆ock
–&
gDBMuãx
 );

611  
FALSE
;

615  
FALSE
;

616 
	}
}

	@Dbase/sqlite3dbase.h

1 #i‚de‡
SQLITE3DATA_H


2 
	#SQLITE3DATA_H


	)

4 
	~"sqlôe3.h
"

5 
	~"d©aba£.h
"

6 
	~"dba£d©©y≥.h
"

10 ˛as†
	csqlôe3d©a
 : 
public
 
D©aba£


13 
public
:

14 
sqlôe3d©a
();

15 
	mvútuÆ
 ~
sqlôe3d©a
();

17 
	mpublic
:

20 
vútuÆ
 *
Cª©eDB
–*
szDBP©hName
 );

22 
vútuÆ
 
BOOL
 
DñëeDB
–*
szDBP©hName
 );

24 
vútuÆ
 * 
O≥nDB
( );

26 
vútuÆ
 
BOOL
 
Clo£DB
( );

28 
vútuÆ
 
BOOL
 
Cª©eDBTabÀ
–*
szTabÀName
, *
szTabÀSåu˘
 );

30 
vútuÆ
 
BOOL
 
Cª©eDBTabÀIndex
–*
szTabÀName
, *
szIndexName
, c⁄° *
szIndex
 );

32 
vútuÆ
 
BOOL
 
In£πDBD©a
–*
szTabÀName
, 
°rög
 &
In£πBuf
 );

36 
vútuÆ
 
BOOL
 
DñëeDBD©a
–*
szTabÀName
, *
DñëeBuf
 );

39 
vútuÆ
 
BOOL
 
Sñe˘DBD©a
–*
szTabÀName
,

40 *
Sñe˘Buf
,

41 –*
func
 )–* 
d©a


42 ,
n_cﬁumn
,

43 ** 
cﬁumn_vÆue
,

44 ** 
cﬁumn_«me
 ),

45 *
d©a
);

47 
vútuÆ
 
BOOL
 
	`Upd©eDBD©a
–*
szTabÀName
, *
Upd©eBuf
 );

50 
vútuÆ
 
BOOL
 
	`IsDBExi°
( );

52 
vútuÆ
 
BOOL
 
	`IsDBTabÀExi°
–*
szTabÀName
 );

55 
¥Ÿe˘ed
:

57 
¥iv©e
:

59 
sqlôe3
 *
m_pDBa£
;

60 
m_szDBName
[
MAX_DBASE_NAME_LEN
];

	@Element/calarm_indicator_yx.cpp

1 
	~"ˇœrm_ödiˇt‹_yx.h
"

2 c⁄° 
QSåög
 
	gP©h
 = "/usr/share/ePut800/Pics/";

4 
	gCAœrm_ödiˇt‹_yx
::
	$CAœrm_ödiˇt‹_yx
()

6 
m_wObje˘Ty≥
 = 
LINKER
;

7 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

8 
byVÆ1
 = 0;

9 
byVÆ
 = 0;

12 
	}
}

14 
	gCAœrm_ödiˇt‹_yx
::
	$CAœrm_ödiˇt‹_yx
(
QSåög
 
m_pi˙ame
)

16 
m_wObje˘Ty≥
 = 
LINKER
;

17 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

18 
byVÆ1
 = 0;

19 
byVÆ
 = 0;

20 
pixm≠
.
	`lﬂd
(
P©h
 + 
	`QSåög
(
m_pi˙ame
));

23 
	}
}

25 
	gCAœrm_ödiˇt‹_yx
::~
	$CAœrm_ödiˇt‹_yx
()

28 
pixm≠
.
	`dëach
();

29 
	}
}

31 
BOOL
 
	gCAœrm_ödiˇt‹_yx
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

33 if–!
pPaöãr
 )

35 
	`Q_ASSERT
–
FALSE
 );

36  
FALSE
 ;

40 
pPaöãr
->
	`ßve
();

42 if(
byVÆ1
 == 1){

43 
pPaöãr
->
	`£tPí
(
Qt
::
ªd
);

44 
pPaöãr
->
	`£tBrush
(
Qt
::
ªd
);

49 
pPaöãr
->
	`£tPí
(
Qt
::
gªí
);

50 
pPaöãr
->
	`£tBrush
(
Qt
::
gªí
);

52 
pPaöãr
->
	`£tPí
(
Qt
::
NoPí
);

58 
pPaöãr
->
	`døwRe˘
(
m_rcDøw
);

59 
QPixm≠
 
pixm≠
;

61 
pixm≠
.
	`lﬂd
(
P©h
 + 
	`QSåög
(
m_pi˙ame
));

62 
pPaöãr
->
	`døwPixm≠
(
m_rcDøw
, 
pixm≠
);

63 
pixm≠
.
	`dëach
();

65 
pPaöãr
->
	`døwPixm≠
(
m_rcDøw
, 
pixm≠
);

68 
pPaöãr
->
	`ª°‹e
();

69  
TRUE
 ;

70 
	}
}

72 
BOOL
 
	gCAœrm_ödiˇt‹_yx
::
	$InôD©a
( )

74 
	`InôYkD©a
();

75  
FALSE
 ;

76 
	}
}

78 
BOOL
 
	gCAœrm_ödiˇt‹_yx
::
	$Cª©e
–
QRe˘
 
rc
 )

80 
m_rcDøw
 = 
rc
 ;

81  
TRUE
 ;

82 
	}
}

84 
BOOL
 
	gCAœrm_ödiˇt‹_yx
::
	$Com∑ªAâribuãD©a
( )

86 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

87 if–
AâribuãD©aSize
 < 2){

88 
byVÆ1
 = 0;

89 
	`qDebug
() << "ÈÅ•‰ø°ÁÇπÊï∞Â∞ë‰∫é‰∏§‰∏™";

90  
FALSE
;

93 
AâribuãD©aNo
 = 0;

94 
WORD
 
DevSèã
 = 
COMM_ABNORMAL
;

95  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

97 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

98  
tmpD©a
->
byD©aTy≥
 )

100 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

101 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

103 
	`AfxGëDevCommSèã
(
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
, 
DevSèã
);

104 if(
DevSèã
 =
COMM_ABNORMAL
){

105 
byVÆ1
 = 0;

106 
	`¥ötf
("---- %†%d ----\n", 
__func__
, 
__LINE__
);

107 
	`qDebug
() << "-ËÆæÂ§áÁä∂ÊÄÅerror!-";

108  
FALSE
;

110 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

113 if–
tmpD©a
->
byAâribuãD©aByã
 == 2 )

115 
	`AfxGëDevCommSèã
(
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
, 
DevSèã
);

116 if(
DevSèã
 =
COMM_ABNORMAL
){

117 
byVÆ1
 = 0;

118 
	`¥ötf
("---- %†%d ----\n", 
__func__
, 
__LINE__
);

119 
	`qDebug
() << "-ËÆæÂ§áÁä∂ÊÄÅerror!-";

120  
FALSE
;

122 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ1
);

123 
tmpD©a
->
dbVÆ
 = 
byVÆ1
;

131 if((
byVÆ
 =0Ë&&(
byVÆ1
 == 1)){

132 
	`SëA˘i⁄
(
BREAKER_CLOSE
);

133 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkPª∑ªBä_˛icked
();

134 
	`u¶ìp
(2000000);

135 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkExecBä_˛icked
();

137 if((
byVÆ
 =1Ë&& (
byVÆ1
 == 0)){

138 
	`SëA˘i⁄
(
BREAKER_OPEN
);

139 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkPª∑ªBä_˛icked
();

140 
	`u¶ìp
(2000000);

141 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkExecBä_˛icked
();

143  
FALSE
;

144 
	}
}

146 
BOOL
 
	gCAœrm_ödiˇt‹_yx
::
	$Pro˚ssMou£Down
(
QMou£Evít
 *
pEvít
)

149 
	`qDebug
() << "ProcessMouseDown";

150 
	`mem£t
(
°r
, 0, (str));

151 
	`•rötf
(
°r
, "%f", 
vÆued
);

152 
box
->
	`£tText
(
°r
);

153 
box
->
	`move
(
pEvít
->
	`globÆPos
());

154 
box
->
	`show
();

156  
TRUE
;

157 
	}
}

159 
	gCAœrm_ödiˇt‹_yx
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
)

161 
BYTE
 
byYkSëSèã
 = 
FALSE
;

163  
A˘i⁄
 ){

164 
BREAKER_OPEN
:

165 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

166 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_OPEN
 )

167 
byYkSëSèã
 = 
TRUE
;

169 
BREAKER_CLOSE
:

170 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

171 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

172 
byYkSëSèã
 = 
TRUE
;

178 if–!
byYkSëSèã
 ){

180 
	`qDebug
() << "Ë£ÖÁΩÆÁä∂ÊÄÅ‰∏çÈÄö!";

184 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
TWOPOS
,
YkD©a
[
YkA˘i⁄Ty≥
], 
NULL
);

185 
	}
}

	@Element/calarm_indicator_yx.h

1 #i‚de‡
CALARM_INDICATOR_YX_H


2 
	#CALARM_INDICATOR_YX_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCAœrm_ödiˇt‹_yx
 : 
public
 
CEÀmít


8 
public
:

9 
CAœrm_ödiˇt‹_yx
();

10 
CAœrm_ödiˇt‹_yx
(
QSåög
);

11 ~
CAœrm_ödiˇt‹_yx
();

13 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

14 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

15 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

16 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

17 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
(
QMou£Evít
 *);

18 
vútuÆ
 
SëA˘i⁄
(
BYTE
);

19 
	m¥iv©e
:

20 
BYTE
 
byVÆ
;

21 
BYTE
 
	mbyVÆ1
;

22 
	mvÆued
;

23 
	m°r
[64];

24 
QMesßgeBox
 *
	mbox
;

27 
QPixm≠
 
	mpixm≠
;

	@Element/canalog_data_sign.cpp

1 
	~"ˇ«log_d©a_sign.h
"

3 
	gCA«log_d©a_sign
::
	$CA«log_d©a_sign
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
Q°rD©a
.
	`˛ór
();

10 
Q°rD©a
 = "0.0";

11 
	}
}

13 
BOOL
 
	gCA«log_d©a_sign
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

15 if–!
pPaöãr
 )

17 
	`Q_ASSERT
–
FALSE
 );

18  
FALSE
 ;

20 
pPaöãr
->
	`ßve
();

21 if–
m_IsPowîOn
 =
POWER_ON
 )

22 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

24 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

26 
pPaöãr
->
	`døwText
(
m_rcDøw
,
Qt
::
AlignVCíãr
,
Q°rD©a
);

29 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

30 
pPaöãr
->
	`ª°‹e
();

31  
TRUE
 ;

32 
	}
}

34 
BOOL
 
	gCA«log_d©a_sign
::
	$InôD©a
( )

36  
FALSE
 ;

37 
	}
}

39 
BOOL
 
	gCA«log_d©a_sign
::
	$Cª©e
–
QRe˘
 
rc
 )

41 
m_rcDøw
 = 
rc
 ;

42  
TRUE
 ;

43 
	}
}

45 
BOOL
 
	gCA«log_d©a_sign
::
	$Com∑ªAâribuãD©a
( )

47 
AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

48 if–
AâribuãD©aSize
 != 1 )

49  
FALSE
;

51 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(0);

52 if–
tmpD©a
->
byD©aTy≥
 =
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
 )

54 
fVÆ
 = 0;

56 
	`AfxGëYc
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
fVÆ
);

57 if–
tmpD©a
->
dbVÆ
 !
fVÆ
 )

59 
Q°rD©a
.
	`˛ór
();

60 
Q°rD©a
 = 
	`QSåög
("%1").
	`¨g
(
fVÆ
, 0, 'f', 2 );

61 
tmpD©a
->
dbVÆ
 = 
fVÆ
;

62  
TRUE
;

66  
FALSE
 ;

67 
	}
}

	@Element/canalog_data_sign.h

1 #i‚de‡
CANALOG_DATA_SIGN_H


2 
	#CANALOG_DATA_SIGN_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCA«log_d©a_sign
 : 
public
 
CEÀmít


8 
public
:

9 
CA«log_d©a_sign
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

17 
QSåög
 
	mQ°rD©a
;

	@Element/cbreaker.cpp

1 
	~"cbªakî.h
"

2 
	~"q°rög.h
"

3 
	gCBªakî
::
	$CBªakî
()

5 
m_wObje˘Ty≥
 = 
BREAKER
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsDúe˘i⁄
 = 
VER_DRAW
 ;

8 
m_byLe·T›Powî
 = 
POWER_OFF
 ;

9 
m_byRightBŸtomPowî
 = 
POWER_OFF
 ;

10 
m_byO≥n
 = 
BREAKER_OPEN
 ;

12 
	`Cª©eMíu
();

14 
	}
}

16 
BOOL
 
	gCBªakî
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

18 if–!
pPaöãr
)

20 
	`Q_ASSERT
–
FALSE
 ) ;

21  
FALSE
 ;

24 
pPaöãr
->
	`ßve
();

27 if–
m_IsDúe˘i⁄
 =
VER_DRAW
 )

30 
	`DøwVîtiˇl
–
pPaöãr
 ) ;

35 
	`DøwH‹iz⁄èl
(
pPaöãr
);

37 
	`DøwIsChoi˚
(
pPaöãr
);

40 
pPaöãr
->
	`ª°‹e
();

41  
TRUE
 ;

42 
	}
}

44 
BOOL
 
	gCBªakî
::
	$InôD©a
( )

46 
m_IsDúe˘i⁄
 = 
m_wDúe˘
;

47 
	`InôMíu
();

48 
	`InôYkD©a
();

49  
TRUE
 ;

50 
	}
}

54 
BOOL
 
	gCBªakî
::
	$Cª©e
–
QRe˘
 
rc
 )

56 if–!
rc
.
	`isEm±y
())

57 
m_rcDøw
 = 
rc
 ;

59 
m_rcDøw
 = 
	`QRe˘
( 1 ,1 ,2 , 2 );

61 
m_rcDøw
.
	`n‹mÆized
();

63  
TRUE
;

64 
	}
}

66 
	gCBªakî
::
	$Cª©eMíu
()

69 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

70 
QA˘i⁄
 * 
YkSë_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

71 
QA˘i⁄
 * 
Yx_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ"));

72 
m_YxTab
 = 
√w
 
	`QTabÀWidgë
();

73 
m_YxTab
->
	`£tWödowFœgs
((m_YxTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

75 
m_YxTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

76 
m_YxTab
->
	`£tFixedSize
(400,300);

77 
m_YxTab
->
	`move
(200,150);

78 
m_YxTab
->
	`£tCﬁumnCou¡
(3);

79 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

80 
m_YxTab
->
	`£tCﬁumnWidth
(0,200);

81 
m_YxTab
->
	`£tCﬁumnWidth
(1,100);

82 
m_YxTab
->
	`£tCﬁumnWidth
(2,100);

83 
QSåögLi°
 
Yx_hódî
;

84 
Yx_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

85 
m_YxTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yx_hódî
);

87 
QA˘i⁄
 * 
Yc_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

88 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

89 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

90 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

91 
m_YcTab
->
	`£tFixedSize
(400,300);

92 
m_YcTab
->
	`move
(200,150);

93 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

94 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

95 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

96 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

97 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

98 
QSåögLi°
 
Yc_hódî
;

99 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

100 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

102 
QA˘i⁄
 * 
Yk_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ"));

103 
m_YkTab
 = 
√w
 
	`QTabÀWidgë
();

104 
m_YkTab
->
	`£tWödowFœgs
((m_YkTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
 );

105 
m_YkTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

106 
m_YkTab
->
	`£tFixedSize
(400,300);

107 
m_YkTab
->
	`move
(200,150);

108 
m_YkTab
->
	`£tCﬁumnCou¡
(2);

109 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

110 
m_YkTab
->
	`£tCﬁumnWidth
(0,250);

111 
m_YkTab
->
	`£tCﬁumnWidth
(1,100);

112 
QSåögLi°
 
Yk_hódî
;

113 
Yk_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑");

114 
m_YkTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yk_hódî
);

116 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

117 
	}
}

119 
	gCBªakî
::
	$InôMíu
( )

121 
BusAddrP¡
[15] = "";

123 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

124 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

126 
Yx_AâribuãD©aNo
 = 0;

127  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

129 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

130  
tmpD©a
->
byD©aTy≥
 )

132 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

133 
tmpD©a
->
dbVÆ
 = 0;

134 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

135 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

136 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

137 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

138 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

139 
	`•rötf
(
BusAddrP¡
,"%u",(
BYTE
)
tmpD©a
->
dbVÆ
);

140 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

147 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

148 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

150 
Yc_AâribuãD©aNo
 = 0;

151  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

153 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

154  
tmpD©a
->
byD©aTy≥
 )

156 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

157 
tmpD©a
->
dbVÆ
 = 0;

158 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

159 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

160 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

161 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

162 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

169 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

170 
Yk_AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

172 
Yk_AâribuãD©aNo
 = 0;

173  
Yk_AâribuãD©aNo
 = 0; Yk_AâribuãD©aNÿ< 
Yk_AâribuãD©aSize
; Yk_AttributeDataNo++ )

175 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
Yk_AâribuãD©aNo
);

176  
tmpD©a
->
byD©aTy≥
 )

178 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

179 
tmpD©a
->
dbVÆ
 = 0;

180 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

181 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

182 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

183 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

189 
	}
}

191 
	gCBªakî
::
	$DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 )

193 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

195 
	`Q_ASSERT
–
FALSE
 ) ;

199 if–
m_rcDøw
.
	`isEm±y
() )

202 
	`DøwVîtiˇlT›
–
pPaöãr
 ) ;

203 
	`DøwVîtiˇlBŸtom
–
pPaöãr
 ) ;

207 
	}
}

209 
	gCBªakî
::
	$DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 )

211 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

213 
	`Q_ASSERT
–
FALSE
 ) ;

217 if–
m_rcDøw
.
	`isEm±y
() )

220 
pPaöãr
->
	`ßve
();

222 
QPí
 
≥n
 ;

223 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

224 if–
m_byLe·T›Powî
 =
POWER_ON
 )

225 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

227 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

229 
pPaöãr
->
	`£tPí
–
≥n
 );

231 
QPoöt
 
±Cíãr
 = 
m_rcDøw
.
	`˚¡î
() ;

232 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

233 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

234 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

237 
WORD
 
wXMoveTo
 = 
±Cíãr
.
	`x
() ;

238 
WORD
 
wYMoveTo
 = 
cy
 ;

239 
WORD
 
wXLöeTo
 = 
±Cíãr
.
	`x
() ;

240 
WORD
 
wYLöeTo
 = 
cy
 + 
wHight
 / 3 ;

241 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

245 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 3 / 8 ;

246 
wYMoveTo
 = 
cy
 + 
wHight
 * 2 / 9;

247 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 5 / 8 ;

248 
wYLöeTo
 = 
cy
 + 
wHight
 * 4 / 9 ;

249 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

252 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 5 / 8 ;

253 
wYMoveTo
 = 
cy
 + 
wHight
 * 2 / 9;

254 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 3 / 8 ;

255 
wYLöeTo
 = 
cy
 + 
wHight
 * 4 / 9;

256 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

257 
pPaöãr
->
	`ª°‹e
();

258 
	}
}

260 
	gCBªakî
::
	$DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

262 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

264 
	`Q_ASSERT
–
FALSE
 ) ;

268 if–
m_rcDøw
.
	`isEm±y
() )

271 
pPaöãr
->
	`ßve
();

273 
QPí
 
≥n
 ;

274 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

275 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

276 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

278 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

280 
pPaöãr
->
	`£tPí
–
≥n
 );

282 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

283 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

284 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

285 
WORD
 
wXMoveTo
 = 0 ;

286 
WORD
 
wYMoveTo
 = 0 ;

287 
WORD
 
wXLöeTo
 = 0 ;

288 
WORD
 
wYLöeTo
 = 0 ;

290 if–
BREAKER_OPEN
 =
m_byO≥n
 )

292 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 1 / 8 ;

293 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

294 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 4 / 8 ;

295 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

297 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

299 
wXMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

300 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

301 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
() ;

302 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

305 
	`Q_ASSERT
–
FALSE
 ) ;

307 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

309 
wXMoveTo
 = 
wXLöeTo
 ;

310 
wYMoveTo
 = 
wYLöeTo
 ;

311 
wXLöeTo
 = wXLineTo ;

312 
wYLöeTo
 = 
m_rcDøw
.
	`bŸtom
() ;

313 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

315 
pPaöãr
->
	`ª°‹e
();

316 
	}
}

318 
	gCBªakî
::
	$DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 )

320 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

322 
	`Q_ASSERT
–
FALSE
 ) ;

326 if–
m_rcDøw
.
	`isEm±y
() )

330 
	`DøwH‹iz⁄èlT›
–
pPaöãr
 ) ;

331 
	`DøwH‹iz⁄èlBŸtom
–
pPaöãr
 ) ;

334 
	}
}

336 
	gCBªakî
::
	$DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 )

338 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

340 
	`Q_ASSERT
–
FALSE
 ) ;

344 if–
m_rcDøw
.
	`isEm±y
() )

347 
pPaöãr
->
	`ßve
();

349 
QPí
 
≥n
 ;

350 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

351 if–
m_byLe·T›Powî
 =
POWER_ON
 )

352 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

354 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

356 
pPaöãr
->
	`£tPí
–
≥n
 );

358 
QPoöt
 
±Cíãr
 = 
m_rcDøw
.
	`˚¡î
() ;

359 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

360 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

361 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

364 
WORD
 
wXMoveTo
 = 
cy
 ;

365 
WORD
 
wYMoveTo
 = 
±Cíãr
.
	`y
() ;

366 
WORD
 
wXLöeTo
 = 
cy
 + 
wWidth
 / 3 ;

367 
WORD
 
wYLöeTo
 = 
±Cíãr
.
	`y
() ;

368 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

372 
wXMoveTo
 = 
cy
 + 
wWidth
 / 6 ;

373 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 3 / 8 ;

374 
wXLöeTo
 = 
cy
 + 
wWidth
 / 2 ;

375 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 5 / 8 ;

376 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

379 
wXMoveTo
 = 
cy
 + 
wWidth
 / 6 ;

380 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 5 / 8 ;

381 
wXLöeTo
 = 
cy
 + 
wWidth
 / 2 ;

382 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 3 / 8 ;

383 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

384 
pPaöãr
->
	`ª°‹e
();

385 
	}
}

387 
	gCBªakî
::
	$DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

389 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

391 
	`Q_ASSERT
–
FALSE
 ) ;

395 if–
m_rcDøw
.
	`isEm±y
() )

398 
pPaöãr
->
	`ßve
();

400 
QPí
 
≥n
 ;

401 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

402 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

403 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

405 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

407 
pPaöãr
->
	`£tPí
–
≥n
 );

409 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

410 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

411 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

412 
WORD
 
wXMoveTo
 = 0 ;

413 
WORD
 
wYMoveTo
 = 0 ;

414 
WORD
 
wXLöeTo
 = 0 ;

415 
WORD
 
wYLöeTo
 = 0 ;

417 if–
BREAKER_OPEN
 =
m_byO≥n
 )

419 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

420 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 5 / 8 ;

421 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3;

422 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 4 / 8;

424 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

426 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

427 
wYMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

428 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

429 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
() ;

432 
	`Q_ASSERT
–
FALSE
 ) ;

434 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

436 
wXMoveTo
 = 
wXLöeTo
 ;

437 
wYMoveTo
 = 
wYLöeTo
 ;

438 
wXLöeTo
 = 
m_rcDøw
.
	`right
() ;

439 
wYLöeTo
 = wYLineTo ;

440 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

442 
pPaöãr
->
	`ª°‹e
();

443 
	}
}

445 
	gCBªakî
::
	$DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 )

447 if–
m_byIsChoi˚
 )

449 
pPaöãr
->
	`ßve
();

450 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

451 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

452 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

453 
pPaöãr
->
	`£tPí
–
≥n
 );

455 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

456 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

457 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

458 
pPaöãr
->
	`£tBrush
(
brush
);

459 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

460 
pPaöãr
->
	`ª°‹e
();

462 
	}
}

464 
BOOL
 
	gCBªakî
::
	$Com∑ªAâribuãD©a
( )

466 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

467 if–!
AâribuãD©aSize
 )

468  
FALSE
;

470 
AâribuãD©aNo
 = 0;

471  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

473 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

474  
tmpD©a
->
byD©aTy≥
 )

476 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

477 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

479 
BYTE
 
byVÆ
 = 0;

480 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

482 if–
tmpD©a
->
dbVÆ
 !
byVÆ
 )

484 if–
byVÆ
 == 1 )

485 
m_byO≥n
 = 
BREAKER_CLOSE
;

487 
m_byO≥n
 = 
BREAKER_OPEN
;

488 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

489  
TRUE
;

498  
FALSE
;

499 
	}
}

501 
BOOL
 
	gCBªakî
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

503 
m_byIsChoi˚
 = 
TRUE
;

504 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

505 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

507 
m_byIsChoi˚
 = 
FALSE
;

508 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

509  
TRUE
;

510 
	}
}

512 
	gCBªakî
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

514 if–
a˘i⁄
 =
NULL
 )

516 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊâßË°å") )

518 
BYTE
 
bySëBªakSètus
 = -1;

520 
QSåög
 
°r
;

521  
m_byO≥n
 )

523 
BREAKER_CLOSE
:

524 
bySëBªakSètus
 = 
BREAKER_OPEN
;

525 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂàÜÈó∏Êìç‰Ωú!!!");

527 
BREAKER_OPEN
:

528 
bySëBªakSètus
 = 
BREAKER_CLOSE
;

529 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂêàÈó∏Êìç‰Ωú!!!");

535 
QMesßgeBox
 
	`box
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

536 
box
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
);

537 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("Á°ÆËÆ§")));

538 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

540  
box
.
	`exec
() )

542 
QMesßgeBox
::
Yes
:

543 
	`SëA˘i⁄
(
bySëBªakSètus
);

545 
QMesßgeBox
::
No
:

553 
	`TabÀShow
(
a˘i⁄
);

554 
	}
}

556 
	gCBªakî
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
)

561 
BYTE
 
byYkSëSèã
 = 
FALSE
;

567 if–
	`AfxGëLogöSèã
(Ë=
CPage
::
LOGOUT
 )

569 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Â∞öÊú™ÁôªÂΩïÔºåËØ∑ÁôªÂΩïÂêéÊìç‰Ωú!!!"),QMesßgeBox::
Yes
 );

573  
A˘i⁄
 )

575 
BREAKER_OPEN
:

576 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

577 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_OPEN
 )

578 
byYkSëSèã
 = 
TRUE
;

580 
BREAKER_CLOSE
:

581 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

582 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

583 
byYkSëSèã
 = 
TRUE
;

589 if–!
byYkSëSèã
 )

591 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ê≤°ÊúâÈÖçÁΩÆÂØπÂ∫îÊìç‰ΩúÈÅ•ÊéßÁÇπ"),QMesßgeBox::
Yes
 );

596 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
TWOPOS
,
YkD©a
[
YkA˘i⁄Ty≥
]);

598 
	}
}

600 
BOOL
 
	gCBªakî
::
	$IsCh™geCﬁ‹
( )

602 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

604 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

606 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

607 
m_wObje˘NodeNextSèã
 = 
m_byRightBŸtomPowî
;

609 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

611 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

612 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

615 if–
m_byO≥n
 =
BREAKER_OPEN
 )

617 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

618 
m_byLe·T›Powî
 = 
POWER_OFF
;

619 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

620 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

621 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

623  
TRUE
;

624 
	}
}

626 
BOOL
 
	gCBªakî
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

628 
m_byLe·T›Powî
 = 
POWER_OFF
;

629 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

630 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

632 
m_byLe·T›Powî
 = 
PowîSèã
;

633 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

635 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

636 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

638 if–
m_byO≥n
 =
BREAKER_OPEN
 )

639 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

641 
m_wObje˘NodeNext
 = 
m_wObje˘NodeR
;

643 if–
Ch™geNode
 =
m_wObje˘NodeR
 )

645 
m_byRightBŸtomPowî
 = 
PowîSèã
;

646 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

648 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

649 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

651 if–
m_byO≥n
 =
BREAKER_OPEN
 )

652 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

654 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

657  
FALSE
;

658  
TRUE
;

659 
	}
}

	@Element/cbreaker.h

1 #i‚de‡
CBREAKER_H


2 
	#CBREAKER_H


	)

3 
	~"˚ñmít.h
"

5 ˛as†
	cCBªakî
 : 
public
 
CEÀmít


7 
Q_OBJECT


8 
public
:

9 
CBªakî
();

10 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

11 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

12 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

13 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

14 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) ;

15 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

16 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

17 
Cª©eMíu
();

18 
InôMíu
( );

19 
DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 );

20 
DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

21 
DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

22 
DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 );

23 
DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

24 
DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

25 
DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 );

26 
SëA˘i⁄
–
BYTE
 
A˘i⁄
 );

28 
BYTE
 
	mm_IsDúe˘i⁄
 ;

29 
BYTE
 
	mm_byLe·T›Powî
 ;

30 
BYTE
 
	mm_byRightBŸtomPowî
 ;

32 
BYTE
 
	mm_byO≥n
 ;

34 
public
 
	m¶Ÿs
:

35 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/ccircle_indicator_sign.cpp

1 
	~"ccú˛e_ödiˇt‹_sign.h
"

3 
	gCCú˛e_ödiˇt‹_sign
::
	$CCú˛e_ödiˇt‹_sign
()

5 
m_wObje˘Ty≥
 = 
LINKER
;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
	}
}

11 
BOOL
 
	gCCú˛e_ödiˇt‹_sign
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

13 if–!
pPaöãr
 )

15 
	`Q_ASSERT
–
FALSE
 );

16  
FALSE
 ;

19 
pPaöãr
->
	`ßve
();

21 if–
m_IsPowîOn
 =
POWER_ON
 )

23 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

24 
pPaöãr
->
	`£tBrush
–
Qt
::
ªd
 );

28 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

29 
pPaöãr
->
	`£tBrush
–
Qt
::
gªí
 );

33 
pPaöãr
->
	`døwEŒù£
–
m_rcDøw
 );

37 
pPaöãr
->
	`ª°‹e
();

38  
TRUE
 ;

39 
	}
}

41 
BOOL
 
	gCCú˛e_ödiˇt‹_sign
::
	$InôD©a
( )

43  
FALSE
 ;

44 
	}
}

46 
BOOL
 
	gCCú˛e_ödiˇt‹_sign
::
	$Cª©e
–
QRe˘
 
rc
 )

48 
m_rcDøw
 = 
rc
 ;

49  
TRUE
 ;

50 
	}
}

52 
BOOL
 
	gCCú˛e_ödiˇt‹_sign
::
	$Com∑ªAâribuãD©a
( )

54 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

55 if–
AâribuãD©aSize
 != 1 )

56  
FALSE
;

58 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(0);

59 if–
tmpD©a
->
byD©aTy≥
 =
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
 )

61 
BYTE
 
byVÆ
 = 0;

62 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

63 if–
tmpD©a
->
dbVÆ
 !
byVÆ
 )

65 if–
byVÆ
 == 1 )

66 
m_IsPowîOn
 = 
POWER_ON
;

68 
m_IsPowîOn
 = 
POWER_OFF
;

69 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

70  
TRUE
;

73  
FALSE
;

74 
	}
}

	@Element/ccircle_indicator_sign.h

1 #i‚de‡
CCIRCLE_INDICATOR_SIGN_H


2 
	#CCIRCLE_INDICATOR_SIGN_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCCú˛e_ödiˇt‹_sign
 : 
public
 
CEÀmít


8 
public
:

9 
CCú˛e_ödiˇt‹_sign
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
BOOL
 
Com∑ªAâribuãD©a
( );

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/ccontactor.cpp

1 
	~"cc⁄è˘‹.h
"

3 
	gCC⁄è˘‹
::
	$CC⁄è˘‹
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_byO≥n
 = 
BREAKER_OPEN
;

8 
m_byLe·T›Powî
 = 
POWER_OFF
;

9 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

10 
m_IsDúe˘i⁄
 = 
HORZ_DRAW
;

12 
	`Cª©eMíu
();

13 
	}
}

15 
BOOL
 
	gCC⁄è˘‹
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

17 if–!
pPaöãr
)

19 
	`Q_ASSERT
–
FALSE
 ) ;

20  
FALSE
 ;

23 
pPaöãr
->
	`ßve
();

26 if–
m_IsDúe˘i⁄
 =
VER_DRAW
 )

29 
	`DøwVîtiˇl
–
pPaöãr
 ) ;

34 
	`DøwH‹iz⁄èl
(
pPaöãr
);

36 
	`DøwIsChoi˚
(
pPaöãr
);

39 
pPaöãr
->
	`ª°‹e
();

40  
TRUE
 ;

42 
	}
}

44 
BOOL
 
	gCC⁄è˘‹
::
	$InôD©a
( )

46 
m_IsDúe˘i⁄
 = 
m_wDúe˘
;

47 
	`InôMíu
();

48 
	`InôYkD©a
();

49  
TRUE
 ;

50 
	}
}

52 
BOOL
 
	gCC⁄è˘‹
::
	$Cª©e
–
QRe˘
 
rc
 )

54 
m_rcDøw
 = 
rc
 ;

55  
TRUE
 ;

56 
	}
}

58 
	gCC⁄è˘‹
::
	$Cª©eMíu
()

60 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

61 
QA˘i⁄
 * 
YkSë_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

62 
QA˘i⁄
 * 
Yx_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ"));

63 
m_YxTab
 = 
√w
 
	`QTabÀWidgë
();

64 
m_YxTab
->
	`£tWödowFœgs
((m_YxTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

65 
m_YxTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

66 
m_YxTab
->
	`£tFixedSize
(400,300);

67 
m_YxTab
->
	`move
(200,150);

68 
m_YxTab
->
	`£tCﬁumnCou¡
(3);

69 
m_YxTab
->
	`£tRowCou¡
(20);

70 
m_YxTab
->
	`£tCﬁumnWidth
(0,200);

71 
m_YxTab
->
	`£tCﬁumnWidth
(1,100);

72 
m_YxTab
->
	`£tCﬁumnWidth
(2,100);

73 
QSåögLi°
 
Yx_hódî
;

74 
Yx_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

75 
m_YxTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yx_hódî
);

77 
QA˘i⁄
 * 
Yc_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

78 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

79 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

80 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

81 
m_YcTab
->
	`£tFixedSize
(400,300);

82 
m_YcTab
->
	`move
(200,150);

83 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

84 
m_YcTab
->
	`£tRowCou¡
(20);

85 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

86 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

87 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

88 
QSåögLi°
 
Yc_hódî
;

89 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

90 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

92 
QA˘i⁄
 * 
Yk_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ"));

93 
m_YkTab
 = 
√w
 
	`QTabÀWidgë
();

94 
m_YkTab
->
	`£tWödowFœgs
((m_YkTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

95 
m_YkTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

96 
m_YkTab
->
	`£tFixedSize
(400,300);

97 
m_YkTab
->
	`move
(200,150);

98 
m_YkTab
->
	`£tCﬁumnCou¡
(2);

99 
m_YkTab
->
	`£tRowCou¡
(20);

100 
m_YkTab
->
	`£tCﬁumnWidth
(0,250);

101 
m_YkTab
->
	`£tCﬁumnWidth
(1,100);

102 
QSåögLi°
 
Yk_hódî
;

103 
Yk_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑");

104 
m_YkTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yk_hódî
);

106 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

107 
	}
}

109 
	gCC⁄è˘‹
::
	$InôMíu
( )

111 
BusAddrP¡
[15] = "";

113 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

114 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

116 
Yx_AâribuãD©aNo
 = 0;

117  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

119 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

120  
tmpD©a
->
byD©aTy≥
 )

122 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

123 
tmpD©a
->
dbVÆ
 = 0;

124 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

125 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

126 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

127 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

128 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

129 
	`•rötf
(
BusAddrP¡
,"%u",(
BYTE
)
tmpD©a
->
dbVÆ
);

130 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

137 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

138 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

140 
Yc_AâribuãD©aNo
 = 0;

141  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

143 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

144  
tmpD©a
->
byD©aTy≥
 )

146 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

147 
tmpD©a
->
dbVÆ
 = 0;

148 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

149 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

150 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

151 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

152 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

159 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

160 
Yk_AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

162 
Yk_AâribuãD©aNo
 = 0;

163  
Yk_AâribuãD©aNo
 = 0; Yk_AâribuãD©aNÿ< 
Yk_AâribuãD©aSize
; Yk_AttributeDataNo++ )

165 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
Yk_AâribuãD©aNo
);

166  
tmpD©a
->
byD©aTy≥
 )

168 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

169 
tmpD©a
->
dbVÆ
 = 0;

170 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

171 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

172 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

173 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

179 
	}
}

182 
	gCC⁄è˘‹
::
	$DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 )

184 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

186 
	`Q_ASSERT
–
FALSE
 ) ;

190 if–
m_rcDøw
.
	`isEm±y
() )

193 
	`DøwVîtiˇlT›
–
pPaöãr
 ) ;

194 
	`DøwVîtiˇlBŸtom
–
pPaöãr
 ) ;

195 
	}
}

197 
	gCC⁄è˘‹
::
	$DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 )

199 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

201 
	`Q_ASSERT
–
FALSE
 ) ;

205 if–
m_rcDøw
.
	`isEm±y
() )

208 
pPaöãr
->
	`ßve
();

210 
QPí
 
≥n
 ;

211 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

212 if–
m_byLe·T›Powî
 =
POWER_ON
 )

213 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

215 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

217 
pPaöãr
->
	`£tPí
–
≥n
 );

219 
QPaöãrP©h
 
BegöP©h
;

220 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
());

221 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

222 
BegöP©h
.
	`cubicTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3,

223 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/18,

224 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*2/9);

226 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

227 
pPaöãr
->
	`ª°‹e
();

228 
	}
}

230 
	gCC⁄è˘‹
::
	$DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

232 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

234 
	`Q_ASSERT
–
FALSE
 ) ;

238 if–
m_rcDøw
.
	`isEm±y
() )

241 
pPaöãr
->
	`ßve
();

243 
QPí
 
≥n
 ;

244 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

245 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

246 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

248 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

250 
pPaöãr
->
	`£tPí
–
≥n
 );

252 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

253 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

254 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

255 
WORD
 
wXMoveTo
 = 0 ;

256 
WORD
 
wYMoveTo
 = 0 ;

257 
WORD
 
wXLöeTo
 = 0 ;

258 
WORD
 
wYLöeTo
 = 0 ;

260 if–
BREAKER_OPEN
 =
m_byO≥n
 )

262 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 1 / 8 ;

263 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

264 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 4 / 8 ;

265 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

267 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

269 
wXMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

270 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

271 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
() ;

272 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

275 
	`Q_ASSERT
–
FALSE
 ) ;

277 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

279 
wXMoveTo
 = 
wXLöeTo
 ;

280 
wYMoveTo
 = 
wYLöeTo
;

281 
wXLöeTo
 = wXLineTo ;

282 
wYLöeTo
 = 
m_rcDøw
.
	`bŸtom
() ;

283 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

285 
pPaöãr
->
	`ª°‹e
();

286 
	}
}

288 
	gCC⁄è˘‹
::
	$DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 )

290 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

292 
	`Q_ASSERT
–
FALSE
 ) ;

296 if–
m_rcDøw
.
	`isEm±y
() )

300 
	`DøwH‹iz⁄èlT›
–
pPaöãr
 ) ;

301 
	`DøwH‹iz⁄èlBŸtom
–
pPaöãr
 ) ;

304 
	}
}

306 
	gCC⁄è˘‹
::
	$DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 )

308 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

310 
	`Q_ASSERT
–
FALSE
 ) ;

314 if–
m_rcDøw
.
	`isEm±y
() )

317 
pPaöãr
->
	`ßve
();

319 
QPí
 
≥n
 ;

320 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

321 if–
m_byLe·T›Powî
 =
POWER_ON
 )

322 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

324 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

326 
pPaöãr
->
	`£tPí
–
≥n
 );

328 
QPaöãrP©h
 
BegöP©h
;

330 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

331 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

332 
BegöP©h
.
	`cubicTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2,

333 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/18,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*2/3,

334 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*2/9,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

335 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

336 
pPaöãr
->
	`ª°‹e
();

337 
	}
}

339 
	gCC⁄è˘‹
::
	$DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

341 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

343 
	`Q_ASSERT
–
FALSE
 ) ;

347 if–
m_rcDøw
.
	`isEm±y
() )

350 
pPaöãr
->
	`ßve
();

352 
QPí
 
≥n
 ;

353 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

354 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

355 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

357 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

359 
pPaöãr
->
	`£tPí
–
≥n
 );

361 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

362 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

363 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

364 
WORD
 
wXMoveTo
 = 0 ;

365 
WORD
 
wYMoveTo
 = 0 ;

366 
WORD
 
wXLöeTo
 = 0 ;

367 
WORD
 
wYLöeTo
 = 0 ;

369 if–
BREAKER_OPEN
 =
m_byO≥n
 )

371 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

372 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 5 / 8 ;

373 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

374 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 4 / 8;

376 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

378 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

379 
wYMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

380 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

381 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
() ;

384 
	`Q_ASSERT
–
FALSE
 ) ;

386 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

388 
wXMoveTo
 = 
wXLöeTo
 ;

389 
wYMoveTo
 = 
wYLöeTo
 ;

390 
wXLöeTo
 = 
m_rcDøw
.
	`right
() ;

391 
wYLöeTo
 = wYLineTo ;

392 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

394 
pPaöãr
->
	`ª°‹e
();

395 
	}
}

397 
	gCC⁄è˘‹
::
	$DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 )

399 if–
m_byIsChoi˚
 )

401 
pPaöãr
->
	`ßve
();

402 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

403 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

404 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

405 
pPaöãr
->
	`£tPí
–
≥n
 );

407 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

408 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

409 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

410 
pPaöãr
->
	`£tBrush
(
brush
);

411 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

412 
pPaöãr
->
	`ª°‹e
();

414 
	}
}

416 
BOOL
 
	gCC⁄è˘‹
::
	$Com∑ªAâribuãD©a
( )

418 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

419 if–!
AâribuãD©aSize
 )

420  
FALSE
;

422 
AâribuãD©aNo
 = 0;

423  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

425 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

426  
tmpD©a
->
byD©aTy≥
 )

428 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

429 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

431 
BYTE
 
byVÆ
 = 0;

432 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

433 if–
tmpD©a
->
dbVÆ
 !
byVÆ
 )

435 if–
byVÆ
 == 1 )

436 
m_byO≥n
 = 
BREAKER_CLOSE
;

438 
m_byO≥n
 = 
BREAKER_OPEN
;

439 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

440  
TRUE
;

449  
FALSE
;

450 
	}
}

452 
BOOL
 
	gCC⁄è˘‹
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

454 
m_byIsChoi˚
 = 
TRUE
;

455 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

456 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

457 
m_byIsChoi˚
 = 
FALSE
;

458 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

459  
TRUE
;

460 
	}
}

462 
	gCC⁄è˘‹
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

464 if–
a˘i⁄
 =
NULL
 )

466 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊâßË°å") )

468 
BYTE
 
bySëBªakSètus
 = -1;

470 
QSåög
 
°r
;

471  
m_byO≥n
 )

473 
BREAKER_CLOSE
:

474 
bySëBªakSètus
 = 
BREAKER_OPEN
;

475 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂàÜÈó∏Êìç‰Ωú!!!");

477 
BREAKER_OPEN
:

478 
bySëBªakSètus
 = 
BREAKER_CLOSE
;

479 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂêàÈó∏Êìç‰Ωú!!!");

484 
QMesßgeBox
 
	`box
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

485 
box
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
);

486 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("Á°ÆËÆ§")));

487 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

488  
box
.
	`exec
() )

490 
QMesßgeBox
::
Yes
:

491 
	`SëA˘i⁄
(
bySëBªakSètus
);

493 
QMesßgeBox
::
No
:

501 
	`TabÀShow
(
a˘i⁄
);

502 
	}
}

505 
	gCC⁄è˘‹
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
)

510 
BYTE
 
byYkSëSèã
 = 
FALSE
;

516 if–
	`AfxGëLogöSèã
(Ë=
CPage
::
LOGOUT
 )

518 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Â∞öÊú™ÁôªÂΩïÔºåËØ∑ÁôªÂΩïÂêéÊìç‰Ωú!!!"),QMesßgeBox::
Yes
 );

522  
A˘i⁄
 )

524 
BREAKER_OPEN
:

525 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

526 if–
YkD©a
[
YkA˘i⁄Ty≥
].
wVÆ
 =
YK_OPEN
 )

527 
byYkSëSèã
 = 
TRUE
;

529 
BREAKER_CLOSE
:

530 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

531 if–
YkD©a
[
YKACTIONCLOSE
].
wVÆ
 =
YK_CLOSE
 )

532 
byYkSëSèã
 = 
TRUE
;

538 if–!
byYkSëSèã
 )

540 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ê≤°ÊúâÈÖçÁΩÆÂØπÂ∫îÊìç‰ΩúÈÅ•ÊéßÁÇπ"),QMesßgeBox::
Yes
 );

545 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
TWOPOS
,
YkD©a
[
YkA˘i⁄Ty≥
]);

547 
	}
}

549 
BOOL
 
	gCC⁄è˘‹
::
	$IsCh™geCﬁ‹
( )

551 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

553 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

555 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

556 
m_wObje˘NodeNextSèã
 = 
m_byRightBŸtomPowî
;

558 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

560 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

561 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

564 if–
m_byO≥n
 =
BREAKER_OPEN
 )

566 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

567 
m_byLe·T›Powî
 = 
POWER_OFF
;

568 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

569 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

570 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

572  
TRUE
;

573 
	}
}

575 
BOOL
 
	gCC⁄è˘‹
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

577 
m_byLe·T›Powî
 = 
POWER_OFF
;

578 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

579 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

581 
m_byLe·T›Powî
 = 
PowîSèã
;

582 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

584 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

585 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

587 if–
m_byO≥n
 =
BREAKER_OPEN
 )

588 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

590 
m_wObje˘NodeNext
 = 
m_wObje˘NodeR
;

592 if–
Ch™geNode
 =
m_wObje˘NodeR
 )

594 
m_byRightBŸtomPowî
 = 
PowîSèã
;

595 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

597 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

598 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

600 if–
m_byO≥n
 =
BREAKER_OPEN
 )

601 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

603 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

606  
FALSE
;

607  
TRUE
;

608 
	}
}

	@Element/ccontactor.h

1 #i‚de‡
CCONTACTOR_H


2 
	#CCONTACTOR_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCC⁄è˘‹
 : 
public
 
CEÀmít


8 
Q_OBJECT


9 
public
:

10 
CC⁄è˘‹
();

12 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

13 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

14 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

15 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

16 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) ;

17 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

18 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

19 
Cª©eMíu
();

20 
InôMíu
( );

21 
DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 );

22 
DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

23 
DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

24 
DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 );

25 
DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

26 
DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

27 
DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 );

28 
SëA˘i⁄
–
BYTE
 
A˘i⁄
 );

30 
BYTE
 
	mm_IsDúe˘i⁄
 ;

31 
BYTE
 
	mm_byLe·T›Powî
 ;

32 
BYTE
 
	mm_byRightBŸtomPowî
 ;

33 
BYTE
 
	mm_byO≥n
 ;

35 
public
 
	m¶Ÿs
:

36 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/cct_sign.cpp

1 
	~"c˘_sign.h
"

3 
	gCCt_sign
::
	$CCt_sign
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
	}
}

11 
BOOL
 
	gCCt_sign
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

13 if–!
pPaöãr
 )

15 
	`Q_ASSERT
–
FALSE
 );

16  
FALSE
 ;

18 
pPaöãr
->
	`ßve
();

19 if–
m_IsPowîOn
 =
POWER_ON
 )

20 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

22 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

23 if–
m_IsDúe˘i⁄
 =
HORZ_DRAW
 )

25 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/8,m_rcDøw.
	`y
(),

26 
m_rcDøw
.
	`width
()*3/4,m_rcDøw.
	`height
());

27 
pPaöãr
->
	`døwLöe
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2,

28 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

32 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/8,

33 
m_rcDøw
.
	`width
(),m_rcDøw.
	`height
()*3/4);

34 
pPaöãr
->
	`døwLöe
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
(),

35 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
());

39 
pPaöãr
->
	`ª°‹e
();

40  
TRUE
 ;

41 
	}
}

43 
BOOL
 
	gCCt_sign
::
	$InôD©a
( )

45  
FALSE
 ;

46 
	}
}

48 
BOOL
 
	gCCt_sign
::
	$Cª©e
–
QRe˘
 
rc
 )

50 
m_rcDøw
 = 
rc
 ;

51  
TRUE
 ;

52 
	}
}

54 
BOOL
 
	gCCt_sign
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

56 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

58 
m_IsPowîOn
 = 
PowîSèã
;

59  
TRUE
;

61  
FALSE
;

62 
	}
}

	@Element/cct_sign.h

1 #i‚de‡
CCT_SIGN_H


2 
	#CCT_SIGN_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCCt_sign
 : 
public
 
CEÀmít


8 
public
:

9 
CCt_sign
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/ceelment.cpp

1 
	~"˚ñmít.h
"

2 
	~"cgíî©rix.h
"

3 
	~"˛ökî.h
"

4 
	~"˝owî.h
"

5 
	~"˘ønsf‹mî.h
"

6 
	~"c˘_sign.h
"

7 
	~"˝t_sign.h
"

8 
	~"cbªakî.h
"

9 
	~"ˇ«log_d©a_sign.h
"

10 
	~"˘ext_sign.h
"

11 
	~"ccú˛e_ödiˇt‹_sign.h
"

12 
	~"¸e˘_ödiˇt‹_sign.h
"

13 
	~"˛ighäög_¥Ÿe˘‹.h
"

14 
	~"cc⁄è˘‹.h
"

15 
	~"cswôch_2pos.h
"

16 
	~"cswôch_3pos.h
"

17 
	~"˛ﬂd_bªakî_2pos.h
"

18 
	~"˛ﬂd_bªakî_3pos.h
"

19 
	~"cswôch_c⁄√˘_óπh.h
"

21 
	~"cimage_yc.h
"

22 
	~"ˇœrm_ödiˇt‹_yx.h
"

25 
	gCEÀmít
::
	$CEÀmít
()

27 
m_byIsChoi˚
 = 
FALSE
;

28 
m_byTøn•¨ícy
 = 255;

29 
YkA˘i⁄Ty≥
 = 
YK_NULL
;

30 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

31 
	}
}

34 
CEÀmít
 * 
	gCEÀmít
::
	$Cª©eEÀmít
–
PELE_FST
 
≥À_f°
)

37 if–
≥À_f°
->
wEÀmítTy≥
 < 
CEÀmít
::
GENERATRIX
 ||Öñe_f°->wEÀmítTy≥ >CEÀmít::
END_PIC
 )

38  
NULL
 ;

40 
CEÀmít
 * 
pEÀmít
 = 
NULL
 ;

41  
≥À_f°
->
wEÀmítTy≥
 )

43 
GENERATRIX
:

44 
pEÀmít
 = 
√w
 
CGíî©rix
 ;

46 
LINKER
:

47 
pEÀmít
 = 
√w
 
CLökî
 ;

49 
POWER
:

50 
pEÀmít
 = 
√w
 
CPowî
 ;

52 
TRANSFORMER
:

53 
pEÀmít
 = 
√w
 
CTønsf‹mî
 ;

55 
CT_SIGN
:

56 
pEÀmít
 = 
√w
 
CCt_sign
 ;

58 
PT_SIGN
:

59 
pEÀmít
 = 
√w
 
CPt_sign
 ;

61 
BREAKER
:

62 
pEÀmít
 = 
√w
 
CBªakî
 ;

64 
ANALOG_DATA_SIGN
:

65 
pEÀmít
 = 
√w
 
CA«log_d©a_sign
 ;

67 
TEXT_SIGN
:

68 
pEÀmít
 = 
√w
 
CText_sign
 ;

70 
CIRCLE_INDICATOR_SIGN
:

71 
pEÀmít
 = 
√w
 
CCú˛e_ödiˇt‹_sign
 ;

73 
RECT_INDICATOR_SIGN
:

74 
pEÀmít
 = 
√w
 
CRe˘_ödiˇt‹_sign
 ;

76 
LIGHTNING_PROTECTOR
:

77 
pEÀmít
 = 
√w
 
CLighäög_¥Ÿe˘‹
 ;

79 
CONTACTOR
:

80 
pEÀmít
 = 
√w
 
CC⁄è˘‹
 ;

82 
SWITCH_2POS
:

83 
pEÀmít
 = 
√w
 
CSwôch_2pos
 ;

85 
SWITCH_3POS
:

86 
pEÀmít
 = 
√w
 
CSwôch_3pos
 ;

88 
LOAD_BREAKER_2POS
:

89 
pEÀmít
 = 
√w
 
CLﬂd_bªakî_2pos
 ;

91 
LOAD_BREAKER_3POS
:

92 
pEÀmít
 = 
√w
 
CLﬂd_bªakî_3pos
 ;

94 
SWITCH_CONNECT_EARTH
:

95 
pEÀmít
 = 
√w
 
CSwôch_c⁄√˘_óπh
 ;

98 
IMAGE_FOR_AI
:

99 
pEÀmít
 = 
√w
 
	`CImage_Yc
(
≥À_f°
->
pi˙ame
);

101 
ALARM_FOR_AI
:

102 
pEÀmít
 = 
√w
 
	`CAœrm_ödiˇt‹_yx
(
≥À_f°
->
pi˙ame
);

106 
pEÀmít
 = 
NULL
 ;

110  
pEÀmít
 ;

111 
	}
}

113 
WORD
 
	gCEÀmít
::
	$GëObje˘Ty≥
()

115  
m_wObje˘Ty≥
;

116 
	}
}

118 
	gCEÀmít
::
	$SëObje˘Ty≥
(
WORD
 
EÀmítTy≥
)

120 
m_wObje˘Ty≥
 = 
EÀmítTy≥
;

121 
	}
}

123 
QRe˘
 
	gCEÀmít
::
	$GëQRe˘
()

125  
m_rcDøw
;

126 
	}
}

128 
	gCEÀmít
::
	$TabÀShow
(
QA˘i⁄
 *
a˘i⁄
)

130 if–
a˘i⁄
 =
NULL
 )

132 
BYTE
 
byVÆ
 = 0;

133 
fVÆ
 = 0.0;

135 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ") )

137 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

139 
Yx_AâribuãD©aNo
 = 0;

140  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

142 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

143  
tmpD©a
->
byD©aTy≥
 )

145 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

146 
byVÆ
 = 0;

147 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

150 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

151 
QTabÀWidgëIãm
 * 
tmpIãm
 = 
m_YxTab
->
	`ôem
(
Yx_AâribuãD©aNo
,2);

152 
QSåög
 
q°rVÆ
 = 
	`QSåög
("%1").
	`¨g
(
byVÆ
);

153 
tmpIãm
->
	`£tText
(
q°rVÆ
);

162 
m_YxTab
->
	`show
();

164 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ") )

166 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

168 
Yc_AâribuãD©aNo
 = 0;

169  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

171 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

172  
tmpD©a
->
byD©aTy≥
 )

174 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

175 
fVÆ
 = 0.0;

176 
	`AfxGëYc
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
fVÆ
);

179 
tmpD©a
->
dbVÆ
 = 
fVÆ
;

180 
QTabÀWidgëIãm
 * 
tmpIãm
 = 
m_YcTab
->
	`ôem
(
Yc_AâribuãD©aNo
,2);

181 
QSåög
 
q°rVÆ
 = 
	`QSåög
("%1").
	`¨g
(
fVÆ
,0,'f',3);

182 
tmpIãm
->
	`£tText
(
q°rVÆ
);

191 
m_YcTab
->
	`show
();

193 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ËÑâÊï∞ÊçÆ") )

194 
m_YmTab
->
	`show
();

195 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ") )

196 
m_YkTab
->
	`show
();

198 
	}
}

201 
BOOL
 
	gCEÀmít
::
	$InôYkD©a
()

203 
AâribuãD©aNo
 = 0;

204 
AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

205  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

207 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

208  
tmpD©a
->
byD©aTy≥
 )

210 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

211 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

213 
YkD©a
[
YKACTIONOPEN
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

214 
YkD©a
[
YKACTIONOPEN
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

215 
YkD©a
[
YKACTIONOPEN
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

216 
YkD©a
[
YKACTIONOPEN
].
wBusNoSrc
 = 14;

217 
YkD©a
[
YKACTIONOPEN
].
wAddrSrc
 = 1;

218 
YkD©a
[
YKACTIONOPEN
].
wP¡NoSrc
 = 0;

219 
YkD©a
[
YKACTIONOPEN
].
byA˘i⁄
 = 
YK_OPEN
;

220 
YkD©a
[
YKACTIONOPEN
].
wVÆ
 = 
YK_CLOSE
;

222 if–
tmpD©a
->
byAâribuãD©aByã
 == 2 )

224 
YkD©a
[
YKACTIONCLOSE
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

225 
YkD©a
[
YKACTIONCLOSE
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

226 
YkD©a
[
YKACTIONCLOSE
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

227 
YkD©a
[
YKACTIONCLOSE
].
wBusNoSrc
 = 14;

228 
YkD©a
[
YKACTIONCLOSE
].
wAddrSrc
 = 1;

229 
YkD©a
[
YKACTIONCLOSE
].
wP¡NoSrc
 = 0;

230 
YkD©a
[
YKACTIONCLOSE
].
byA˘i⁄
 = 
YK_CLOSE
;

231 
YkD©a
[
YKACTIONCLOSE
].
wVÆ
 = 
YK_CLOSE
;

233 if–
tmpD©a
->
byAâribuãD©aByã
 == 3 )

235 
YkD©a
[
YKACTIONOPEN
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

236 
YkD©a
[
YKACTIONOPEN
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

237 
YkD©a
[
YKACTIONOPEN
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

238 
YkD©a
[
YKACTIONOPEN
].
wBusNoSrc
 = 14;

239 
YkD©a
[
YKACTIONOPEN
].
wAddrSrc
 = 1;

240 
YkD©a
[
YKACTIONOPEN
].
wP¡NoSrc
 = 0;

241 
YkD©a
[
YKACTIONOPEN
].
byA˘i⁄
 = 
YK_OPEN
;

242 
YkD©a
[
YKACTIONOPEN
].
wVÆ
 = 
YK_OPEN
;

243 
YkD©a
[
YKACTIONCLOSE
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

244 
YkD©a
[
YKACTIONCLOSE
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

245 
YkD©a
[
YKACTIONCLOSE
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

246 
YkD©a
[
YKACTIONCLOSE
].
wBusNoSrc
 = 14;

247 
YkD©a
[
YKACTIONCLOSE
].
wAddrSrc
 = 1;

248 
YkD©a
[
YKACTIONCLOSE
].
wP¡NoSrc
 = 0;

249 
YkD©a
[
YKACTIONCLOSE
].
byA˘i⁄
 = 
YK_CLOSE
;

250 
YkD©a
[
YKACTIONCLOSE
].
wVÆ
 = 
YK_CLOSE
;

252 if–
tmpD©a
->
byAâribuãD©aByã
 == 4 )

254 
YkD©a
[
YKEARTHACTIONOPEN
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

255 
YkD©a
[
YKEARTHACTIONOPEN
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

256 
YkD©a
[
YKEARTHACTIONOPEN
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

257 
YkD©a
[
YKEARTHACTIONOPEN
].
wBusNoSrc
 = 14;

258 
YkD©a
[
YKEARTHACTIONOPEN
].
wAddrSrc
 = 1;

259 
YkD©a
[
YKEARTHACTIONOPEN
].
wP¡NoSrc
 = 0;

260 
YkD©a
[
YKEARTHACTIONOPEN
].
byA˘i⁄
 = 
YK_OPEN
;

261 
YkD©a
[
YKEARTHACTIONOPEN
].
wVÆ
 = 
YK_CLOSE
;

263 if–
tmpD©a
->
byAâribuãD©aByã
 == 5 )

265 
YkD©a
[
YKEARTHACTIONCLOSE
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

266 
YkD©a
[
YKEARTHACTIONCLOSE
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

267 
YkD©a
[
YKEARTHACTIONCLOSE
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

268 
YkD©a
[
YKEARTHACTIONCLOSE
].
wBusNoSrc
 = 14;

269 
YkD©a
[
YKEARTHACTIONCLOSE
].
wAddrSrc
 = 1;

270 
YkD©a
[
YKEARTHACTIONCLOSE
].
wP¡NoSrc
 = 0;

271 
YkD©a
[
YKEARTHACTIONCLOSE
].
byA˘i⁄
 = 
YK_CLOSE
;

272 
YkD©a
[
YKEARTHACTIONCLOSE
].
wVÆ
 = 
YK_CLOSE
;

274 if–
tmpD©a
->
byAâribuãD©aByã
 == 6 )

276 
YkD©a
[
YKEARTHACTIONOPEN
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

277 
YkD©a
[
YKEARTHACTIONOPEN
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

278 
YkD©a
[
YKEARTHACTIONOPEN
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

279 
YkD©a
[
YKEARTHACTIONOPEN
].
wBusNoSrc
 = 14;

280 
YkD©a
[
YKEARTHACTIONOPEN
].
wAddrSrc
 = 1;

281 
YkD©a
[
YKEARTHACTIONOPEN
].
wP¡NoSrc
 = 0;

282 
YkD©a
[
YKEARTHACTIONOPEN
].
byA˘i⁄
 = 
YK_OPEN
;

283 
YkD©a
[
YKEARTHACTIONOPEN
].
wVÆ
 = 
YK_OPEN
;

284 
YkD©a
[
YKEARTHACTIONCLOSE
].
wBusNoDe°
 = 
tmpD©a
->
wBusNo
;

285 
YkD©a
[
YKEARTHACTIONCLOSE
].
wAddrDe°
 = 
tmpD©a
->
wAddr
;

286 
YkD©a
[
YKEARTHACTIONCLOSE
].
wP¡NoDe°
 = 
tmpD©a
->
wP¡No
;

287 
YkD©a
[
YKEARTHACTIONCLOSE
].
wBusNoSrc
 = 14;

288 
YkD©a
[
YKEARTHACTIONCLOSE
].
wAddrSrc
 = 1;

289 
YkD©a
[
YKEARTHACTIONCLOSE
].
wP¡NoSrc
 = 0;

290 
YkD©a
[
YKEARTHACTIONCLOSE
].
byA˘i⁄
 = 
YK_CLOSE
;

291 
YkD©a
[
YKEARTHACTIONCLOSE
].
wVÆ
 = 
YK_CLOSE
;

299  
TRUE
;

300 
	}
}

	@Element/ceelment.h

1 #i‚de‡
CEELMENT_H


2 
	#CEELMENT_H


	)

3 
	~<Ty≥def.h
>

4 
	~<QPaöãr
>

5 
	~<QObje˘
>

6 
	~"cglobÆ.h
"

7 
	~"Ty≥def.h
"

8 
	~"../Pages/˝age.h
"

9 
	~"../PrŸo/cmëhod.h
"

13 ˛as†
	cAœrm
{

14 
	mpublic
:

15 
BYTE
 
t›pﬁe
;

16 
BYTE
 
	mt›
;

17 
BYTE
 
	mt›ønge
;

18 
BYTE
 
	mbŸtomønge
;

19 
BYTE
 
	mbŸtom
;

20 
BYTE
 
	mbŸtompﬁe
;

22 
BYTE
 
	mbu¢o
;

23 
BYTE
 
	mdevaddr
;

24 
WORD
 
	mpoöt
;

25 
BYTE
 
	mcheckbox
;

30 ˛as†
	cCEÀmít
 : 
public
 
QObje˘


32 
Q_OBJECT


33 
public
:

34 
CEÀmít
();

35 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) = 0 ;

36 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) = 0 ;

37 
vútuÆ
 
BOOL
 
	$InôD©a
–Ë{  
FALSE
 ; }

38 
vútuÆ
 
BOOL
 
	$Com∑ªAâribuãD©a
–Ë{  
FALSE
 ; 
	}
}

39 
vútuÆ
 
BOOL
 
	$IsCh™geCﬁ‹
–Ë{  
FALSE
 ; 
	}
}

40 
vútuÆ
 
BOOL
 
	$SëCh™geNodeCﬁ‹
–
WORD
 
Ch™geNode
 , 
BYTE
 
PowîSèã
 ) {  
FALSE
 ; 
	}
}

41 
vútuÆ
 
BOOL
 
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) {  
FALSE
 ;
	}
}

42 
WORD
 
GëObje˘Ty≥
();

43 
SëObje˘Ty≥
(
WORD
 
EÀmítTy≥
);

44 
QRe˘
 
GëQRe˘
();

46 íum{ 
	gGENERATRIX
 = 0x1000,

47 
	gLINKER
,

48 
	gBREAKER
 ,

49 
	gPOWER
 ,

50 
	gTRANSFORMER
 ,

51 
	gCT_SIGN
 ,

52 
	gPT_SIGN
 ,

53 
	gANALOG_DATA_SIGN
 ,

54 
	gTEXT_SIGN
 ,

55 
	gCIRCLE_INDICATOR_SIGN
 ,

56 
	gRECT_INDICATOR_SIGN
 ,

57 
	gLIGHTNING_PROTECTOR
 ,

58 
	gCONTACTOR
 ,

59 
	gLOAD_BREAKER_2POS
 ,

60 
	gLOAD_BREAKER_3POS
 ,

61 
	gSWITCH_2POS
 ,

62 
	gSWITCH_3POS
 ,

63 
	gSWITCH_CONNECT_EARTH
 ,

65 
	gIMAGE_FOR_AI
,

66 
	gALARM_FOR_AI
,

68 
	gEND_PIC


71 íum{ 
	gPOWER_ON
 = 0x01 , 
	gPOWER_OFF
 } ;

72 íum{ 
	gHORZ_DRAW
 = 0x00 , 
	gVER_DRAW
 } ;

73 íum{ 
	gPEN_WIDTH
 = 10 } ;

74 íum{ 
	gBREAKER_OPEN
 , 
	gBREAKER_CLOSE
 , 
	gBREAKER_EARTH
 } ;

75 íum{ 
	gTWOPOS
 , 
	gTHREEPOS
 } ;

76 íum{ 
	gYKACTIONOPEN
 , 
	gYKACTIONCLOSE
 , 
	gYKEARTHACTIONOPEN
 , 
	gYKEARTHACTIONCLOSE
 } ;

77 
	g¥Ÿe˘ed
:

80 
QRe˘
 
m_rcDøw
 ;

81 
WORD
 
	gm_wObje˘Ty≥
 ;

82 
BOOL
 
	gm_byIsChoi˚
 ;

83 
BYTE
 
	gm_byTøn•¨ícy
;

85 
CEÀmít
 * 
	gm_pLe·Node
 ;

86 
CEÀmít
 * 
	gm_¥ightNode
 ;

87 
QPí
 
	gm_Pí
 ;

88 
QMíu
 * 
	gm_Míu
;

89 
QTabÀWidgë
 * 
	gm_YcTab
;

90 
QTabÀWidgë
 * 
	gm_YxTab
;

91 
QTabÀWidgë
 * 
	gm_YmTab
;

92 
QTabÀWidgë
 * 
	gm_YkTab
;

93 
	gpublic
:

95 
CEÀmít
 * 
Cª©eEÀmít
–
PELE_FST
 
≥À_f°
) ;

96 
WORD
 
	gm_wObje˘ID
 ;

97 
WORD
 
	gm_wLökObje˘Id
 ;

98 
WORD
 
	gm_wPageNo
 ;

99 
WORD
 
	gm_wDúe˘
 ;

100 
WORD
 
	gm_wObje˘NodeL
 ;

101 
WORD
 
	gm_wObje˘NodeR
 ;

102 
WORD
 
	gm_wObje˘NodeNext
 ;

103 
WORD
 
	gm_wObje˘NodeNextSèã
 ;

104 
	gm_ãxt
[50];

106 
WORD
 
	gw_t›
;

107 
WORD
 
	gw_bŸtom
;

108 
WORD
 
	gw_À·
;

109 
WORD
 
	gw_right
;

110 
	gm_pi˙ame
[50];

111 
	gm_picöåodu˚
[50];

113 
QPIC_ATTRIBUTE_DATA_ELEMENT
 
	gYx_EÀmítAâribuãAºay
 ;

114 
QPIC_ATTRIBUTE_DATA_ELEMENT
 
	gYc_EÀmítAâribuãAºay
 ;

115 
QPIC_ATTRIBUTE_DATA_ELEMENT
 
	gYm_EÀmítAâribuãAºay
 ;

116 
QPIC_ATTRIBUTE_DATA_ELEMENT
 
	gYk_EÀmítAâribuãAºay
 ;

118 
TabÀShow
(
QA˘i⁄
 *
a˘i⁄
);

120 
BYTE
 
	gYkA˘i⁄Ty≥
;

121 
YKST_MSG
 
	gYkD©a
[4];

124 
BOOL
 
InôYkD©a
();

127 
BYTE
 
	gªœnum
;

	@Element/cgeneratrix.cpp

1 
	~"cgíî©rix.h
"

3 
	gCGíî©rix
::
	$CGíî©rix
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

9 
	`Cª©eMíu
();

10 
	}
}

12 
BOOL
 
	gCGíî©rix
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

14 if–!
pPaöãr
 )

16 
	`Q_ASSERT
–
FALSE
 );

17  
FALSE
 ;

20 
pPaöãr
->
	`ßve
();

23 
QBrush
 
brush
 ;

24 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

25 if–
m_IsPowîOn
 =
POWER_ON
 )

26 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 ,0 , 0 , 255 ) );

28 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

30 
QPí
 
	`≥n
–
Qt
::
NoPí
 );

31 
pPaöãr
->
	`£tBackgroundMode
–
Qt
::
Tøn•¨ítMode
 );

32 
pPaöãr
->
	`£tBrush
–
brush
 );

33 
pPaöãr
->
	`£tPí
–
≥n
 );

36 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

37 
pPaöãr
->
	`ª°‹e
();

38  
TRUE
 ;

39 
	}
}

41 
BOOL
 
	gCGíî©rix
::
	$InôD©a
( )

43 
	`InôMíu
();

44  
TRUE
 ;

45 
	}
}

47 
BOOL
 
	gCGíî©rix
::
	$Cª©e
–
QRe˘
 
rc
 )

49 if–!
rc
.
	`isEm±y
() )

50 
m_rcDøw
 = 
rc
 ;

52 
m_rcDøw
 = 
	`QRe˘
( 1 ,1, 2 ,2 ) ;

54  
TRUE
 ;

55 
	}
}

57 
	gCGíî©rix
::
	$Cª©eMíu
()

59 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

60 
QA˘i⁄
 * 
a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

62 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

63 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

64 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

65 
m_YcTab
->
	`£tFixedSize
(400,300);

66 
m_YcTab
->
	`move
(200,150);

67 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

68 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

69 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

70 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

71 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

73 
QSåögLi°
 
hódî
;

74 
hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

75 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
hódî
);

78 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

80 
	}
}

82 
	gCGíî©rix
::
	$InôMíu
( )

84 
BusAddrP¡
[15] = "";

86 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

87 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

89 
Yc_AâribuãD©aNo
 = 0;

90  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

92 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

93  
tmpD©a
->
byD©aTy≥
 )

95 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

96 
tmpD©a
->
dbVÆ
 = 0;

97 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

98 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

99 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

100 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

101 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

107 
	}
}

109 
BOOL
 
	gCGíî©rix
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

111 
m_byIsChoi˚
 = 
TRUE
;

112 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

113 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

114 
m_byIsChoi˚
 = 
FALSE
;

115 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

116  
TRUE
;

117 
	}
}

119 
	gCGíî©rix
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

121 
	`TabÀShow
(
a˘i⁄
);

122 
	}
}

124 
BOOL
 
	gCGíî©rix
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

126 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

128 
m_IsPowîOn
 = 
POWER_ON
;

129  
TRUE
;

131  
FALSE
;

132 
	}
}

	@Element/cgeneratrix.h

1 #i‚de‡
CGENERATRIX_H


2 
	#CGENERATRIX_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCGíî©rix
 : 
public
 
CEÀmít


8 
Q_OBJECT


9 
public
:

10 
CGíî©rix
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 );

15 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

16 
Cª©eMíu
();

17 
InôMíu
();

18 
BYTE
 
	mm_IsPowîOn
 ;

20 
public
 
	m¶Ÿs
:

21 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/cimage_yc.cpp

1 
	~"cimage_yc.h
"

2 c⁄° 
QSåög
 
	gP©h
 = "/usr/share/ePut800/Pics/";

4 
	gCImage_Yc
::
	$CImage_Yc
()

6 
m_wObje˘Ty≥
 = 
IMAGE_FOR_AI
;

7 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

8 
blök_Êag
 = 0;

11 
Êag_ãm≥r_humi
 = 0;

14 
yx°©us
 = 0;

15 
yx°©us1
 = 0;

16 
box
 = 
√w
 
	`QMesßgeBox
(
	`AfxGëWidgë
());

18 
	}
}

22 
	gCImage_Yc
::
	$CImage_Yc
(
QSåög
 
m_pi˙ame
)

24 
m_wObje˘Ty≥
 = 
IMAGE_FOR_AI
;

25 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

26 
blök_Êag
 = 0;

27 
Êag_ãm≥r_humi
 = 0;

28 
yx°©us
 = 0;

29 
yx°©us1
 = 0;

30 
box
 = 
√w
 
	`QMesßgeBox
(
	`AfxGëWidgë
());

32 
pixm≠
.
	`lﬂd
(
P©h
 + 
	`QSåög
(
m_pi˙ame
));

33 
	}
}

37 
	gCImage_Yc
::~
	$CImage_Yc
()

39 
pixm≠
.
	`dëach
();

40 
	}
}

42 
BOOL
 
	gCImage_Yc
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

44 if–!
pPaöãr
 )

46 
	`Q_ASSERT
–
FALSE
 );

47  
FALSE
 ;

50 
pPaöãr
->
	`ßve
();

52 if(
blök_Êag
 == 2){

54 
pPaöãr
->
	`£tBrush
(
	`QBrush
(
Qt
::
ªd
));

55 
pPaöãr
->
	`£tPí
(
Qt
::
ªd
);

56 }if(
blök_Êag
 == 1){

57 
pPaöãr
->
	`£tBrush
(
	`QBrush
(
Qt
::
yñlow
));

58 
pPaöãr
->
	`£tPí
(
Qt
::
yñlow
);

63 
pPaöãr
->
	`£tBrush
(
	`QBrush
(
Qt
::
gªí
));

64 
pPaöãr
->
	`£tPí
(
Qt
::
gªí
);

66 
pPaöãr
->
	`£tPí
(
Qt
::
NoPí
);

70 
pPaöãr
->
	`døwRe˘
(
m_rcDøw
);

73 
QPixm≠
 
pixm≠
;

75 
pixm≠
.
	`lﬂd
(
P©h
 + 
	`QSåög
(
m_pi˙ame
));

77 
pPaöãr
->
	`døwPixm≠
(
m_rcDøw
, 
pixm≠
);

83 
QImage
 
image
;

85 
image
.
	`lﬂd
(
P©h
 + 
	`QSåög
(
m_pi˙ame
));

86 
pPaöãr
->
	`døwImage
(
m_rcDøw
, 
image
);

87 
image
.
	`dëach
();

89 
pPaöãr
->
	`ª°‹e
();

90  
TRUE
 ;

91 
	}
}

93 
BOOL
 
	gCImage_Yc
::
	$InôD©a
( )

95 
	`InôYkD©a
();

96  
FALSE
 ;

97 
	}
}

99 
BOOL
 
	gCImage_Yc
::
	$Cª©e
–
QRe˘
 
rc
 )

101 
m_rcDøw
 = 
rc
 ;

102  
TRUE
 ;

103 
	}
}

105 
BOOL
 
	gCImage_Yc
::
	$Com∑ªAâribuãD©a
( )

107 
AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

110 if–
AâribuãD©aSize
 != 1 )

111  
FALSE
;

114 
WORD
 
DevSèã
 = 
COMM_ABNORMAL
;

115 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(0);

119 
	`AfxGëDevCommSèã
(
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
, 
DevSèã
);

120 if(
DevSèã
 =
COMM_ABNORMAL
){

121 
blök_Êag
 = 0;

122 
	`¥ötf
("---- %†%d ----\n", 
__func__
, 
__LINE__
);

123 
	`qDebug
() << "----ËÆæÂ§áÁä∂ÊÄÅerror!----";

124  
FALSE
;

126 if–
tmpD©a
->
byD©aTy≥
 =
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
 )

128 
fVÆ
 = 0;

129 
	`AfxGëYc
(
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
,ÅmpD©a->
wP¡No
, 
fVÆ
);

131 
tmpD©a
->
dbVÆ
 = 
fVÆ
;

132 
vÆued
 = 
tmpD©a
->
RñaYk
.
vÆuebŸtom
 + ()—mpD©a->RñaYk.
vÆuë›
 -ÅmpD©a->RñaYk.vÆuebŸtomË/ (20 - 4Ë* 
	`Ábs
(
fVÆ
 - 4);

134 
	`¥ötf
("##### %†%d vÆued = %f, vÆuë› = %d, vÆuebŸtom = %d, fVÆ = %‡t›pﬁê%d, bŸtompﬁê%d,Å› = %d, bŸtom = %d\n", 
__func__
, 
__LINE__
, 
vÆued
, 
tmpD©a
->
RñaYk
.
vÆuë›
,ÅmpD©a->RñaYk.
vÆuebŸtom
, 
fVÆ
,ÅmpD©a->RñaYk.
t›pﬁe
,ÅmpD©a->RñaYk.
bŸtompﬁe
,ÅmpD©a->RñaYk.
t›
,ÅmpD©a->RñaYk.
bŸtom
);

135 if((
vÆued
 >
tmpD©a
->
RñaYk
.
t›pﬁe
Ë|| (vÆued <tmpD©a->RñaYk.
bŸtompﬁe
))

136 
blök_Êag
 = 2;

137 if((
vÆued
 >
tmpD©a
->
RñaYk
.
t›
Ë|| (vÆued <tmpD©a->RñaYk.
bŸtom
))

138 
blök_Êag
 = 1;

140 
blök_Êag
 = 0;

144 if(
tmpD©a
->
RñaYk
.
ª£rv©i⁄
 == 2){

145 
	`¥ötf
("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");

146 
Êag_ãm≥r_humi
 = 1;

147 
blök_Êag_humi
 = 
blök_Êag
;

148 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a1
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(1);

151 
	`¥ötf
("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");

152 
	`¥ötf
("%†%d wBusNÿ%d, wAdd∏%d, DevSèã = %d\n", 
__func__
, 
__LINE__
, 
tmpD©a1
->
wBusNo
,ÅmpD©a1->
wAddr
, 
DevSèã
);

153 
	`AfxGëDevCommSèã
(
tmpD©a1
->
wBusNo
,ÅmpD©a1->
wAddr
, 
DevSèã
);

154 if(
DevSèã
 =
COMM_ABNORMAL
){

155 
blök_Êag
 = 0;

156 
	`¥ötf
("---- %†%d ----\n", 
__func__
, 
__LINE__
);

157 
	`qDebug
() << "----ËÆæÂ§áÁä∂ÊÄÅerror!----";

158  
FALSE
;

160 if–
tmpD©a1
->
byD©aTy≥
 =
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
 )

162 
fVÆ
 = 0;

163 
	`AfxGëYc
(
tmpD©a1
->
wBusNo
,ÅmpD©a1->
wAddr
,ÅmpD©a1->
wP¡No
, 
fVÆ
);

165 
tmpD©a1
->
dbVÆ
 = 
fVÆ
;

166 
vÆued1
 = 
tmpD©a1
->
RñaYk1
.
vÆuebŸtom
 + ()—mpD©a1->RñaYk1.
vÆuë›
 -ÅmpD©a1->RñaYk1.vÆuebŸtomË/ (20 - 4Ë* 
	`Ábs
(
fVÆ
 - 4);

168 
	`¥ötf
("##### %†%d vÆued1 = %f, vÆuë› = %d, vÆuebŸtom = %d, fVÆ = %‡t›pﬁê%d, bŸtompﬁê%d,Å› = %d, bŸtom = %d\n", 
__func__
, 
__LINE__
, 
vÆued1
, 
tmpD©a1
->
RñaYk1
.
vÆuë›
,ÅmpD©a1->RñaYk1.
vÆuebŸtom
, 
fVÆ
,ÅmpD©a1->RñaYk1.
t›pﬁe
,ÅmpD©a1->RñaYk1.
bŸtompﬁe
,ÅmpD©a1->RñaYk1.
t›
,ÅmpD©a1->RñaYk1.
bŸtom
);

169 if((
vÆued1
 >
tmpD©a1
->
RñaYk1
.
t›pﬁe
Ë|| (vÆued1 <tmpD©a1->RñaYk1.
bŸtompﬁe
))

170 
blök_Êag
 = 2;

171 if((
vÆued1
 >
tmpD©a1
->
RñaYk1
.
t›
Ë|| (vÆued1 <tmpD©a1->RñaYk1.
bŸtom
))

172 
blök_Êag
 = 1;

174 
blök_Êag
 = 0;

176 
blök_Êag
 = (
blök_Êag_humi
 > blink_flag) ? blink_flag_humi : blink_flag;

179 
Êag_ãm≥r_humi
 = 0;

185 if(
Yx_EÀmítAâribuãAºay
.
	`size
() < 2){

187 
blök_Êag
 = 0;

188  
FALSE
;

191 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(0);

192 if(
tmpD©a
->
byD©aTy≥
 =
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
){

193 if(
tmpD©a
->
byAâribuãD©aByã
 == 1){

194 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
,ÅmpD©a->
wP¡No
, 
yx°©us
);

195 
	`¥ötf
("\n######## %d %d %d yx1:%d ########\n", 
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
,ÅmpD©a->
wP¡No
, 
yx°©us
);

198 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(1);

199 if(
tmpD©a
->
byD©aTy≥
 =
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
){

200 if(
tmpD©a
->
byAâribuãD©aByã
 == 2){

201 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
,ÅmpD©a->
wP¡No
, 
yx°©us1
);

202 
	`¥ötf
("######## %d %d %d yx2:%d ########\n", 
tmpD©a
->
wBusNo
,ÅmpD©a->
wAddr
,ÅmpD©a->
wP¡No
, 
yx°©us1
);

203 
tmpD©a
->
dbVÆ
 = 
yx°©us1
;

213 
	`¥ötf
("******** %d %d ********\n\n", 
yx°©us
, 
yx°©us1
);

214 if((
yx°©us
 =0Ë&& (
yx°©us1
 =1Ë&& (
blök_Êag
 == 2)){

217 
	`SëA˘i⁄
(
BREAKER_CLOSE
);

218 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkPª∑ªBä_˛icked
();

219 
	`¶ìp
(2);

220 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkExecBä_˛icked
();

228 if((
yx°©us
 =1Ë&& (
yx°©us1
 =0Ë&& (
blök_Êag
 != 2)){

229 
	`SëA˘i⁄
(
BREAKER_OPEN
);

230 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkPª∑ªBä_˛icked
();

231 
	`¶ìp
(2);

232 
	`AfxGëWidgë
()->
YkDlg
->
	`¶Ÿs_YkExecBä_˛icked
();

234  
FALSE
;

235 
	}
}

237 
BOOL
 
	gCImage_Yc
::
	$Pro˚ssMou£Down
(
QMou£Evít
 *
pEvít
)

239 
	`qDebug
() << "ProcessMouseDown";

240 
	`mem£t
(
°r
, 0, (str));

242 if(
Êag_ãm≥r_humi
 == 1)

243 
	`•rötf
(
°r
, "Ê∏©Â∫¶:%‡ÊπøÂ∫¶:%f", 
vÆued
, 
vÆued1
);

245 
	`•rötf
(
°r
, "%f", 
vÆued
);

246 
box
->
	`£tText
(
°r
);

247 
box
->
	`move
(
pEvít
->
	`globÆPos
());

249 
box
->
	`show
();

252  
TRUE
;

253 
	}
}

255 
	gCImage_Yc
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
)

257 
BYTE
 
byYkSëSèã
 = 
FALSE
;

259  
A˘i⁄
 ){

260 
BREAKER_OPEN
:

261 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

262 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_OPEN
 )

263 
byYkSëSèã
 = 
TRUE
;

265 
BREAKER_CLOSE
:

266 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

267 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

268 
byYkSëSèã
 = 
TRUE
;

274 if–!
byYkSëSèã
 ){

276 
	`qDebug
() << "Ë£ÖÁΩÆÁä∂ÊÄÅ‰∏çÈÄö!";

280 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
TWOPOS
,
YkD©a
[
YkA˘i⁄Ty≥
], 
NULL
);

281 
	}
}

	@Element/cimage_yc.h

1 #i‚de‡
CIMAGE_YC_H


2 
	#CIMAGE_YC_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCImage_Yc
 : 
public
 
CEÀmít


8 
public
:

9 
CImage_Yc
();

10 ~
CImage_Yc
();

11 
CImage_Yc
(
QSåög
);

13 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

14 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

15 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

16 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
();

17 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
(
QMou£Evít
 *);

18 
vútuÆ
 
SëA˘i⁄
(
BYTE
);

20 
	m¥iv©e
:

21 
BYTE
 
blök_Êag
;

22 
BYTE
 
	myx°©us
;

23 
BYTE
 
	myx°©us1
;

24 
	mvÆued
;

27 
	mvÆued1
;

28 
BYTE
 
	mÊag_ãm≥r_humi
;

29 
BYTE
 
	mblök_Êag_humi
;

30 
QPixm≠
 
	mpixm≠
;

33 
QMesßgeBox
 *
	mbox
;

34 
	m°r
[64];

	@Element/clightning_protector.cpp

1 
	~"˛ighäög_¥Ÿe˘‹.h
"

3 
	gCLighäög_¥Ÿe˘‹
::
	$CLighäög_¥Ÿe˘‹
()

5 
m_wObje˘Ty≥
 = 
LINKER
;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
	}
}

11 
BOOL
 
	gCLighäög_¥Ÿe˘‹
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

13 if–!
pPaöãr
 )

15 
	`Q_ASSERT
–
FALSE
 );

16  
FALSE
 ;

19 
pPaöãr
->
	`ßve
();

21 if–
m_IsPowîOn
 =
POWER_ON
 )

23 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

27 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

30 
QPaöãrP©h
 
∑th
;

32 if–
m_IsDúe˘i⁄
 =
HORZ_DRAW
 )

34 
∑th
.
	`addRe˘
–
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4,m_rcDøw.
	`y
(),m_rcDøw.width()/2,m_rcDøw.
	`height
());

35 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

36 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

37 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/4);

38 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

39 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/4);

40 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

41 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

42 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/8);

43 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*7/8);

44 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*15/16,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/4);

45 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*15/16,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/4);

46 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

47 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8);

51 
∑th
.
	`addRe˘
–
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/4,m_rcDøw.
	`width
(),m_rcDraw.height()/2 );

52 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
());

53 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

54 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

55 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

56 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

57 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/4);

58 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*7/8);

59 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*7/8);

60 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*7/8);

61 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*15/16);

62 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*15/16);

63 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
());

64 
∑th
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
());

67 
pPaöãr
->
	`døwP©h
(
∑th
);

70 
pPaöãr
->
	`ª°‹e
();

72  
TRUE
 ;

73 
	}
}

75 
BOOL
 
	gCLighäög_¥Ÿe˘‹
::
	$InôD©a
( )

77  
FALSE
 ;

78 
	}
}

80 
BOOL
 
	gCLighäög_¥Ÿe˘‹
::
	$Cª©e
–
QRe˘
 
rc
 )

82 
m_rcDøw
 = 
rc
 ;

83  
TRUE
 ;

84 
	}
}

86 
BOOL
 
	gCLighäög_¥Ÿe˘‹
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

88 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

90 
m_IsPowîOn
 = 
PowîSèã
;

91  
TRUE
;

93  
FALSE
;

94 
	}
}

	@Element/clightning_protector.h

1 #i‚de‡
CLIGHTNING_PROTECTOR_H


2 
	#CLIGHTNING_PROTECTOR_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCLighäög_¥Ÿe˘‹
 : 
public
 
CEÀmít


8 
public
:

9 
CLighäög_¥Ÿe˘‹
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/clinker.cpp

1 
	~"˛ökî.h
"

3 
	gCLökî
::
	$CLökî
()

5 
m_wObje˘Ty≥
 = 
LINKER
;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
	}
}

11 
BOOL
 
	gCLökî
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

13 if–!
pPaöãr
 )

15 
	`Q_ASSERT
–
FALSE
 );

16  
FALSE
 ;

19 
pPaöãr
->
	`ßve
();

21 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

22 
≥n
.
	`£tStyÀ
(
Qt
::
NoPí
 );

23 
pPaöãr
->
	`£tPí
(
≥n
);

25 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

26 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

27 if–
m_IsPowîOn
 =
POWER_ON
 )

28 
brush
.
	`£tCﬁ‹
–
Qt
::
ªd
 );

30 
brush
.
	`£tCﬁ‹
–
Qt
::
gªí
 );

32 
pPaöãr
->
	`£tBrush
(
brush
);

45 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

46 
pPaöãr
->
	`ª°‹e
();

47  
TRUE
 ;

48 
	}
}

50 
BOOL
 
	gCLökî
::
	$InôD©a
( )

52  
FALSE
 ;

53 
	}
}

55 
BOOL
 
	gCLökî
::
	$Cª©e
–
QRe˘
 
rc
 )

57 
m_rcDøw
 = 
rc
 ;

58  
TRUE
 ;

59 
	}
}

61 
BOOL
 
	gCLökî
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

63 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

65 
m_IsPowîOn
 = 
PowîSèã
;

66  
TRUE
;

68  
FALSE
;

69 
	}
}

	@Element/clinker.h

1 #i‚de‡
CLINKER_H


2 
	#CLINKER_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCLökî
 : 
public
 
CEÀmít


8 
public
:

9 
CLökî
();

10 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

11 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

12 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

13 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

14 
BYTE
 
	mm_IsPowîOn
 ;

15 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/cload_breaker_2pos.cpp

1 
	~"˛ﬂd_bªakî_2pos.h
"

3 
	gCLﬂd_bªakî_2pos
::
	$CLﬂd_bªakî_2pos
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsDúe˘i⁄
 = 
VER_DRAW
 ;

8 
m_byLe·T›Powî
 = 
POWER_OFF
 ;

9 
m_byRightBŸtomPowî
 = 
POWER_OFF
 ;

10 
m_byO≥n
 = 
BREAKER_OPEN
 ;

12 
	`Cª©eMíu
();

13 
	}
}

15 
BOOL
 
	gCLﬂd_bªakî_2pos
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

17 if–!
pPaöãr
 )

19 
	`Q_ASSERT
–
FALSE
 );

20  
FALSE
 ;

23 
pPaöãr
->
	`ßve
();

25 if–
m_IsDúe˘i⁄
 =
VER_DRAW
 )

28 
	`DøwVîtiˇl
–
pPaöãr
 ) ;

33 
	`DøwH‹iz⁄èl
(
pPaöãr
);

35 
	`DøwIsChoi˚
(
pPaöãr
);

38 
pPaöãr
->
	`ª°‹e
();

39  
TRUE
 ;

40 
	}
}

42 
BOOL
 
	gCLﬂd_bªakî_2pos
::
	$InôD©a
( )

44 
m_IsDúe˘i⁄
 = 
m_wDúe˘
;

45 
	`InôMíu
();

46 
	`InôYkD©a
();

47  
TRUE
 ;

48 
	}
}

50 
BOOL
 
	gCLﬂd_bªakî_2pos
::
	$Cª©e
–
QRe˘
 
rc
 )

52 
m_rcDøw
 = 
rc
 ;

53  
TRUE
 ;

54 
	}
}

56 
	gCLﬂd_bªakî_2pos
::
	$Cª©eMíu
()

58 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

59 
QA˘i⁄
 * 
YkSë_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

60 
QA˘i⁄
 * 
Yx_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ"));

61 
m_YxTab
 = 
√w
 
	`QTabÀWidgë
();

62 
m_YxTab
->
	`£tWödowFœgs
((m_YxTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

63 
m_YxTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

64 
m_YxTab
->
	`£tFixedSize
(400,300);

65 
m_YxTab
->
	`move
(200,150);

66 
m_YxTab
->
	`£tCﬁumnCou¡
(3);

67 
m_YxTab
->
	`£tRowCou¡
(20);

68 
m_YxTab
->
	`£tCﬁumnWidth
(0,200);

69 
m_YxTab
->
	`£tCﬁumnWidth
(1,100);

70 
m_YxTab
->
	`£tCﬁumnWidth
(2,100);

71 
QSåögLi°
 
Yx_hódî
;

72 
Yx_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

73 
m_YxTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yx_hódî
);

75 
QA˘i⁄
 * 
Yc_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

76 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

77 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

78 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

79 
m_YcTab
->
	`£tFixedSize
(400,300);

80 
m_YcTab
->
	`move
(200,150);

81 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

82 
m_YcTab
->
	`£tRowCou¡
(20);

83 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

84 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

85 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

86 
QSåögLi°
 
Yc_hódî
;

87 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

88 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

90 
QA˘i⁄
 * 
Yk_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ"));

91 
m_YkTab
 = 
√w
 
	`QTabÀWidgë
();

92 
m_YkTab
->
	`£tWödowFœgs
((m_YkTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

93 
m_YkTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

94 
m_YkTab
->
	`£tFixedSize
(400,300);

95 
m_YkTab
->
	`move
(200,150);

96 
m_YkTab
->
	`£tCﬁumnCou¡
(2);

97 
m_YkTab
->
	`£tRowCou¡
(20);

98 
m_YkTab
->
	`£tCﬁumnWidth
(0,250);

99 
m_YkTab
->
	`£tCﬁumnWidth
(1,100);

100 
QSåögLi°
 
Yk_hódî
;

101 
Yk_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑");

102 
m_YkTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yk_hódî
);

104 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

105 
	}
}

107 
	gCLﬂd_bªakî_2pos
::
	$InôMíu
( )

109 
BusAddrP¡
[15] = "";

111 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

112 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

114 
Yx_AâribuãD©aNo
 = 0;

115  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

117 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

118  
tmpD©a
->
byD©aTy≥
 )

120 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

121 
tmpD©a
->
dbVÆ
 = 0;

122 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

123 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

124 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

125 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

126 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

127 
	`•rötf
(
BusAddrP¡
,"%u",(
BYTE
)
tmpD©a
->
dbVÆ
);

128 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

135 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

136 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

138 
Yc_AâribuãD©aNo
 = 0;

139  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

141 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

142  
tmpD©a
->
byD©aTy≥
 )

144 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

145 
tmpD©a
->
dbVÆ
 = 0;

146 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

147 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

148 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

149 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

150 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

157 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

158 
Yk_AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

160 
Yk_AâribuãD©aNo
 = 0;

161  
Yk_AâribuãD©aNo
 = 0; Yk_AâribuãD©aNÿ< 
Yk_AâribuãD©aSize
; Yk_AttributeDataNo++ )

163 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
Yk_AâribuãD©aNo
);

164  
tmpD©a
->
byD©aTy≥
 )

166 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

167 
tmpD©a
->
dbVÆ
 = 0;

168 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

169 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

170 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

171 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

177 
	}
}

180 
	gCLﬂd_bªakî_2pos
::
	$DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 )

182 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

184 
	`Q_ASSERT
–
FALSE
 ) ;

188 if–
m_rcDøw
.
	`isEm±y
() )

191 
	`DøwVîtiˇlT›
–
pPaöãr
 ) ;

192 
	`DøwVîtiˇlBŸtom
–
pPaöãr
 ) ;

196 
	}
}

198 
	gCLﬂd_bªakî_2pos
::
	$DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 )

200 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

202 
	`Q_ASSERT
–
FALSE
 ) ;

206 if–
m_rcDøw
.
	`isEm±y
() )

209 
pPaöãr
->
	`ßve
();

211 
QPí
 
≥n
 ;

212 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

213 if–
m_byLe·T›Powî
 =
POWER_ON
 )

214 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

216 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

218 
pPaöãr
->
	`£tPí
–
≥n
 );

220 
QPaöãrP©h
 
BegöP©h
;

221 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
());

222 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

223 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

224 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

225 
BegöP©h
.
	`addEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/16,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3,

226 
m_rcDøw
.
	`width
()/8,m_rcDøw.
	`height
()/9);

227 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

228 
pPaöãr
->
	`ª°‹e
();

229 
	}
}

231 
	gCLﬂd_bªakî_2pos
::
	$DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

233 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

235 
	`Q_ASSERT
–
FALSE
 ) ;

239 if–
m_rcDøw
.
	`isEm±y
() )

242 
pPaöãr
->
	`ßve
();

244 
QPí
 
≥n
 ;

245 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

246 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

247 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

249 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

251 
pPaöãr
->
	`£tPí
–
≥n
 );

253 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

254 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

255 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

256 
WORD
 
wXMoveTo
 = 0 ;

257 
WORD
 
wYMoveTo
 = 0 ;

258 
WORD
 
wXLöeTo
 = 0 ;

259 
WORD
 
wYLöeTo
 = 0 ;

261 if–
BREAKER_OPEN
 =
m_byO≥n
 )

263 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 1 / 8 ;

264 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

265 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 4 / 8 ;

266 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

268 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

270 
wXMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

271 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

272 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
() ;

273 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

276 
	`Q_ASSERT
–
FALSE
 ) ;

278 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

280 
wXMoveTo
 = 
wXLöeTo
 ;

281 
wYMoveTo
 = 
wYLöeTo
 ;

282 
wXLöeTo
 = wXLineTo ;

283 
wYLöeTo
 = 
m_rcDøw
.
	`bŸtom
() ;

284 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

286 
pPaöãr
->
	`ª°‹e
();

287 
	}
}

289 
	gCLﬂd_bªakî_2pos
::
	$DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 )

291 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

293 
	`Q_ASSERT
–
FALSE
 ) ;

297 if–
m_rcDøw
.
	`isEm±y
() )

301 
	`DøwH‹iz⁄èlT›
–
pPaöãr
 ) ;

302 
	`DøwH‹iz⁄èlBŸtom
–
pPaöãr
 ) ;

305 
	}
}

307 
	gCLﬂd_bªakî_2pos
::
	$DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 )

309 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

311 
	`Q_ASSERT
–
FALSE
 ) ;

315 if–
m_rcDøw
.
	`isEm±y
() )

318 
pPaöãr
->
	`ßve
();

320 
QPí
 
≥n
 ;

321 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

322 if–
m_byLe·T›Powî
 =
POWER_ON
 )

323 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

325 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

327 
pPaöãr
->
	`£tPí
–
≥n
 );

329 
QPaöãrP©h
 
BegöP©h
;

330 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

331 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

332 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8);

333 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

334 
BegöP©h
.
	`addEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*7/16,

335 
m_rcDøw
.
	`width
()/9,m_rcDøw.
	`height
()/8);

336 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

337 
pPaöãr
->
	`ª°‹e
();

338 
	}
}

340 
	gCLﬂd_bªakî_2pos
::
	$DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

342 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

344 
	`Q_ASSERT
–
FALSE
 ) ;

348 if–
m_rcDøw
.
	`isEm±y
() )

351 
pPaöãr
->
	`ßve
();

353 
QPí
 
≥n
 ;

354 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

355 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

356 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

358 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

360 
pPaöãr
->
	`£tPí
–
≥n
 );

362 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

363 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

364 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

365 
WORD
 
wXMoveTo
 = 0 ;

366 
WORD
 
wYMoveTo
 = 0 ;

367 
WORD
 
wXLöeTo
 = 0 ;

368 
WORD
 
wYLöeTo
 = 0 ;

370 if–
BREAKER_OPEN
 =
m_byO≥n
 )

372 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

373 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 7 / 8 ;

374 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3;

375 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 4 / 8;

377 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

379 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

380 
wYMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

381 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

382 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
() ;

385 
	`Q_ASSERT
–
FALSE
 ) ;

387 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

389 
wXMoveTo
 = 
wXLöeTo
 ;

390 
wYMoveTo
 = 
wYLöeTo
 ;

391 
wXLöeTo
 = 
m_rcDøw
.
	`right
() ;

392 
wYLöeTo
 = wYLineTo ;

393 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

395 
pPaöãr
->
	`ª°‹e
();

396 
	}
}

398 
	gCLﬂd_bªakî_2pos
::
	$DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 )

400 if–
m_byIsChoi˚
 )

402 
pPaöãr
->
	`ßve
();

403 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

404 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

405 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

406 
pPaöãr
->
	`£tPí
–
≥n
 );

408 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

409 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

410 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

411 
pPaöãr
->
	`£tBrush
(
brush
);

412 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

413 
pPaöãr
->
	`ª°‹e
();

415 
	}
}

417 
BOOL
 
	gCLﬂd_bªakî_2pos
::
	$Com∑ªAâribuãD©a
( )

419 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

420 if–!
AâribuãD©aSize
 )

421  
FALSE
;

423 
AâribuãD©aNo
 = 0;

424  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

426 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

427  
tmpD©a
->
byD©aTy≥
 )

429 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

430 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

432 
BYTE
 
byVÆ
 = 0;

433 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

434 if–
tmpD©a
->
dbVÆ
 !
byVÆ
 )

436 if–
byVÆ
 == 1 )

437 
m_byO≥n
 = 
BREAKER_CLOSE
;

439 
m_byO≥n
 = 
BREAKER_OPEN
;

440 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

441  
TRUE
;

450  
FALSE
;

451 
	}
}

453 
BOOL
 
	gCLﬂd_bªakî_2pos
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

455 
m_byIsChoi˚
 = 
TRUE
;

456 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

457 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

458 
m_byIsChoi˚
 = 
FALSE
;

459 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

460  
TRUE
;

461 
	}
}

463 
	gCLﬂd_bªakî_2pos
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

465 if–
a˘i⁄
 =
NULL
 )

467 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊâßË°å") )

469 
BYTE
 
bySëBªakSètus
 = -1;

471 
QSåög
 
°r
;

472  
m_byO≥n
 )

474 
BREAKER_CLOSE
:

475 
bySëBªakSètus
 = 
BREAKER_OPEN
;

476 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂàÜÈó∏Êìç‰Ωú!!!");

478 
BREAKER_OPEN
:

479 
bySëBªakSètus
 = 
BREAKER_CLOSE
;

480 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂêàÈó∏Êìç‰Ωú!!!");

485 
QMesßgeBox
 
	`box
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

486 
box
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
);

487 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("Á°ÆËÆ§")));

488 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

489  
box
.
	`exec
() )

491 
QMesßgeBox
::
Yes
:

492 
	`SëA˘i⁄
(
bySëBªakSètus
);

494 
QMesßgeBox
::
No
:

502 
	`TabÀShow
(
a˘i⁄
);

503 
	}
}

506 
	gCLﬂd_bªakî_2pos
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
)

511 
BYTE
 
byYkSëSèã
 = 
FALSE
;

517 if–
	`AfxGëLogöSèã
(Ë=
CPage
::
LOGOUT
 )

519 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Â∞öÊú™ÁôªÂΩïÔºåËØ∑ÁôªÂΩïÂêéÊìç‰Ωú!!!"),QMesßgeBox::
Yes
 );

523  
A˘i⁄
 )

525 
BREAKER_OPEN
:

526 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

527 if–
YkD©a
[
YkA˘i⁄Ty≥
].
wVÆ
 =
YK_OPEN
 )

528 
byYkSëSèã
 = 
TRUE
;

530 
BREAKER_CLOSE
:

531 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

532 if–
YkD©a
[
YKACTIONCLOSE
].
wVÆ
 =
YK_CLOSE
 )

533 
byYkSëSèã
 = 
TRUE
;

539 if–!
byYkSëSèã
 )

541 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ê≤°ÊúâÈÖçÁΩÆÂØπÂ∫îÊìç‰ΩúÈÅ•ÊéßÁÇπ"),QMesßgeBox::
Yes
 );

546 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
TWOPOS
,
YkD©a
[
YkA˘i⁄Ty≥
]);

548 
	}
}

550 
BOOL
 
	gCLﬂd_bªakî_2pos
::
	$IsCh™geCﬁ‹
( )

552 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

554 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

556 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

557 
m_wObje˘NodeNextSèã
 = 
m_byRightBŸtomPowî
;

559 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

561 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

562 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

565 if–
m_byO≥n
 =
BREAKER_OPEN
 )

567 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

568 
m_byLe·T›Powî
 = 
POWER_OFF
;

569 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

570 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

571 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

573  
TRUE
;

574 
	}
}

576 
BOOL
 
	gCLﬂd_bªakî_2pos
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

578 
m_byLe·T›Powî
 = 
POWER_OFF
;

579 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

580 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

582 
m_byLe·T›Powî
 = 
PowîSèã
;

583 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

585 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

586 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

588 if–
m_byO≥n
 =
BREAKER_OPEN
 )

589 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

591 
m_wObje˘NodeNext
 = 
m_wObje˘NodeR
;

593 if–
Ch™geNode
 =
m_wObje˘NodeR
 )

595 
m_byRightBŸtomPowî
 = 
PowîSèã
;

596 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

598 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

599 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

601 if–
m_byO≥n
 =
BREAKER_OPEN
 )

602 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

604 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

607  
FALSE
;

608  
TRUE
;

609 
	}
}

	@Element/cload_breaker_2pos.h

1 #i‚de‡
CLOAD_BREAKER_2POS_H


2 
	#CLOAD_BREAKER_2POS_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCLﬂd_bªakî_2pos
 : 
public
 
CEÀmít


8 
Q_OBJECT


9 
public
:

10 
CLﬂd_bªakî_2pos
();

12 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

13 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

14 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

15 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

16 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) ;

17 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

18 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

19 
Cª©eMíu
();

20 
InôMíu
( );

21 
DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 );

22 
DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

23 
DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

24 
DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 );

25 
DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

26 
DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

27 
DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 );

28 
SëA˘i⁄
–
BYTE
 
A˘i⁄
 );

30 
BYTE
 
	mm_IsDúe˘i⁄
 ;

31 
BYTE
 
	mm_byLe·T›Powî
 ;

32 
BYTE
 
	mm_byRightBŸtomPowî
 ;

33 
BYTE
 
	mm_byO≥n
 ;

35 
public
 
	m¶Ÿs
:

36 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/cload_breaker_3pos.cpp

1 
	~"˛ﬂd_bªakî_3pos.h
"

3 
	gCLﬂd_bªakî_3pos
::
	$CLﬂd_bªakî_3pos
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsDúe˘i⁄
 = 
VER_DRAW
 ;

8 
m_byLe·T›Powî
 = 
POWER_OFF
 ;

9 
m_byRightBŸtomPowî
 = 
POWER_OFF
 ;

10 
m_byO≥n
 = 
BREAKER_OPEN
 ;

12 
	`Cª©eMíu
();

13 
	}
}

15 
BOOL
 
	gCLﬂd_bªakî_3pos
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

17 if–!
pPaöãr
 )

19 
	`Q_ASSERT
–
FALSE
 );

20  
FALSE
 ;

23 
pPaöãr
->
	`ßve
();

25 if–
m_IsDúe˘i⁄
 =
VER_DRAW
 )

28 
	`DøwVîtiˇl
–
pPaöãr
 ) ;

33 
	`DøwH‹iz⁄èl
(
pPaöãr
);

35 
	`DøwIsChoi˚
(
pPaöãr
);

38 
pPaöãr
->
	`ª°‹e
();

39  
TRUE
 ;

40 
	}
}

42 
BOOL
 
	gCLﬂd_bªakî_3pos
::
	$InôD©a
( )

44 
m_IsDúe˘i⁄
 = 
m_wDúe˘
;

45 
	`InôMíu
();

46 
	`InôYkD©a
();

47  
TRUE
 ;

48 
	}
}

50 
BOOL
 
	gCLﬂd_bªakî_3pos
::
	$Cª©e
–
QRe˘
 
rc
 )

52 
m_rcDøw
 = 
rc
 ;

53  
TRUE
 ;

54 
	}
}

56 
	gCLﬂd_bªakî_3pos
::
	$Cª©eMíu
()

58 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

59 
QA˘i⁄
 * 
YkSë_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

60 
QA˘i⁄
 * 
Yx_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ"));

61 
m_YxTab
 = 
√w
 
	`QTabÀWidgë
();

62 
m_YxTab
->
	`£tWödowFœgs
((m_YxTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

63 
m_YxTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

64 
m_YxTab
->
	`£tFixedSize
(400,300);

65 
m_YxTab
->
	`move
(200,150);

66 
m_YxTab
->
	`£tCﬁumnCou¡
(3);

67 
m_YxTab
->
	`£tRowCou¡
(20);

68 
m_YxTab
->
	`£tCﬁumnWidth
(0,200);

69 
m_YxTab
->
	`£tCﬁumnWidth
(1,100);

70 
m_YxTab
->
	`£tCﬁumnWidth
(2,100);

71 
QSåögLi°
 
Yx_hódî
;

72 
Yx_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

73 
m_YxTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yx_hódî
);

75 
QA˘i⁄
 * 
Yc_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

76 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

77 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

78 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

79 
m_YcTab
->
	`£tFixedSize
(400,300);

80 
m_YcTab
->
	`move
(200,150);

81 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

82 
m_YcTab
->
	`£tRowCou¡
(20);

83 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

84 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

85 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

86 
QSåögLi°
 
Yc_hódî
;

87 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

88 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

90 
QA˘i⁄
 * 
Yk_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ"));

91 
m_YkTab
 = 
√w
 
	`QTabÀWidgë
();

92 
m_YkTab
->
	`£tWödowFœgs
((m_YkTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

93 
m_YkTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

94 
m_YkTab
->
	`£tFixedSize
(400,300);

95 
m_YkTab
->
	`move
(200,150);

96 
m_YkTab
->
	`£tCﬁumnCou¡
(2);

97 
m_YkTab
->
	`£tRowCou¡
(20);

98 
m_YkTab
->
	`£tCﬁumnWidth
(0,250);

99 
m_YkTab
->
	`£tCﬁumnWidth
(1,100);

100 
QSåögLi°
 
Yk_hódî
;

101 
Yk_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑");

102 
m_YkTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yk_hódî
);

104 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

105 
	}
}

107 
	gCLﬂd_bªakî_3pos
::
	$InôMíu
( )

109 
BusAddrP¡
[15] = "";

111 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

112 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

114 
Yx_AâribuãD©aNo
 = 0;

115  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

117 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

118  
tmpD©a
->
byD©aTy≥
 )

120 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

121 
tmpD©a
->
dbVÆ
 = 0;

122 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

123 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

124 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

125 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

126 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

127 
	`•rötf
(
BusAddrP¡
,"%u",(
BYTE
)
tmpD©a
->
dbVÆ
);

128 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

135 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

136 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

138 
Yc_AâribuãD©aNo
 = 0;

139  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

141 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

142  
tmpD©a
->
byD©aTy≥
 )

144 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

145 
tmpD©a
->
dbVÆ
 = 0;

146 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

147 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

148 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

149 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

150 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

157 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

158 
Yk_AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

160 
Yk_AâribuãD©aNo
 = 0;

161  
Yk_AâribuãD©aNo
 = 0; Yk_AâribuãD©aNÿ< 
Yk_AâribuãD©aSize
; Yk_AttributeDataNo++ )

163 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
Yk_AâribuãD©aNo
);

164  
tmpD©a
->
byD©aTy≥
 )

166 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

167 
tmpD©a
->
dbVÆ
 = 0;

168 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

169 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

170 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

171 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

177 
	}
}

179 
	gCLﬂd_bªakî_3pos
::
	$DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 )

181 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

183 
	`Q_ASSERT
–
FALSE
 ) ;

187 if–
m_rcDøw
.
	`isEm±y
() )

190 
	`DøwVîtiˇlT›
–
pPaöãr
 ) ;

191 
	`DøwVîtiˇlBŸtom
–
pPaöãr
 ) ;

195 
	}
}

197 
	gCLﬂd_bªakî_3pos
::
	$DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 )

199 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

201 
	`Q_ASSERT
–
FALSE
 ) ;

205 if–
m_rcDøw
.
	`isEm±y
() )

208 
pPaöãr
->
	`ßve
();

210 
QPí
 
≥n
 ;

211 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

212 if–
m_byLe·T›Powî
 =
POWER_ON
 )

213 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

215 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

217 
pPaöãr
->
	`£tPí
–
≥n
 );

219 
QPaöãrP©h
 
BegöP©h
;

220 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
());

221 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

222 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

223 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

224 
BegöP©h
.
	`addEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/16,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3,

225 
m_rcDøw
.
	`width
()/8,m_rcDøw.
	`height
()/9);

226 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

227 
pPaöãr
->
	`ª°‹e
();

228 
	}
}

230 
	gCLﬂd_bªakî_3pos
::
	$DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

232 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

234 
	`Q_ASSERT
–
FALSE
 ) ;

238 if–
m_rcDøw
.
	`isEm±y
() )

241 
pPaöãr
->
	`ßve
();

243 
QPí
 
≥n
 ;

244 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

245 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

246 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

248 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

250 
pPaöãr
->
	`£tPí
–
≥n
 );

252 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

253 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

254 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

255 
WORD
 
wXMoveTo
 = 0 ;

256 
WORD
 
wYMoveTo
 = 0 ;

257 
WORD
 
wXLöeTo
 = 0 ;

258 
WORD
 
wYLöeTo
 = 0 ;

260 if–
BREAKER_OPEN
 =
m_byO≥n
 )

262 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 1 / 8 ;

263 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

264 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 4 / 8 ;

265 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

267 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

269 
wXMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

270 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

271 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
() ;

272 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

274 if–
BREAKER_EARTH
 =
m_byO≥n
 )

276 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4 ;

277 
wYMoveTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

278 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

279 
wYLöeTo
 = 
wYMoveTo
;

282 
	`Q_ASSERT
–
FALSE
 ) ;

284 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

286 
wXMoveTo
 = 
wXLöeTo
 ;

287 
wYMoveTo
 = 
wYLöeTo
 ;

288 
wXLöeTo
 = wXLineTo ;

289 
wYLöeTo
 = 
m_rcDøw
.
	`bŸtom
() ;

290 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

292 if–
BREAKER_CLOSE
 !
m_byO≥n
 )

294 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

295 
pPaöãr
->
	`£tPí
–
≥n
 );

298 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4 ;

299 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*2/3 ;

300 
wXLöeTo
 = 
wXMoveTo
 ;

301 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

302 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

304 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/8;

305 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

306 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8;

307 
wYLöeTo
 = 
wYMoveTo
;

308 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

310 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/6;

311 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/6;

312 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3;

313 
wYLöeTo
 = 
wYMoveTo
 ;

314 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

316 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/24;

317 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*11/12;

318 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/24;

319 
wYLöeTo
 = 
wYMoveTo
;

320 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

322 
pPaöãr
->
	`ª°‹e
();

323 
	}
}

325 
	gCLﬂd_bªakî_3pos
::
	$DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 )

327 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

329 
	`Q_ASSERT
–
FALSE
 ) ;

333 if–
m_rcDøw
.
	`isEm±y
() )

337 
	`DøwH‹iz⁄èlT›
–
pPaöãr
 ) ;

338 
	`DøwH‹iz⁄èlBŸtom
–
pPaöãr
 ) ;

341 
	}
}

343 
	gCLﬂd_bªakî_3pos
::
	$DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 )

345 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

347 
	`Q_ASSERT
–
FALSE
 ) ;

351 if–
m_rcDøw
.
	`isEm±y
() )

354 
pPaöãr
->
	`ßve
();

356 
QPí
 
≥n
 ;

357 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

358 if–
m_byLe·T›Powî
 =
POWER_ON
 )

359 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

361 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

363 
pPaöãr
->
	`£tPí
–
≥n
 );

365 
QPaöãrP©h
 
BegöP©h
;

366 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

367 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

368 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8);

369 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

370 
BegöP©h
.
	`addEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*7/16,

371 
m_rcDøw
.
	`width
()/9,m_rcDøw.
	`height
()/8);

372 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

373 
pPaöãr
->
	`ª°‹e
();

374 
	}
}

376 
	gCLﬂd_bªakî_3pos
::
	$DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

378 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

380 
	`Q_ASSERT
–
FALSE
 ) ;

384 if–
m_rcDøw
.
	`isEm±y
() )

387 
pPaöãr
->
	`ßve
();

389 
QPí
 
≥n
 ;

390 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

391 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

392 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

394 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

396 
pPaöãr
->
	`£tPí
–
≥n
 );

398 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

399 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

400 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

401 
WORD
 
wXMoveTo
 = 0 ;

402 
WORD
 
wYMoveTo
 = 0 ;

403 
WORD
 
wXLöeTo
 = 0 ;

404 
WORD
 
wYLöeTo
 = 0 ;

406 if–
BREAKER_OPEN
 =
m_byO≥n
 )

408 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

409 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 7 / 8 ;

410 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3;

411 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 4 / 8;

413 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

415 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

416 
wYMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

417 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

418 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
() ;

420 if–
BREAKER_EARTH
 =
m_byO≥n
 )

422 
wXMoveTo
 = 
cy
 + 
wWidth
 * 2 / 3;

423 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

424 
wXLöeTo
 = 
wXMoveTo
;

425 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

428 
	`Q_ASSERT
–
FALSE
 ) ;

430 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

432 
wXMoveTo
 = 
wXLöeTo
 ;

433 
wYMoveTo
 = 
wYLöeTo
 ;

434 
wXLöeTo
 = 
m_rcDøw
.
	`right
() ;

435 
wYLöeTo
 = wYLineTo ;

436 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

438 if–
BREAKER_CLOSE
 !
m_byO≥n
 )

440 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

441 
pPaöãr
->
	`£tPí
–
≥n
 );

444 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*2/3;

445 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

446 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4;

447 
wYLöeTo
 = 
wYMoveTo
;

448 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

450 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4;

451 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*7/8;

452 
wXLöeTo
 = 
wXMoveTo
;

453 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/8;

454 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

456 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/6;

457 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/6;

458 
wXLöeTo
 = 
wXMoveTo
;

459 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*2/3;

460 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

462 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*11/12;

463 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*19/24;

464 
wXLöeTo
 = 
wXMoveTo
;

465 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*17/24;

466 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

468 
pPaöãr
->
	`ª°‹e
();

469 
	}
}

471 
	gCLﬂd_bªakî_3pos
::
	$DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 )

473 if–
m_byIsChoi˚
 )

475 
pPaöãr
->
	`ßve
();

476 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

477 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

478 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

479 
pPaöãr
->
	`£tPí
–
≥n
 );

481 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

482 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

483 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

484 
pPaöãr
->
	`£tBrush
(
brush
);

485 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

486 
pPaöãr
->
	`ª°‹e
();

488 
	}
}

490 
BOOL
 
	gCLﬂd_bªakî_3pos
::
	$Com∑ªAâribuãD©a
( )

492 
BYTE
 
ByBªakO≥n
 = 
BREAKER_OPEN
;

493 
BYTE
 
ByE¨thO≥n
 = 
BREAKER_OPEN
;

494 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

495 if–!
AâribuãD©aSize
 )

496  
FALSE
;

498 
AâribuãD©aNo
 = 0;

499  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

501 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

502  
tmpD©a
->
byD©aTy≥
 )

504 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

506 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

508 
BYTE
 
byVÆ
 = 0;

509 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

511 if–
byVÆ
 == 1 )

512 
ByBªakO≥n
 = 
BREAKER_CLOSE
;

514 
ByBªakO≥n
 = 
BREAKER_OPEN
;

515 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

517 if–
tmpD©a
->
byAâribuãD©aByã
 == 2 )

519 
BYTE
 
byVÆ
 = 0;

520 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

522 if–
byVÆ
 == 1 )

523 
ByE¨thO≥n
 = 
BREAKER_CLOSE
;

525 
ByE¨thO≥n
 = 
BREAKER_OPEN
;

526 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

535 if–
ByBªakO≥n
 =
BREAKER_OPEN
 && 
ByE¨thO≥n
 == BREAKER_OPEN )

536 
m_byO≥n
 = 
BREAKER_OPEN
;

537 if–
ByBªakO≥n
 =
BREAKER_CLOSE
 && 
ByE¨thO≥n
 =
BREAKER_OPEN
 )

538 
m_byO≥n
 = 
BREAKER_CLOSE
;

539 if–
ByBªakO≥n
 =
BREAKER_OPEN
 && 
ByE¨thO≥n
 =
BREAKER_CLOSE
 )

540 
m_byO≥n
 = 
BREAKER_EARTH
;

541 if–
ByBªakO≥n
 =
BREAKER_CLOSE
 && 
ByE¨thO≥n
 == BREAKER_CLOSE )

543 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("ÂàÜÂêàÈÅ•‰ø°‰∏éÊé•Âú∞ÈÅ•‰ø°ÂêåÊó∂‰∏∫ÂêàÔºÅ"),QMesßgeBox::
Yes
 );

544  
FALSE
;

546  
TRUE
;

547 
	}
}

549 
BOOL
 
	gCLﬂd_bªakî_3pos
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

551 
m_byIsChoi˚
 = 
TRUE
;

552 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

553 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

554 
m_byIsChoi˚
 = 
FALSE
;

555 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

556  
TRUE
;

557 
	}
}

559 
	gCLﬂd_bªakî_3pos
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

561 if–
a˘i⁄
 =
NULL
 )

563 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊâßË°å") )

565 
BYTE
 
bySëBªakSètus
 = -1;

566 
BYTE
 
byCurBªakSètus
 = -1;

567 
QSåög
 
°r
;

568  
m_byO≥n
 )

570 
BREAKER_CLOSE
:

571 
bySëBªakSètus
 = 
BREAKER_OPEN
;

572 
byCurBªakSètus
 = 
BREAKER_CLOSE
;

573 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂàÜÈó∏Êìç‰Ωú!!!");

575 
BREAKER_OPEN
:

577 
byCurBªakSètus
 = 
BREAKER_OPEN
;

578 
°r
 = 
	`QSåög
("ÈÄâÊã©ÊâßË°åÊìç‰Ωú!!!");

579 
QMesßgeBox
 
	`box
(QMesßgeBox::
W¨nög
,"ËØ¢ÈóÆ",
°r
);

580 
box
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
 | QMesßgeBox::
C™˚l
);

581 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("ÂêàÈó∏")));

582 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("Êé•Âú∞")));

583 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
C™˚l
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

585  
box
.
	`exec
 () )

587 
QMesßgeBox
::
Yes
:

588 
bySëBªakSètus
 = 
BREAKER_CLOSE
;

589 
	`SëA˘i⁄
(
bySëBªakSètus
, 
byCurBªakSètus
);

591 
QMesßgeBox
::
No
:

592 
bySëBªakSètus
 = 
BREAKER_EARTH
;

593 
	`SëA˘i⁄
(
bySëBªakSètus
, 
byCurBªakSètus
);

595 
QMesßgeBox
::
C™˚l
:

603 
BREAKER_EARTH
:

604 
bySëBªakSètus
 = 
BREAKER_OPEN
;

605 
byCurBªakSètus
 = 
BREAKER_EARTH
;

606 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÊé•Âú∞ÂàÜÈó∏Êìç‰Ωú!!!");

611 
QMesßgeBox
 
	`box1
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

612 
box1
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
);

613 
box1
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("Á°ÆËÆ§")));

614 
box1
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

615  
box1
.
	`exec
() )

617 
QMesßgeBox
::
Yes
:

618 
	`SëA˘i⁄
(
bySëBªakSètus
, 
byCurBªakSètus
);

620 
QMesßgeBox
::
No
:

628 
	`TabÀShow
(
a˘i⁄
);

629 
	}
}

632 
	gCLﬂd_bªakî_3pos
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
, BYTE 
CurSètus
)

637 
BYTE
 
byYkSëSèã
 = 
FALSE
;

643 if–
	`AfxGëLogöSèã
(Ë=
CPage
::
LOGOUT
 )

645 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Â∞öÊú™ÁôªÂΩïÔºåËØ∑ÁôªÂΩïÂêéÊìç‰Ωú!!!"),QMesßgeBox::
Yes
 );

649  
A˘i⁄
 )

651 
BREAKER_OPEN
:

652 if–
CurSètus
 =
BREAKER_CLOSE
 )

653 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

654 if–
CurSètus
 =
BREAKER_EARTH
 )

655 
YkA˘i⁄Ty≥
 = 
YKEARTHACTIONOPEN
;

656 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_OPEN
 )

657 
byYkSëSèã
 = 
TRUE
;

659 
BREAKER_CLOSE
:

660 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

661 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

662 
byYkSëSèã
 = 
TRUE
;

664 
BREAKER_EARTH
:

665 
YkA˘i⁄Ty≥
 = 
YKEARTHACTIONCLOSE
;

666 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

667 
byYkSëSèã
 = 
TRUE
;

673 if–!
byYkSëSèã
 )

675 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ê≤°ÊúâÈÖçÁΩÆÂØπÂ∫îÊìç‰ΩúÈÅ•ÊéßÁÇπ"),QMesßgeBox::
Yes
 );

680 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
THREEPOS
,
YkD©a
[
YkA˘i⁄Ty≥
]);

682 
	}
}

684 
BOOL
 
	gCLﬂd_bªakî_3pos
::
	$IsCh™geCﬁ‹
( )

686 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

688 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

690 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

691 
m_wObje˘NodeNextSèã
 = 
m_byRightBŸtomPowî
;

693 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

695 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

696 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

701 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

702 
m_byLe·T›Powî
 = 
POWER_OFF
;

703 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

704 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

705 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

707  
TRUE
;

708 
	}
}

710 
BOOL
 
	gCLﬂd_bªakî_3pos
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

712 
m_byLe·T›Powî
 = 
POWER_OFF
;

713 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

714 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

716 
m_byLe·T›Powî
 = 
PowîSèã
;

717 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

719 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

720 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

723 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

725 
m_wObje˘NodeNext
 = 
m_wObje˘NodeR
;

727 if–
Ch™geNode
 =
m_wObje˘NodeR
 )

729 
m_byRightBŸtomPowî
 = 
PowîSèã
;

730 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

732 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

733 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

736 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

738 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

741  
FALSE
;

742  
TRUE
;

743 
	}
}

	@Element/cload_breaker_3pos.h

1 #i‚de‡
CLOAD_BREAKER_3POS_H


2 
	#CLOAD_BREAKER_3POS_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCLﬂd_bªakî_3pos
 : 
public
 
CEÀmít


8 
Q_OBJECT


9 
public
:

10 
CLﬂd_bªakî_3pos
();

12 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

13 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

14 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

15 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

16 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) ;

17 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

18 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

19 
Cª©eMíu
();

20 
InôMíu
();

21 
DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 );

22 
DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

23 
DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

24 
DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 );

25 
DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

26 
DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

27 
DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 );

28 
SëA˘i⁄
–
BYTE
 
A˘i⁄
 , BYTE 
CurSètus
 );

30 
BYTE
 
	mm_IsDúe˘i⁄
 ;

31 
BYTE
 
	mm_byLe·T›Powî
 ;

32 
BYTE
 
	mm_byRightBŸtomPowî
 ;

33 
BYTE
 
	mm_byO≥n
 ;

35 
public
 
	m¶Ÿs
:

36 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/cpower.cpp

1 
	~"˝owî.h
"

3 
	gCPowî
::
	$CPowî
()

5 
m_wObje˘Ty≥
 = 
LINKER
;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
	}
}

11 
BOOL
 
	gCPowî
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

13 if–!
pPaöãr
 )

15 
	`Q_ASSERT
–
FALSE
 );

16  
FALSE
 ;

19 
pPaöãr
->
	`ßve
();

21 if–
m_IsPowîOn
 =
POWER_ON
 )

22 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

24 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

26 
QPaöãrP©h
 
∑th
;

27 
∑th
.
	`addEŒù£
–
m_rcDøw
 );

28 if–
m_IsDúe˘i⁄
 =
HORZ_DRAW
 )

30 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

31 
∑th
.
	`cubicTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2,

32 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8,

33 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

34 
∑th
.
	`cubicTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2,

35 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8,

36 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

40 
∑th
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/4);

41 
∑th
.
	`cubicTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/4,

42 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8,

43 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

44 
∑th
.
	`cubicTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2,

45 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8,

46 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/4);

49 
pPaöãr
->
	`døwP©h
(
∑th
);

52 
pPaöãr
->
	`ª°‹e
();

53  
TRUE
 ;

54 
	}
}

56 
BOOL
 
	gCPowî
::
	$InôD©a
( )

58  
FALSE
 ;

59 
	}
}

61 
BOOL
 
	gCPowî
::
	$Cª©e
–
QRe˘
 
rc
 )

63 
m_rcDøw
 = 
rc
 ;

64  
TRUE
 ;

65 
	}
}

67 
BOOL
 
	gCPowî
::
	$IsCh™geCﬁ‹
( )

69 if–
m_IsPowîOn
 =
POWER_OFF
 )

71 
m_IsPowîOn
 = 
POWER_ON
;

72 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

73 
m_wObje˘NodeNextSèã
 = 
POWER_ON
;

74  
TRUE
;

76  
TRUE
;

77 
	}
}

	@Element/cpower.h

1 #i‚de‡
CPOWER_H


2 
	#CPOWER_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCPowî
 : 
public
 
CEÀmít


8 
public
:

9 
CPowî
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/cpt_sign.cpp

1 
	~"˝t_sign.h
"

2 
	~<m©h.h
>

4 
	gCPt_sign
::
	$CPt_sign
()

6 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

7 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

8 
m_IsPowîOn
 = 
POWER_OFF
 ;

9 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

10 
	}
}

12 
BOOL
 
	gCPt_sign
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

14 if–!
pPaöãr
 )

16 
	`Q_ASSERT
–
FALSE
 );

17  
FALSE
 ;

20 
pPaöãr
->
	`ßve
();

22 if–
m_IsPowîOn
 =
POWER_ON
 )

23 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

25 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

27 if–
m_IsDúe˘i⁄
 =
HORZ_DRAW
 )

29 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*
	`sqπ
(2)/(2+sqrt(2))*4/5+m_rcDraw.width()/10,

30 
m_rcDøw
.
	`y
(),

31 
m_rcDøw
.
	`width
()*2/(2+
	`sqπ
(2))*4/5,m_rcDøw.
	`height
()*2/(2+sqrt(2)));

32 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/10,

33 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*
	`sqπ
(2)/(2+sqrt(2)),

34 
m_rcDøw
.
	`width
()*2/(2+
	`sqπ
(2))*4/5,m_rcDøw.
	`height
()*2/(2+sqrt(2)));

35 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*
	`sqπ
(2)/(2+sqrt(2)),

36 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*
	`sqπ
(2)/(2+sqrt(2)),

37 
m_rcDøw
.
	`width
()*2/(2+
	`sqπ
(2))*4/5,m_rcDøw.
	`height
()*2/(2+sqrt(2)));

38 
pPaöãr
->
	`døwLöe
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`width
()*(1-1/(2+
	`sqπ
(2))),

39 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*(1-1/(2+
	`sqπ
(2))));

43 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/10,

44 
m_rcDøw
.
	`width
()*2/(2+
	`sqπ
(2)),m_rcDøw.
	`height
()*2/(2+sqrt(2))*4/5);

45 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*
	`sqπ
(2)/(2+sqrt(2)),

46 
m_rcDøw
.
	`width
()*2/(2+
	`sqπ
(2)),m_rcDøw.
	`height
()*2/(2+sqrt(2))*4/5);

47 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*
	`sqπ
(2)/(2+sqrt(2)),

48 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*
	`sqπ
(2)/(2+sqrt(2)),

49 
m_rcDøw
.
	`width
()*2/(2+
	`sqπ
(2)),m_rcDøw.
	`height
()*2/(2+sqrt(2))*4/5);

50 
pPaöãr
->
	`døwLöe
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/(2+
	`sqπ
(2)),m_rcDøw.
	`y
(),

51 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/(2+
	`sqπ
(2)),m_rcDøw.
	`y
()+m_rcDøw.
	`height
());

55 
pPaöãr
->
	`ª°‹e
();

56  
TRUE
 ;

57 
	}
}

59 
BOOL
 
	gCPt_sign
::
	$InôD©a
( )

61  
FALSE
 ;

62 
	}
}

64 
BOOL
 
	gCPt_sign
::
	$Cª©e
–
QRe˘
 
rc
 )

66 
m_rcDøw
 = 
rc
 ;

67  
TRUE
 ;

68 
	}
}

70 
BOOL
 
	gCPt_sign
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

72 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

74 
m_IsPowîOn
 = 
PowîSèã
;

75  
TRUE
;

77  
FALSE
;

78 
	}
}

	@Element/cpt_sign.h

1 #i‚de‡
CPT_SIGN_H


2 
	#CPT_SIGN_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCPt_sign
 : 
public
 
CEÀmít


8 
public
:

9 
CPt_sign
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/crect_indicator_sign.cpp

1 
	~"¸e˘_ödiˇt‹_sign.h
"

2 
	~"cglobÆ.h
"

3 
	~"Ty≥def.h
"

5 
	gCRe˘_ödiˇt‹_sign
::
	$CRe˘_ödiˇt‹_sign
()

7 
m_wObje˘Ty≥
 = 
LINKER
;

8 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

9 
m_IsPowîOn
 = 
POWER_OFF
 ;

10 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

11 
	}
}

14 
BOOL
 
	gCRe˘_ödiˇt‹_sign
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

16 if–!
pPaöãr
 )

18 
	`Q_ASSERT
–
FALSE
 );

19  
FALSE
 ;

22 
pPaöãr
->
	`ßve
();

24 if–
m_IsPowîOn
 =
POWER_ON
 )

26 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

27 
pPaöãr
->
	`£tBrush
–
Qt
::
ªd
 );

31 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

32 
pPaöãr
->
	`£tBrush
–
Qt
::
gªí
 );

36 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

37 
pPaöãr
->
	`ª°‹e
();

38  
TRUE
 ;

39 
	}
}

41 
BOOL
 
	gCRe˘_ödiˇt‹_sign
::
	$InôD©a
( )

43  
FALSE
 ;

44 
	}
}

46 
BOOL
 
	gCRe˘_ödiˇt‹_sign
::
	$Cª©e
–
QRe˘
 
rc
 )

48 
m_rcDøw
 = 
rc
 ;

49  
TRUE
 ;

50 
	}
}

52 
BOOL
 
	gCRe˘_ödiˇt‹_sign
::
	$Com∑ªAâribuãD©a
( )

54 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

55 if–
AâribuãD©aSize
 != 1 )

56  
FALSE
;

58 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(0);

59 if–
tmpD©a
->
byD©aTy≥
 =
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
 )

61 
BYTE
 
byVÆ
 = 0;

62 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

63 if–
tmpD©a
->
dbVÆ
 !
byVÆ
 )

65 if–
byVÆ
 == 1 )

66 
m_IsPowîOn
 = 
POWER_ON
;

68 
m_IsPowîOn
 = 
POWER_OFF
;

69 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

70  
TRUE
;

73  
FALSE
;

74 
	}
}

	@Element/crect_indicator_sign.h

1 #i‚de‡
CRECT_INDICATOR_SIGN_H


2 
	#CRECT_INDICATOR_SIGN_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCRe˘_ödiˇt‹_sign
 : 
public
 
CEÀmít


8 
public
:

9 
CRe˘_ödiˇt‹_sign
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/cswitch_2pos.cpp

1 
	~"cswôch_2pos.h
"

3 
	gCSwôch_2pos
::
	$CSwôch_2pos
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsDúe˘i⁄
 = 
VER_DRAW
 ;

8 
m_byLe·T›Powî
 = 
POWER_OFF
 ;

9 
m_byRightBŸtomPowî
 = 
POWER_OFF
 ;

10 
m_byO≥n
 = 
BREAKER_OPEN
 ;

12 
	`Cª©eMíu
();

13 
	}
}

15 
BOOL
 
	gCSwôch_2pos
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

17 if–!
pPaöãr
 )

19 
	`Q_ASSERT
–
FALSE
 );

20  
FALSE
 ;

23 
pPaöãr
->
	`ßve
();

25 if–
m_IsDúe˘i⁄
 =
VER_DRAW
 )

28 
	`DøwVîtiˇl
–
pPaöãr
 ) ;

33 
	`DøwH‹iz⁄èl
(
pPaöãr
);

35 
	`DøwIsChoi˚
(
pPaöãr
);

38 
pPaöãr
->
	`ª°‹e
();

39  
TRUE
 ;

41 
	}
}

43 
BOOL
 
	gCSwôch_2pos
::
	$InôD©a
( )

45 
m_IsDúe˘i⁄
 = 
m_wDúe˘
;

46 
	`InôMíu
();

47 
	`InôYkD©a
();

48  
TRUE
 ;

49 
	}
}

51 
BOOL
 
	gCSwôch_2pos
::
	$Cª©e
–
QRe˘
 
rc
 )

53 
m_rcDøw
 = 
rc
 ;

54  
TRUE
 ;

55 
	}
}

57 
	gCSwôch_2pos
::
	$Cª©eMíu
()

59 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

60 
QA˘i⁄
 * 
YkSë_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

61 
QA˘i⁄
 * 
Yx_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ"));

62 
m_YxTab
 = 
√w
 
	`QTabÀWidgë
();

63 
m_YxTab
->
	`£tWödowFœgs
((m_YxTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

64 
m_YxTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

65 
m_YxTab
->
	`£tFixedSize
(400,300);

66 
m_YxTab
->
	`move
(200,150);

67 
m_YxTab
->
	`£tCﬁumnCou¡
(3);

68 
m_YxTab
->
	`£tRowCou¡
(20);

69 
m_YxTab
->
	`£tCﬁumnWidth
(0,200);

70 
m_YxTab
->
	`£tCﬁumnWidth
(1,100);

71 
m_YxTab
->
	`£tCﬁumnWidth
(2,100);

72 
QSåögLi°
 
Yx_hódî
;

73 
Yx_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

74 
m_YxTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yx_hódî
);

76 
QA˘i⁄
 * 
Yc_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

77 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

78 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

79 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

80 
m_YcTab
->
	`£tFixedSize
(400,300);

81 
m_YcTab
->
	`move
(200,150);

82 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

83 
m_YcTab
->
	`£tRowCou¡
(20);

84 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

85 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

86 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

87 
QSåögLi°
 
Yc_hódî
;

88 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

89 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

91 
QA˘i⁄
 * 
Yk_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ"));

92 
m_YkTab
 = 
√w
 
	`QTabÀWidgë
();

93 
m_YkTab
->
	`£tWödowFœgs
((m_YkTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

94 
m_YkTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

95 
m_YkTab
->
	`£tFixedSize
(400,300);

96 
m_YkTab
->
	`move
(200,150);

97 
m_YkTab
->
	`£tCﬁumnCou¡
(2);

98 
m_YkTab
->
	`£tRowCou¡
(20);

99 
m_YkTab
->
	`£tCﬁumnWidth
(0,250);

100 
m_YkTab
->
	`£tCﬁumnWidth
(1,100);

101 
QSåögLi°
 
Yk_hódî
;

102 
Yk_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑");

103 
m_YkTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yk_hódî
);

105 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

106 
	}
}

108 
	gCSwôch_2pos
::
	$InôMíu
( )

110 
BusAddrP¡
[15] = "";

112 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

113 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

115 
Yx_AâribuãD©aNo
 = 0;

116  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

118 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

119  
tmpD©a
->
byD©aTy≥
 )

121 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

122 
tmpD©a
->
dbVÆ
 = 0;

123 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

124 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

125 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

126 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

127 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

128 
	`•rötf
(
BusAddrP¡
,"%u",(
BYTE
)
tmpD©a
->
dbVÆ
);

129 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

136 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

137 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

139 
Yc_AâribuãD©aNo
 = 0;

140  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

142 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

143  
tmpD©a
->
byD©aTy≥
 )

145 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

146 
tmpD©a
->
dbVÆ
 = 0;

147 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

148 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

149 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

150 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

151 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

158 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

159 
Yk_AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

161 
Yk_AâribuãD©aNo
 = 0;

162  
Yk_AâribuãD©aNo
 = 0; Yk_AâribuãD©aNÿ< 
Yk_AâribuãD©aSize
; Yk_AttributeDataNo++ )

164 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
Yk_AâribuãD©aNo
);

165  
tmpD©a
->
byD©aTy≥
 )

167 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

168 
tmpD©a
->
dbVÆ
 = 0;

169 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

170 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

171 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

172 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

177 
	}
}

179 
	gCSwôch_2pos
::
	$DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 )

181 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

183 
	`Q_ASSERT
–
FALSE
 ) ;

187 if–
m_rcDøw
.
	`isEm±y
() )

190 
	`DøwVîtiˇlT›
–
pPaöãr
 ) ;

191 
	`DøwVîtiˇlBŸtom
–
pPaöãr
 ) ;

195 
	}
}

197 
	gCSwôch_2pos
::
	$DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 )

199 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

201 
	`Q_ASSERT
–
FALSE
 ) ;

205 if–
m_rcDøw
.
	`isEm±y
() )

208 
pPaöãr
->
	`ßve
();

210 
QPí
 
≥n
 ;

211 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

212 if–
m_byLe·T›Powî
 =
POWER_ON
 )

213 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

215 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

217 
pPaöãr
->
	`£tPí
–
≥n
 );

219 
QPaöãrP©h
 
BegöP©h
;

220 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
());

221 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

222 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

223 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

224 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

225 
pPaöãr
->
	`ª°‹e
();

226 
	}
}

228 
	gCSwôch_2pos
::
	$DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

230 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

232 
	`Q_ASSERT
–
FALSE
 ) ;

236 if–
m_rcDøw
.
	`isEm±y
() )

239 
pPaöãr
->
	`ßve
();

241 
QPí
 
≥n
 ;

242 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

243 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

244 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

246 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

248 
pPaöãr
->
	`£tPí
–
≥n
 );

250 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

251 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

252 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

253 
WORD
 
wXMoveTo
 = 0 ;

254 
WORD
 
wYMoveTo
 = 0 ;

255 
WORD
 
wXLöeTo
 = 0 ;

256 
WORD
 
wYLöeTo
 = 0 ;

258 if–
BREAKER_OPEN
 =
m_byO≥n
 )

260 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 1 / 8 ;

261 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

262 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 4 / 8 ;

263 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

265 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

267 
wXMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

268 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

269 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
() ;

270 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

273 
	`Q_ASSERT
–
FALSE
 ) ;

275 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

277 
wXMoveTo
 = 
wXLöeTo
 ;

278 
wYMoveTo
 = 
wYLöeTo
 ;

279 
wXLöeTo
 = wXLineTo ;

280 
wYLöeTo
 = 
m_rcDøw
.
	`bŸtom
() ;

281 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

283 
pPaöãr
->
	`ª°‹e
();

284 
	}
}

286 
	gCSwôch_2pos
::
	$DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 )

288 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

290 
	`Q_ASSERT
–
FALSE
 ) ;

294 if–
m_rcDøw
.
	`isEm±y
() )

298 
	`DøwH‹iz⁄èlT›
–
pPaöãr
 ) ;

299 
	`DøwH‹iz⁄èlBŸtom
–
pPaöãr
 ) ;

302 
	}
}

304 
	gCSwôch_2pos
::
	$DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 )

306 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

308 
	`Q_ASSERT
–
FALSE
 ) ;

312 if–
m_rcDøw
.
	`isEm±y
() )

315 
pPaöãr
->
	`ßve
();

317 
QPí
 
≥n
 ;

318 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

319 if–
m_byLe·T›Powî
 =
POWER_ON
 )

320 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

322 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

324 
pPaöãr
->
	`£tPí
–
≥n
 );

326 
QPaöãrP©h
 
BegöP©h
;

327 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

328 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

329 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8);

330 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

331 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

332 
pPaöãr
->
	`ª°‹e
();

333 
	}
}

335 
	gCSwôch_2pos
::
	$DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

337 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

339 
	`Q_ASSERT
–
FALSE
 ) ;

343 if–
m_rcDøw
.
	`isEm±y
() )

346 
pPaöãr
->
	`ßve
();

348 
QPí
 
≥n
 ;

349 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

350 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

351 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

353 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

355 
pPaöãr
->
	`£tPí
–
≥n
 );

357 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

358 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

359 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

360 
WORD
 
wXMoveTo
 = 0 ;

361 
WORD
 
wYMoveTo
 = 0 ;

362 
WORD
 
wXLöeTo
 = 0 ;

363 
WORD
 
wYLöeTo
 = 0 ;

365 if–
BREAKER_OPEN
 =
m_byO≥n
 )

367 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

368 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 7 / 8 ;

369 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3;

370 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 4 / 8;

372 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

374 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

375 
wYMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

376 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

377 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
() ;

380 
	`Q_ASSERT
–
FALSE
 ) ;

382 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

384 
wXMoveTo
 = 
wXLöeTo
 ;

385 
wYMoveTo
 = 
wYLöeTo
 ;

386 
wXLöeTo
 = 
m_rcDøw
.
	`right
() ;

387 
wYLöeTo
 = wYLineTo ;

388 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

390 
pPaöãr
->
	`ª°‹e
();

391 
	}
}

393 
	gCSwôch_2pos
::
	$DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 )

395 if–
m_byIsChoi˚
 )

397 
pPaöãr
->
	`ßve
();

398 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

399 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

400 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

401 
pPaöãr
->
	`£tPí
–
≥n
 );

403 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

404 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

405 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

406 
pPaöãr
->
	`£tBrush
(
brush
);

407 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

408 
pPaöãr
->
	`ª°‹e
();

410 
	}
}

412 
BOOL
 
	gCSwôch_2pos
::
	$Com∑ªAâribuãD©a
( )

414 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

415 if–!
AâribuãD©aSize
 )

416  
FALSE
;

418 
AâribuãD©aNo
 = 0;

419  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

421 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

422  
tmpD©a
->
byD©aTy≥
 )

424 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

425 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

427 
BYTE
 
byVÆ
 = 0;

428 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

429 if–
tmpD©a
->
dbVÆ
 !
byVÆ
 )

431 if–
byVÆ
 == 1 )

432 
m_byO≥n
 = 
BREAKER_CLOSE
;

434 
m_byO≥n
 = 
BREAKER_OPEN
;

435 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

436  
TRUE
;

445  
FALSE
;

446 
	}
}

448 
BOOL
 
	gCSwôch_2pos
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

450 
m_byIsChoi˚
 = 
TRUE
;

451 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

452 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

453 
m_byIsChoi˚
 = 
FALSE
;

454 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

455  
TRUE
;

456 
	}
}

458 
	gCSwôch_2pos
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

460 if–
a˘i⁄
 =
NULL
 )

462 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊâßË°å") )

464 
BYTE
 
bySëBªakSètus
 = -1;

466 
QSåög
 
°r
;

467  
m_byO≥n
 )

469 
BREAKER_CLOSE
:

470 
bySëBªakSètus
 = 
BREAKER_OPEN
;

471 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂàÜÈó∏Êìç‰Ωú!!!");

473 
BREAKER_OPEN
:

474 
bySëBªakSètus
 = 
BREAKER_CLOSE
;

475 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂêàÈó∏Êìç‰Ωú!!!");

480 
QMesßgeBox
 
	`box
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

481 
box
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
);

482 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("Á°ÆËÆ§")));

483 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

484  
box
.
	`exec
() )

486 
QMesßgeBox
::
Yes
:

487 
	`SëA˘i⁄
(
bySëBªakSètus
);

489 
QMesßgeBox
::
No
:

497 
	`TabÀShow
(
a˘i⁄
);

498 
	}
}

501 
	gCSwôch_2pos
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
)

506 
BYTE
 
byYkSëSèã
 = 
FALSE
;

512 if–
	`AfxGëLogöSèã
(Ë=
CPage
::
LOGOUT
 )

514 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Â∞öÊú™ÁôªÂΩïÔºåËØ∑ÁôªÂΩïÂêéÊìç‰Ωú!!!"),QMesßgeBox::
Yes
 );

518  
A˘i⁄
 )

520 
BREAKER_OPEN
:

521 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

522 if–
YkD©a
[
YkA˘i⁄Ty≥
].
wVÆ
 =
YK_OPEN
 )

523 
byYkSëSèã
 = 
TRUE
;

525 
BREAKER_CLOSE
:

526 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

527 if–
YkD©a
[
YKACTIONCLOSE
].
wVÆ
 =
YK_CLOSE
 )

528 
byYkSëSèã
 = 
TRUE
;

534 if–!
byYkSëSèã
 )

536 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ê≤°ÊúâÈÖçÁΩÆÂØπÂ∫îÊìç‰ΩúÈÅ•ÊéßÁÇπ"),QMesßgeBox::
Yes
 );

541 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
TWOPOS
,
YkD©a
[
YkA˘i⁄Ty≥
]);

543 
	}
}

545 
BOOL
 
	gCSwôch_2pos
::
	$IsCh™geCﬁ‹
( )

547 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

549 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

551 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

552 
m_wObje˘NodeNextSèã
 = 
m_byRightBŸtomPowî
;

554 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

556 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

557 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

560 if–
m_byO≥n
 =
BREAKER_OPEN
 )

562 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

563 
m_byLe·T›Powî
 = 
POWER_OFF
;

564 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

565 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

566 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

568  
TRUE
;

569 
	}
}

571 
BOOL
 
	gCSwôch_2pos
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

573 
m_byLe·T›Powî
 = 
POWER_OFF
;

574 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

575 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

577 
m_byLe·T›Powî
 = 
PowîSèã
;

578 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

580 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

581 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

583 if–
m_byO≥n
 =
BREAKER_OPEN
 )

584 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

586 
m_wObje˘NodeNext
 = 
m_wObje˘NodeR
;

588 if–
Ch™geNode
 =
m_wObje˘NodeR
 )

590 
m_byRightBŸtomPowî
 = 
PowîSèã
;

591 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

593 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

594 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

596 if–
m_byO≥n
 =
BREAKER_OPEN
 )

597 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

599 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

602  
FALSE
;

603  
TRUE
;

604 
	}
}

	@Element/cswitch_2pos.h

1 #i‚de‡
CSWITCH_2POS_H


2 
	#CSWITCH_2POS_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCSwôch_2pos
 : 
public
 
CEÀmít


8 
Q_OBJECT


9 
public
:

10 
CSwôch_2pos
();

12 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

13 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

14 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

15 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

16 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) ;

17 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

18 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

19 
Cª©eMíu
();

20 
InôMíu
();

21 
DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 );

22 
DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

23 
DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

24 
DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 );

25 
DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

26 
DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

27 
DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 );

28 
SëA˘i⁄
–
BYTE
 
A˘i⁄
 );

30 
BYTE
 
	mm_IsDúe˘i⁄
 ;

31 
BYTE
 
	mm_byLe·T›Powî
 ;

32 
BYTE
 
	mm_byRightBŸtomPowî
 ;

33 
BYTE
 
	mm_byO≥n
 ;

35 
public
 
	m¶Ÿs
:

36 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/cswitch_3pos.cpp

1 
	~"cswôch_3pos.h
"

3 
	gCSwôch_3pos
::
	$CSwôch_3pos
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsDúe˘i⁄
 = 
VER_DRAW
 ;

8 
m_byLe·T›Powî
 = 
POWER_OFF
 ;

9 
m_byRightBŸtomPowî
 = 
POWER_OFF
 ;

10 
m_byO≥n
 = 
BREAKER_OPEN
 ;

12 
	`Cª©eMíu
();

13 
	}
}

15 
BOOL
 
	gCSwôch_3pos
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

17 if–!
pPaöãr
 )

19 
	`Q_ASSERT
–
FALSE
 );

20  
FALSE
 ;

23 
pPaöãr
->
	`ßve
();

25 if–
m_IsDúe˘i⁄
 =
VER_DRAW
 )

28 
	`DøwVîtiˇl
–
pPaöãr
 ) ;

33 
	`DøwH‹iz⁄èl
(
pPaöãr
);

35 
	`DøwIsChoi˚
(
pPaöãr
);

38 
pPaöãr
->
	`ª°‹e
();

39  
TRUE
 ;

40 
	}
}

42 
BOOL
 
	gCSwôch_3pos
::
	$InôD©a
( )

44 
m_IsDúe˘i⁄
 = 
m_wDúe˘
;

45 
	`InôMíu
();

46 
	`InôYkD©a
();

47  
TRUE
 ;

48 
	}
}

50 
BOOL
 
	gCSwôch_3pos
::
	$Cª©e
–
QRe˘
 
rc
 )

52 
m_rcDøw
 = 
rc
 ;

53  
TRUE
 ;

54 
	}
}

56 
	gCSwôch_3pos
::
	$Cª©eMíu
()

58 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

59 
QA˘i⁄
 * 
YkSë_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

60 
QA˘i⁄
 * 
Yx_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ"));

61 
m_YxTab
 = 
√w
 
	`QTabÀWidgë
();

62 
m_YxTab
->
	`£tWödowFœgs
((m_YxTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

63 
m_YxTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

64 
m_YxTab
->
	`£tFixedSize
(400,300);

65 
m_YxTab
->
	`move
(200,150);

66 
m_YxTab
->
	`£tCﬁumnCou¡
(3);

67 
m_YxTab
->
	`£tRowCou¡
(20);

68 
m_YxTab
->
	`£tCﬁumnWidth
(0,200);

69 
m_YxTab
->
	`£tCﬁumnWidth
(1,100);

70 
m_YxTab
->
	`£tCﬁumnWidth
(2,100);

71 
QSåögLi°
 
Yx_hódî
;

72 
Yx_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

73 
m_YxTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yx_hódî
);

75 
QA˘i⁄
 * 
Yc_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

76 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

77 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

78 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

79 
m_YcTab
->
	`£tFixedSize
(400,300);

80 
m_YcTab
->
	`move
(200,150);

81 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

82 
m_YcTab
->
	`£tRowCou¡
(20);

83 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

84 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

85 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

86 
QSåögLi°
 
Yc_hódî
;

87 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

88 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

90 
QA˘i⁄
 * 
Yk_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ"));

91 
m_YkTab
 = 
√w
 
	`QTabÀWidgë
();

92 
m_YkTab
->
	`£tWödowFœgs
((m_YkTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

93 
m_YkTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

94 
m_YkTab
->
	`£tFixedSize
(400,300);

95 
m_YkTab
->
	`move
(200,150);

96 
m_YkTab
->
	`£tCﬁumnCou¡
(2);

97 
m_YkTab
->
	`£tRowCou¡
(20);

98 
m_YkTab
->
	`£tCﬁumnWidth
(0,250);

99 
m_YkTab
->
	`£tCﬁumnWidth
(1,100);

100 
QSåögLi°
 
Yk_hódî
;

101 
Yk_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑");

102 
m_YkTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yk_hódî
);

104 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

105 
	}
}

107 
	gCSwôch_3pos
::
	$InôMíu
( )

109 
BusAddrP¡
[15] = "";

111 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

112 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

114 
Yx_AâribuãD©aNo
 = 0;

115  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

117 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

118  
tmpD©a
->
byD©aTy≥
 )

120 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

121 
tmpD©a
->
dbVÆ
 = 0;

122 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

123 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

124 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

125 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

126 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

127 
	`•rötf
(
BusAddrP¡
,"%u",(
BYTE
)
tmpD©a
->
dbVÆ
);

128 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

135 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

136 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

138 
Yc_AâribuãD©aNo
 = 0;

139  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

141 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

142  
tmpD©a
->
byD©aTy≥
 )

144 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

145 
tmpD©a
->
dbVÆ
 = 0;

146 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

147 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

148 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

149 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

150 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

157 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

158 
Yk_AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

160 
Yk_AâribuãD©aNo
 = 0;

161  
Yk_AâribuãD©aNo
 = 0; Yk_AâribuãD©aNÿ< 
Yk_AâribuãD©aSize
; Yk_AttributeDataNo++ )

163 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
Yk_AâribuãD©aNo
);

164  
tmpD©a
->
byD©aTy≥
 )

166 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

167 
tmpD©a
->
dbVÆ
 = 0;

168 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

169 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

170 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

171 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

176 
	}
}

178 
	gCSwôch_3pos
::
	$DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 )

180 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

182 
	`Q_ASSERT
–
FALSE
 ) ;

186 if–
m_rcDøw
.
	`isEm±y
() )

189 
	`DøwVîtiˇlT›
–
pPaöãr
 ) ;

190 
	`DøwVîtiˇlBŸtom
–
pPaöãr
 ) ;

194 
	}
}

196 
	gCSwôch_3pos
::
	$DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 )

198 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

200 
	`Q_ASSERT
–
FALSE
 ) ;

204 if–
m_rcDøw
.
	`isEm±y
() )

207 
pPaöãr
->
	`ßve
();

209 
QPí
 
≥n
 ;

210 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

211 if–
m_byLe·T›Powî
 =
POWER_ON
 )

212 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

214 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

216 
pPaöãr
->
	`£tPí
–
≥n
 );

218 
QPaöãrP©h
 
BegöP©h
;

219 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
());

220 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

221 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

222 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

223 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

224 
pPaöãr
->
	`ª°‹e
();

225 
	}
}

227 
	gCSwôch_3pos
::
	$DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

229 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

231 
	`Q_ASSERT
–
FALSE
 ) ;

235 if–
m_rcDøw
.
	`isEm±y
() )

238 
pPaöãr
->
	`ßve
();

240 
QPí
 
≥n
 ;

241 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

242 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

243 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

245 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

247 
pPaöãr
->
	`£tPí
–
≥n
 );

249 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

250 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

251 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

252 
WORD
 
wXMoveTo
 = 0 ;

253 
WORD
 
wYMoveTo
 = 0 ;

254 
WORD
 
wXLöeTo
 = 0 ;

255 
WORD
 
wYLöeTo
 = 0 ;

257 if–
BREAKER_OPEN
 =
m_byO≥n
 )

259 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 1 / 8 ;

260 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

261 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 4 / 8 ;

262 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

264 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

266 
wXMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

267 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

268 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
() ;

269 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

271 if–
BREAKER_EARTH
 =
m_byO≥n
 )

273 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4 ;

274 
wYMoveTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

275 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

276 
wYLöeTo
 = 
wYMoveTo
;

279 
	`Q_ASSERT
–
FALSE
 ) ;

281 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

283 
wXMoveTo
 = 
wXLöeTo
 ;

284 
wYMoveTo
 = 
wYLöeTo
 ;

285 
wXLöeTo
 = wXLineTo ;

286 
wYLöeTo
 = 
m_rcDøw
.
	`bŸtom
() ;

287 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

289 if–
BREAKER_CLOSE
 !
m_byO≥n
 )

291 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

292 
pPaöãr
->
	`£tPí
–
≥n
 );

295 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4 ;

296 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*2/3 ;

297 
wXLöeTo
 = 
wXMoveTo
 ;

298 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

299 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

301 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/8;

302 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

303 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8;

304 
wYLöeTo
 = 
wYMoveTo
;

305 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

307 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/6;

308 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/6;

309 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3;

310 
wYLöeTo
 = 
wYMoveTo
 ;

311 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

313 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/24;

314 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*11/12;

315 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/24;

316 
wYLöeTo
 = 
wYMoveTo
;

317 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

319 
pPaöãr
->
	`ª°‹e
();

320 
	}
}

322 
	gCSwôch_3pos
::
	$DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 )

324 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

326 
	`Q_ASSERT
–
FALSE
 ) ;

330 if–
m_rcDøw
.
	`isEm±y
() )

334 
	`DøwH‹iz⁄èlT›
–
pPaöãr
 ) ;

335 
	`DøwH‹iz⁄èlBŸtom
–
pPaöãr
 ) ;

338 
	}
}

340 
	gCSwôch_3pos
::
	$DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 )

342 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

344 
	`Q_ASSERT
–
FALSE
 ) ;

348 if–
m_rcDøw
.
	`isEm±y
() )

351 
pPaöãr
->
	`ßve
();

353 
QPí
 
≥n
 ;

354 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

355 if–
m_byLe·T›Powî
 =
POWER_ON
 )

356 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

358 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

360 
pPaöãr
->
	`£tPí
–
≥n
 );

362 
QPaöãrP©h
 
BegöP©h
;

363 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

364 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

365 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8);

366 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

367 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

368 
pPaöãr
->
	`ª°‹e
();

369 
	}
}

371 
	gCSwôch_3pos
::
	$DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

373 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

375 
	`Q_ASSERT
–
FALSE
 ) ;

379 if–
m_rcDøw
.
	`isEm±y
() )

382 
pPaöãr
->
	`ßve
();

384 
QPí
 
≥n
 ;

385 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

386 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

387 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

389 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

391 
pPaöãr
->
	`£tPí
–
≥n
 );

393 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

394 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

395 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

396 
WORD
 
wXMoveTo
 = 0 ;

397 
WORD
 
wYMoveTo
 = 0 ;

398 
WORD
 
wXLöeTo
 = 0 ;

399 
WORD
 
wYLöeTo
 = 0 ;

401 if–
BREAKER_OPEN
 =
m_byO≥n
 )

403 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

404 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 7 / 8 ;

405 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3;

406 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 4 / 8;

408 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

410 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

411 
wYMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

412 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

413 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
() ;

415 if–
BREAKER_EARTH
 =
m_byO≥n
 )

417 
wXMoveTo
 = 
cy
 + 
wWidth
 * 2 / 3;

418 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

419 
wXLöeTo
 = 
wXMoveTo
;

420 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

423 
	`Q_ASSERT
–
FALSE
 ) ;

425 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

427 
wXMoveTo
 = 
wXLöeTo
 ;

428 
wYMoveTo
 = 
wYLöeTo
 ;

429 
wXLöeTo
 = 
m_rcDøw
.
	`right
() ;

430 
wYLöeTo
 = wYLineTo ;

431 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

433 if–
BREAKER_CLOSE
 !
m_byO≥n
 )

435 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

436 
pPaöãr
->
	`£tPí
–
≥n
 );

439 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*2/3;

440 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

441 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4;

442 
wYLöeTo
 = 
wYMoveTo
;

443 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

445 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4;

446 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*7/8;

447 
wXLöeTo
 = 
wXMoveTo
;

448 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/8;

449 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

451 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/6;

452 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/6;

453 
wXLöeTo
 = 
wXMoveTo
;

454 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*2/3;

455 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

457 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*11/12;

458 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*19/24;

459 
wXLöeTo
 = 
wXMoveTo
;

460 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*17/24;

461 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

463 
pPaöãr
->
	`ª°‹e
();

464 
	}
}

466 
	gCSwôch_3pos
::
	$DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 )

468 if–
m_byIsChoi˚
 )

470 
pPaöãr
->
	`ßve
();

471 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

472 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

473 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

474 
pPaöãr
->
	`£tPí
–
≥n
 );

476 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

477 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

478 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

479 
pPaöãr
->
	`£tBrush
(
brush
);

480 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

481 
pPaöãr
->
	`ª°‹e
();

483 
	}
}

485 
BOOL
 
	gCSwôch_3pos
::
	$Com∑ªAâribuãD©a
( )

487 
BYTE
 
ByBªakO≥n
 = 
BREAKER_OPEN
;

488 
BYTE
 
ByE¨thO≥n
 = 
BREAKER_OPEN
;

489 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

490 if–!
AâribuãD©aSize
 )

491  
FALSE
;

493 
AâribuãD©aNo
 = 0;

494  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

496 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

497  
tmpD©a
->
byD©aTy≥
 )

499 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

501 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

503 
BYTE
 
byVÆ
 = 0;

504 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

506 if–
byVÆ
 == 1 )

507 
ByBªakO≥n
 = 
BREAKER_CLOSE
;

509 
ByBªakO≥n
 = 
BREAKER_OPEN
;

510 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

512 if–
tmpD©a
->
byAâribuãD©aByã
 == 2 )

514 
BYTE
 
byVÆ
 = 0;

515 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

517 if–
byVÆ
 == 1 )

518 
ByE¨thO≥n
 = 
BREAKER_CLOSE
;

520 
ByE¨thO≥n
 = 
BREAKER_OPEN
;

521 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

530 if–
ByBªakO≥n
 =
BREAKER_OPEN
 && 
ByE¨thO≥n
 == BREAKER_OPEN )

531 
m_byO≥n
 = 
BREAKER_OPEN
;

532 if–
ByBªakO≥n
 =
BREAKER_CLOSE
 && 
ByE¨thO≥n
 =
BREAKER_OPEN
 )

533 
m_byO≥n
 = 
BREAKER_CLOSE
;

534 if–
ByBªakO≥n
 =
BREAKER_OPEN
 && 
ByE¨thO≥n
 =
BREAKER_CLOSE
 )

535 
m_byO≥n
 = 
BREAKER_EARTH
;

536 if–
ByBªakO≥n
 =
BREAKER_CLOSE
 && 
ByE¨thO≥n
 == BREAKER_CLOSE )

538 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("ÂàÜÂêàÈÅ•‰ø°‰∏éÊé•Âú∞ÈÅ•‰ø°ÂêåÊó∂‰∏∫ÂêàÔºÅ"),QMesßgeBox::
Yes
 );

539  
FALSE
;

541  
TRUE
;

542 
	}
}

544 
BOOL
 
	gCSwôch_3pos
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

546 
m_byIsChoi˚
 = 
TRUE
;

547 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

548 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

549 
m_byIsChoi˚
 = 
FALSE
;

550 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

551  
TRUE
;

552 
	}
}

554 
	gCSwôch_3pos
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

556 if–
a˘i⁄
 =
NULL
 )

558 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊâßË°å") )

560 
BYTE
 
bySëBªakSètus
 = -1;

561 
BYTE
 
byCurBªakSètus
 = -1;

562 
QSåög
 
°r
;

563  
m_byO≥n
 )

565 
BREAKER_CLOSE
:

566 
bySëBªakSètus
 = 
BREAKER_OPEN
;

567 
byCurBªakSètus
 = 
BREAKER_CLOSE
;

568 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂàÜÈó∏Êìç‰Ωú!!!");

570 
BREAKER_OPEN
:

572 
byCurBªakSètus
 = 
BREAKER_OPEN
;

573 
°r
 = 
	`QSåög
("ÈÄâÊã©ÊâßË°åÊìç‰Ωú!!!");

574 
QMesßgeBox
 
	`box
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

575 
box
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
 | QMesßgeBox::
C™˚l
);

576 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("ÂêàÈó∏")));

577 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("Êé•Âú∞")));

578 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
C™˚l
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

580  
box
.
	`exec
 () )

582 
QMesßgeBox
::
Yes
:

583 
bySëBªakSètus
 = 
BREAKER_CLOSE
;

584 
	`SëA˘i⁄
(
bySëBªakSètus
, 
byCurBªakSètus
);

586 
QMesßgeBox
::
No
:

587 
bySëBªakSètus
 = 
BREAKER_EARTH
;

588 
	`SëA˘i⁄
(
bySëBªakSètus
, 
byCurBªakSètus
);

590 
QMesßgeBox
::
C™˚l
:

598 
BREAKER_EARTH
:

599 
bySëBªakSètus
 = 
BREAKER_OPEN
;

600 
byCurBªakSètus
 = 
BREAKER_EARTH
;

601 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÊé•Âú∞ÂàÜÈó∏Êìç‰Ωú!!!");

606 
QMesßgeBox
 
	`box1
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

607 
box1
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
);

608 
box1
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("Á°ÆËÆ§")));

609 
box1
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

610  
box1
.
	`exec
() )

612 
QMesßgeBox
::
Yes
:

613 
	`SëA˘i⁄
(
bySëBªakSètus
, 
byCurBªakSètus
);

615 
QMesßgeBox
::
No
:

623 
	`TabÀShow
(
a˘i⁄
);

624 
	}
}

627 
	gCSwôch_3pos
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
, BYTE 
CurSètus
)

632 
BYTE
 
byYkSëSèã
 = 
FALSE
;

638 if–
	`AfxGëLogöSèã
(Ë=
CPage
::
LOGOUT
 )

640 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Â∞öÊú™ÁôªÂΩïÔºåËØ∑ÁôªÂΩïÂêéÊìç‰Ωú!!!"),QMesßgeBox::
Yes
 );

644  
A˘i⁄
 )

646 
BREAKER_OPEN
:

647 if–
CurSètus
 =
BREAKER_CLOSE
 )

648 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

649 if–
CurSètus
 =
BREAKER_EARTH
 )

650 
YkA˘i⁄Ty≥
 = 
YKEARTHACTIONOPEN
;

651 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_OPEN
 )

652 
byYkSëSèã
 = 
TRUE
;

654 
BREAKER_CLOSE
:

655 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

656 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

657 
byYkSëSèã
 = 
TRUE
;

659 
BREAKER_EARTH
:

660 
YkA˘i⁄Ty≥
 = 
YKEARTHACTIONCLOSE
;

661 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

662 
byYkSëSèã
 = 
TRUE
;

668 if–!
byYkSëSèã
 )

670 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ê≤°ÊúâÈÖçÁΩÆÂØπÂ∫îÊìç‰ΩúÈÅ•ÊéßÁÇπ"),QMesßgeBox::
Yes
 );

675 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
THREEPOS
,
YkD©a
[
YkA˘i⁄Ty≥
]);

677 
	}
}

679 
BOOL
 
	gCSwôch_3pos
::
	$IsCh™geCﬁ‹
( )

681 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

683 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

685 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

686 
m_wObje˘NodeNextSèã
 = 
m_byRightBŸtomPowî
;

688 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

690 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

691 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

694 if–
m_byO≥n
 =
BREAKER_OPEN
 )

696 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

697 
m_byLe·T›Powî
 = 
POWER_OFF
;

698 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

699 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

700 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

702  
TRUE
;

703 
	}
}

705 
BOOL
 
	gCSwôch_3pos
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

707 
m_byLe·T›Powî
 = 
POWER_OFF
;

708 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

709 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

711 
m_byLe·T›Powî
 = 
PowîSèã
;

712 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

714 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

715 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

717 if–
m_byO≥n
 =
BREAKER_OPEN
 )

718 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

720 
m_wObje˘NodeNext
 = 
m_wObje˘NodeR
;

722 if–
Ch™geNode
 =
m_wObje˘NodeR
 )

724 
m_byRightBŸtomPowî
 = 
PowîSèã
;

725 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

727 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

728 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

730 if–
m_byO≥n
 =
BREAKER_OPEN
 )

731 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

733 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

736  
FALSE
;

737  
TRUE
;

738 
	}
}

	@Element/cswitch_3pos.h

1 #i‚de‡
CSWITCH_3POS_H


2 
	#CSWITCH_3POS_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCSwôch_3pos
 : 
public
 
CEÀmít


8 
Q_OBJECT


9 
public
:

10 
CSwôch_3pos
();

12 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

13 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

14 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

15 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

16 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) ;

17 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

18 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

19 
Cª©eMíu
();

20 
InôMíu
();

21 
DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 );

22 
DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

23 
DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

24 
DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 );

25 
DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

26 
DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

27 
DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 );

28 
SëA˘i⁄
(
BYTE
 
A˘i⁄
, BYTE 
CurSètus
);

30 
BYTE
 
	mm_IsDúe˘i⁄
 ;

31 
BYTE
 
	mm_byLe·T›Powî
 ;

32 
BYTE
 
	mm_byRightBŸtomPowî
 ;

33 
BYTE
 
	mm_byO≥n
 ;

35 
public
 
	m¶Ÿs
:

36 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/cswitch_connect_earth.cpp

1 
	~"cswôch_c⁄√˘_óπh.h
"

3 
	gCSwôch_c⁄√˘_óπh
::
	$CSwôch_c⁄√˘_óπh
()

5 
m_wObje˘Ty≥
 = 
GENERATRIX
 ;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsDúe˘i⁄
 = 
VER_DRAW
 ;

8 
m_byLe·T›Powî
 = 
POWER_OFF
 ;

9 
m_byRightBŸtomPowî
 = 
POWER_OFF
 ;

10 
m_byO≥n
 = 
BREAKER_OPEN
 ;

12 
	`Cª©eMíu
();

13 
	}
}

15 
BOOL
 
	gCSwôch_c⁄√˘_óπh
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

17 if–!
pPaöãr
 )

19 
	`Q_ASSERT
–
FALSE
 );

20  
FALSE
 ;

23 
pPaöãr
->
	`ßve
();

25 if–
m_IsDúe˘i⁄
 =
VER_DRAW
 )

28 
	`DøwVîtiˇl
–
pPaöãr
 ) ;

33 
	`DøwH‹iz⁄èl
(
pPaöãr
);

35 
	`DøwIsChoi˚
(
pPaöãr
);

38 
pPaöãr
->
	`ª°‹e
();

39  
TRUE
 ;

40 
	}
}

42 
BOOL
 
	gCSwôch_c⁄√˘_óπh
::
	$InôD©a
( )

44 
m_IsDúe˘i⁄
 = 
m_wDúe˘
;

45 
	`InôMíu
();

46 
	`InôYkD©a
();

47  
TRUE
 ;

48 
	}
}

50 
BOOL
 
	gCSwôch_c⁄√˘_óπh
::
	$Cª©e
–
QRe˘
 
rc
 )

52 
m_rcDøw
 = 
rc
 ;

53  
TRUE
 ;

54 
	}
}

56 
	gCSwôch_c⁄√˘_óπh
::
	$Cª©eMíu
()

58 
m_Míu
 = 
√w
 
	`QMíu
(
	`AfxGëWidgë
());

59 
QA˘i⁄
 * 
YkSë_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

60 
QA˘i⁄
 * 
Yx_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•‰ø°Êï∞ÊçÆ"));

61 
m_YxTab
 = 
√w
 
	`QTabÀWidgë
();

62 
m_YxTab
->
	`£tWödowFœgs
((m_YxTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

63 
m_YxTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

64 
m_YxTab
->
	`£tFixedSize
(400,300);

65 
m_YxTab
->
	`move
(200,150);

66 
m_YxTab
->
	`£tCﬁumnCou¡
(3);

67 
m_YxTab
->
	`£tRowCou¡
(20);

68 
m_YxTab
->
	`£tCﬁumnWidth
(0,200);

69 
m_YxTab
->
	`£tCﬁumnWidth
(1,100);

70 
m_YxTab
->
	`£tCﬁumnWidth
(2,100);

71 
QSåögLi°
 
Yx_hódî
;

72 
Yx_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

73 
m_YxTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yx_hódî
);

75 
QA˘i⁄
 * 
Yc_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊµãÊï∞ÊçÆ"));

76 
m_YcTab
 = 
√w
 
	`QTabÀWidgë
();

77 
m_YcTab
->
	`£tWödowFœgs
((m_YcTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

78 
m_YcTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

79 
m_YcTab
->
	`£tFixedSize
(400,300);

80 
m_YcTab
->
	`move
(200,150);

81 
m_YcTab
->
	`£tCﬁumnCou¡
(3);

82 
m_YcTab
->
	`£tRowCou¡
(20);

83 
m_YcTab
->
	`£tCﬁumnWidth
(0,200);

84 
m_YcTab
->
	`£tCﬁumnWidth
(1,100);

85 
m_YcTab
->
	`£tCﬁumnWidth
(2,100);

86 
QSåögLi°
 
Yc_hódî
;

87 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑")<<UTF8("ÂÄº");

88 
m_YcTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

90 
QA˘i⁄
 * 
Yk_a˘i⁄
 = 
m_Míu
->
	`addA˘i⁄
(
	`UTF8
("ÈÅ•ÊéßÊï∞ÊçÆ"));

91 
m_YkTab
 = 
√w
 
	`QTabÀWidgë
();

92 
m_YkTab
->
	`£tWödowFœgs
((m_YkTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

93 
m_YkTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

94 
m_YkTab
->
	`£tFixedSize
(400,300);

95 
m_YkTab
->
	`move
(200,150);

96 
m_YkTab
->
	`£tCﬁumnCou¡
(2);

97 
m_YkTab
->
	`£tRowCou¡
(20);

98 
m_YkTab
->
	`£tCﬁumnWidth
(0,250);

99 
m_YkTab
->
	`£tCﬁumnWidth
(1,100);

100 
QSåögLi°
 
Yk_hódî
;

101 
Yk_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("ÁÇπÂè∑");

102 
m_YkTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yk_hódî
);

104 
	`c⁄√˘
(
m_Míu
, 
	`SIGNAL
(
	`åiggîed
(
QA˘i⁄
*)), 
this
, 
	`SLOT
(
	`¶Ÿs_QMíuA˘i⁄
(QAction*)));

105 
	}
}

107 
	gCSwôch_c⁄√˘_óπh
::
	$InôMíu
( )

109 
BusAddrP¡
[15] = "";

111 
m_YxTab
->
	`£tRowCou¡
(
Yx_EÀmítAâribuãAºay
.
	`size
());

112 
Yx_AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

114 
Yx_AâribuãD©aNo
 = 0;

115  
Yx_AâribuãD©aNo
 = 0; Yx_AâribuãD©aNÿ< 
Yx_AâribuãD©aSize
; Yx_AttributeDataNo++ )

117 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
Yx_AâribuãD©aNo
);

118  
tmpD©a
->
byD©aTy≥
 )

120 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

121 
tmpD©a
->
dbVÆ
 = 0;

122 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

123 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

124 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

125 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

126 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

127 
	`•rötf
(
BusAddrP¡
,"%u",(
BYTE
)
tmpD©a
->
dbVÆ
);

128 
m_YxTab
->
	`£tIãm
(
Yx_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

135 
m_YcTab
->
	`£tRowCou¡
(
Yc_EÀmítAâribuãAºay
.
	`size
());

136 
Yc_AâribuãD©aSize
 = 
Yc_EÀmítAâribuãAºay
.
	`size
();

138 
Yc_AâribuãD©aNo
 = 0;

139  
Yc_AâribuãD©aNo
 = 0; Yc_AâribuãD©aNÿ< 
Yc_AâribuãD©aSize
; Yc_AttributeDataNo++ )

141 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yc_EÀmítAâribuãAºay
.
	`©
(
Yc_AâribuãD©aNo
);

142  
tmpD©a
->
byD©aTy≥
 )

144 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YC_DTYPE
:

145 
tmpD©a
->
dbVÆ
 = 0;

146 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

147 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

148 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

149 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

150 
m_YcTab
->
	`£tIãm
(
Yc_AâribuãD©aNo
,2,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
dbVÆ
));

157 
m_YkTab
->
	`£tRowCou¡
(
Yk_EÀmítAâribuãAºay
.
	`size
());

158 
Yk_AâribuãD©aSize
 = 
Yk_EÀmítAâribuãAºay
.
	`size
();

160 
Yk_AâribuãD©aNo
 = 0;

161  
Yk_AâribuãD©aNo
 = 0; Yk_AâribuãD©aNÿ< 
Yk_AâribuãD©aSize
; Yk_AttributeDataNo++ )

163 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yk_EÀmítAâribuãAºay
.
	`©
(
Yk_AâribuãD©aNo
);

164  
tmpD©a
->
byD©aTy≥
 )

166 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YK_DTYPE
:

167 
tmpD©a
->
dbVÆ
 = 0;

168 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,0,
√w
 
	`QTabÀWidgëIãm
(
tmpD©a
->
«me
));

169 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

170 
	`•rötf
(
BusAddrP¡
,"P%d,%d,%d",
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
);

171 
m_YkTab
->
	`£tIãm
(
Yk_AâribuãD©aNo
,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

176 
	}
}

179 
	gCSwôch_c⁄√˘_óπh
::
	$DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 )

181 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

183 
	`Q_ASSERT
–
FALSE
 ) ;

187 if–
m_rcDøw
.
	`isEm±y
() )

190 
	`DøwVîtiˇlT›
–
pPaöãr
 ) ;

191 
	`DøwVîtiˇlBŸtom
–
pPaöãr
 ) ;

195 
	}
}

197 
	gCSwôch_c⁄√˘_óπh
::
	$DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 )

199 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

201 
	`Q_ASSERT
–
FALSE
 ) ;

205 if–
m_rcDøw
.
	`isEm±y
() )

208 
pPaöãr
->
	`ßve
();

210 
QPí
 
≥n
 ;

211 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

212 if–
m_byLe·T›Powî
 =
POWER_ON
 )

213 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

215 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

217 
pPaöãr
->
	`£tPí
–
≥n
 );

219 
QPaöãrP©h
 
BegöP©h
;

220 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
());

221 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/2,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

222 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

223 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/8,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/3);

224 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

225 
pPaöãr
->
	`ª°‹e
();

226 
	}
}

228 
	gCSwôch_c⁄√˘_óπh
::
	$DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

230 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

232 
	`Q_ASSERT
–
FALSE
 ) ;

236 if–
m_rcDøw
.
	`isEm±y
() )

239 
pPaöãr
->
	`ßve
();

241 
QPí
 
≥n
 ;

242 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

243 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

244 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

246 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

248 
pPaöãr
->
	`£tPí
–
≥n
 );

250 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

251 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

252 
WORD
 
cy
 = 
m_rcDøw
.
	`t›
();

253 
WORD
 
wXMoveTo
 = 0 ;

254 
WORD
 
wYMoveTo
 = 0 ;

255 
WORD
 
wXLöeTo
 = 0 ;

256 
WORD
 
wYLöeTo
 = 0 ;

258 if–
BREAKER_OPEN
 =
m_byO≥n
 )

260 
wXMoveTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 1 / 8 ;

261 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

262 
wXLöeTo
 = 
m_rcDøw
.
	`À·
(Ë+ 
wWidth
 * 4 / 8 ;

263 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

265 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

267 
wXMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
();

268 
wYMoveTo
 = 
cy
 + 
wHight
 / 3 ;

269 
wXLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`x
() ;

270 
wYLöeTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

273 
	`Q_ASSERT
–
FALSE
 ) ;

275 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

277 
wXMoveTo
 = 
wXLöeTo
 ;

278 
wYMoveTo
 = 
cy
 + 
wHight
 * 2 / 3 ;

279 
wXLöeTo
 = wXLineTo ;

280 
wYLöeTo
 = 
m_rcDøw
.
	`bŸtom
() ;

281 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

283 
wXMoveTo
 = wXMoveTo;

284 
wYMoveTo
 = wYMoveTo;

285 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4 ;

286 
wYLöeTo
 = 
wYMoveTo
;

287 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

289 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/4 ;

290 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*2/3 ;

291 
wXLöeTo
 = 
wXMoveTo
 ;

292 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

293 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

295 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/8;

296 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

297 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8;

298 
wYLöeTo
 = 
wYMoveTo
;

299 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

301 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/6;

302 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/6;

303 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3;

304 
wYLöeTo
 = 
wYMoveTo
 ;

305 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

307 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/24;

308 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*11/12;

309 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*7/24;

310 
wYLöeTo
 = 
wYMoveTo
;

311 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

313 
pPaöãr
->
	`ª°‹e
();

314 
	}
}

316 
	gCSwôch_c⁄√˘_óπh
::
	$DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 )

318 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

320 
	`Q_ASSERT
–
FALSE
 ) ;

324 if–
m_rcDøw
.
	`isEm±y
() )

328 
	`DøwH‹iz⁄èlT›
–
pPaöãr
 ) ;

329 
	`DøwH‹iz⁄èlBŸtom
–
pPaöãr
 ) ;

332 
	}
}

334 
	gCSwôch_c⁄√˘_óπh
::
	$DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 )

336 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

338 
	`Q_ASSERT
–
FALSE
 ) ;

342 if–
m_rcDøw
.
	`isEm±y
() )

345 
pPaöãr
->
	`ßve
();

347 
QPí
 
≥n
 ;

348 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

349 if–
m_byLe·T›Powî
 =
POWER_ON
 )

350 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

352 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

354 
pPaöãr
->
	`£tPí
–
≥n
 );

356 
QPaöãrP©h
 
BegöP©h
;

357 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

358 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()/2);

359 
BegöP©h
.
	`moveTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*5/8);

360 
BegöP©h
.
	`löeTo
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()/3,m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8);

361 
pPaöãr
->
	`døwP©h
(
BegöP©h
);

362 
pPaöãr
->
	`ª°‹e
();

363 
	}
}

365 
	gCSwôch_c⁄√˘_óπh
::
	$DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 )

367 if–!
pPaöãr
 || 
m_rcDøw
.
	`isNuŒ
() )

369 
	`Q_ASSERT
–
FALSE
 ) ;

373 if–
m_rcDøw
.
	`isEm±y
() )

376 
pPaöãr
->
	`ßve
();

378 
QPí
 
≥n
 ;

379 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

380 if–
m_byRightBŸtomPowî
 =
POWER_ON
 )

381 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

383 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 0 , 255 , 0 , 255 ) );

385 
pPaöãr
->
	`£tPí
–
≥n
 );

387 
WORD
 
wHight
 = 
m_rcDøw
.
	`height
();

388 
WORD
 
wWidth
 = 
m_rcDøw
.
	`width
() ;

389 
WORD
 
cy
 = 
m_rcDøw
.
	`À·
();

390 
WORD
 
wXMoveTo
 = 0 ;

391 
WORD
 
wYMoveTo
 = 0 ;

392 
WORD
 
wXLöeTo
 = 0 ;

393 
WORD
 
wYLöeTo
 = 0 ;

395 if–
BREAKER_OPEN
 =
m_byO≥n
 )

397 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

398 
wYMoveTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 7 / 8 ;

399 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3;

400 
wYLöeTo
 = 
m_rcDøw
.
	`t›
(Ë+ 
wHight
 * 4 / 8;

402 if–
BREAKER_CLOSE
 =
m_byO≥n
 )

404 
wXMoveTo
 = 
cy
 + 
wWidth
 / 3 ;

405 
wYMoveTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
();

406 
wXLöeTo
 = 
cy
 + 
wWidth
 * 2 / 3 ;

407 
wYLöeTo
 = 
m_rcDøw
.
	`˚¡î
().
	`y
() ;

410 
	`Q_ASSERT
–
FALSE
 ) ;

412 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

414 
wXMoveTo
 = 
wXLöeTo
 ;

415 
wYMoveTo
 = 
wYLöeTo
 ;

416 
wXLöeTo
 = 
m_rcDøw
.
	`right
() ;

417 
wYLöeTo
 = wYLineTo ;

418 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

420 
wXMoveTo
 = wXMoveTo;

421 
wYMoveTo
 = wYMoveTo;

422 
wXLöeTo
 = 
wXMoveTo
;

423 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

424 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

426 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*2/3;

427 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*3/4;

428 
wXLöeTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4;

429 
wYLöeTo
 = 
wYMoveTo
;

430 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

432 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/4;

433 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*7/8;

434 
wXLöeTo
 = 
wXMoveTo
;

435 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/8;

436 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

438 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*5/6;

439 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*5/6;

440 
wXLöeTo
 = 
wXMoveTo
;

441 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*2/3;

442 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

444 
wXMoveTo
 = 
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*11/12;

445 
wYMoveTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*19/24;

446 
wXLöeTo
 = 
wXMoveTo
;

447 
wYLöeTo
 = 
m_rcDøw
.
	`y
()+m_rcDøw.
	`height
()*17/24;

448 
pPaöãr
->
	`døwLöe
(
	`QPoöt
(
wXMoveTo
 , 
wYMoveTo
 ) , QPoöt–
wXLöeTo
 , 
wYLöeTo
 ) );

450 
pPaöãr
->
	`ª°‹e
();

451 
	}
}

453 
	gCSwôch_c⁄√˘_óπh
::
	$DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 )

455 if–
m_byIsChoi˚
 )

457 
pPaöãr
->
	`ßve
();

458 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

459 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

460 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

461 
pPaöãr
->
	`£tPí
–
≥n
 );

463 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

464 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

465 
brush
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 128 , 128 , 128 , 100 ) );

466 
pPaöãr
->
	`£tBrush
(
brush
);

467 
pPaöãr
->
	`døwRe˘
–
m_rcDøw
 );

468 
pPaöãr
->
	`ª°‹e
();

470 
	}
}

472 
BOOL
 
	gCSwôch_c⁄√˘_óπh
::
	$Com∑ªAâribuãD©a
( )

474 
AâribuãD©aSize
 = 
Yx_EÀmítAâribuãAºay
.
	`size
();

475 if–!
AâribuãD©aSize
 )

476  
FALSE
;

478 
AâribuãD©aNo
 = 0;

479  
AâribuãD©aNo
 = 0; AâribuãD©aNÿ< 
AâribuãD©aSize
; AttributeDataNo++ )

481 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpD©a
 = 
Yx_EÀmítAâribuãAºay
.
	`©
(
AâribuãD©aNo
);

482  
tmpD©a
->
byD©aTy≥
 )

484 
PIC_ATTRIBUTE_DATA_ELEMENT
::
YX_DTYPE
:

485 if–
tmpD©a
->
byAâribuãD©aByã
 == 1 )

487 
BYTE
 
byVÆ
 = 0;

488 
	`AfxGëYx
(
tmpD©a
->
wBusNo
,tmpD©a->
wAddr
,tmpD©a->
wP¡No
,
byVÆ
);

489 if–
tmpD©a
->
dbVÆ
 !
byVÆ
 )

491 if–
byVÆ
 == 1 )

492 
m_byO≥n
 = 
BREAKER_CLOSE
;

494 
m_byO≥n
 = 
BREAKER_OPEN
;

495 
tmpD©a
->
dbVÆ
 = 
byVÆ
;

496  
TRUE
;

505  
FALSE
;

506 
	}
}

508 
BOOL
 
	gCSwôch_c⁄√˘_óπh
::
	$Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 )

510 
m_byIsChoi˚
 = 
TRUE
;

511 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

512 
m_Míu
->
	`exec
(
pEvít
->
	`globÆPos
());

513 
m_byIsChoi˚
 = 
FALSE
;

514 
	`AfxGëWidgë
()->
	`upd©e
(
m_rcDøw
);

515  
TRUE
;

516 
	}
}

518 
	gCSwôch_c⁄√˘_óπh
::
	$¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
)

520 if–
a˘i⁄
 =
NULL
 )

522 if–
a˘i⁄
->
	`ãxt
(Ë=
	`UTF8
("ÈÅ•ÊéßÊâßË°å") )

524 
BYTE
 
bySëBªakSètus
 = -1;

526 
QSåög
 
°r
;

527  
m_byO≥n
 )

529 
BREAKER_CLOSE
:

530 
bySëBªakSètus
 = 
BREAKER_OPEN
;

531 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂàÜÈó∏Êìç‰Ωú!!!");

533 
BREAKER_OPEN
:

534 
bySëBªakSètus
 = 
BREAKER_CLOSE
;

535 
°r
 = 
	`QSåög
("ÊòØÂê¶ÊâßË°åÂêàÈó∏Êìç‰Ωú!!!");

540 
QMesßgeBox
 
	`box
(QMesßgeBox::
Que°i⁄
,"ËØ¢ÈóÆ",
°r
);

541 
box
.
	`£tSènd¨dBuâ⁄s
 (
QMesßgeBox
::
Yes
|QMesßgeBox::
No
);

542 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
Yes
,
	`QSåög
(
	`UTF8
("Á°ÆËÆ§")));

543 
box
.
	`£tBuâ⁄Text
 (
QMesßgeBox
::
No
,
	`QSåög
(
	`UTF8
("ÂèñÊ∂à")));

544  
box
.
	`exec
() )

546 
QMesßgeBox
::
Yes
:

547 
	`SëA˘i⁄
(
bySëBªakSètus
);

549 
QMesßgeBox
::
No
:

557 
	`TabÀShow
(
a˘i⁄
);

558 
	}
}

560 
	gCSwôch_c⁄√˘_óπh
::
	$SëA˘i⁄
(
BYTE
 
A˘i⁄
)

565 
BYTE
 
byYkSëSèã
 = 
FALSE
;

571 if–
	`AfxGëLogöSèã
(Ë=
CPage
::
LOGOUT
 )

573 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Â∞öÊú™ÁôªÂΩïÔºåËØ∑ÁôªÂΩïÂêéÊìç‰Ωú!!!"),QMesßgeBox::
Yes
 );

577  
A˘i⁄
 )

579 
BREAKER_OPEN
:

580 
YkA˘i⁄Ty≥
 = 
YKACTIONOPEN
;

581 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_OPEN
 )

582 
byYkSëSèã
 = 
TRUE
;

584 
BREAKER_CLOSE
:

585 
YkA˘i⁄Ty≥
 = 
YKACTIONCLOSE
;

586 if–
YkD©a
[
YkA˘i⁄Ty≥
].
byA˘i⁄
 =
YK_CLOSE
 )

587 
byYkSëSèã
 = 
TRUE
;

593 if–!
byYkSëSèã
 )

595 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ê≤°ÊúâÈÖçÁΩÆÂØπÂ∫îÊìç‰ΩúÈÅ•ÊéßÁÇπ"),QMesßgeBox::
Yes
 );

600 
	`AfxGëWidgë
()->
YkDlg
->
	`tShowP¨amëî
(
TWOPOS
,
YkD©a
[
YkA˘i⁄Ty≥
]);

602 
	}
}

604 
BOOL
 
	gCSwôch_c⁄√˘_óπh
::
	$IsCh™geCﬁ‹
( )

606 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

608 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

610 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

611 
m_wObje˘NodeNextSèã
 = 
m_byRightBŸtomPowî
;

613 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

615 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

616 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

619 if–
m_byO≥n
 =
BREAKER_OPEN
 )

621 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeL
 )

622 
m_byLe·T›Powî
 = 
POWER_OFF
;

623 if–
m_wObje˘NodeNext
 =
m_wObje˘NodeR
 )

624 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

625 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

627  
TRUE
;

628 
	}
}

630 
BOOL
 
	gCSwôch_c⁄√˘_óπh
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

632 
m_byLe·T›Powî
 = 
POWER_OFF
;

633 
m_byRightBŸtomPowî
 = 
POWER_OFF
;

634 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

636 
m_byLe·T›Powî
 = 
PowîSèã
;

637 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

639 
m_byRightBŸtomPowî
 = 
m_byLe·T›Powî
;

640 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

642 if–
m_byO≥n
 =
BREAKER_OPEN
 )

643 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

645 
m_wObje˘NodeNext
 = 
m_wObje˘NodeR
;

647 if–
Ch™geNode
 =
m_wObje˘NodeR
 )

649 
m_byRightBŸtomPowî
 = 
PowîSèã
;

650 if–
m_byO≥n
 =
BREAKER_CLOSE
 )

652 
m_byLe·T›Powî
 = 
m_byRightBŸtomPowî
;

653 
m_wObje˘NodeNextSèã
 = 
m_byLe·T›Powî
;

655 if–
m_byO≥n
 =
BREAKER_OPEN
 )

656 
m_wObje˘NodeNextSèã
 = 
POWER_OFF
;

658 
m_wObje˘NodeNext
 = 
m_wObje˘NodeL
;

661  
FALSE
;

662  
TRUE
;

663 
	}
}

	@Element/cswitch_connect_earth.h

1 #i‚de‡
CSWITCH_CONNECT_EARTH_H


2 
	#CSWITCH_CONNECT_EARTH_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCSwôch_c⁄√˘_óπh
 : 
public
 
CEÀmít


8 
Q_OBJECT


9 
public
:

10 
CSwôch_c⁄√˘_óπh
();

12 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

13 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

14 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

15 
vútuÆ
 
BOOL
 
Com∑ªAâribuãD©a
( );

16 
vútuÆ
 
BOOL
 
Pro˚ssMou£Down
–
QMou£Evít
 * 
pEvít
 ) ;

17 
vútuÆ
 
BOOL
 
IsCh™geCﬁ‹
( );

18 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

19 
Cª©eMíu
();

20 
InôMíu
();

21 
DøwVîtiˇl
–
QPaöãr
 *
pPaöãr
 );

22 
DøwVîtiˇlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

23 
DøwVîtiˇlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

24 
DøwH‹iz⁄èl
–
QPaöãr
 *
pPaöãr
 );

25 
DøwH‹iz⁄èlT›
–
QPaöãr
 * 
pPaöãr
 ) ;

26 
DøwH‹iz⁄èlBŸtom
–
QPaöãr
 * 
pPaöãr
 );

27 
DøwIsChoi˚
–
QPaöãr
 * 
pPaöãr
 );

28 
SëA˘i⁄
–
BYTE
 
A˘i⁄
 );

30 
BYTE
 
	mm_IsDúe˘i⁄
 ;

31 
BYTE
 
	mm_byLe·T›Powî
 ;

32 
BYTE
 
	mm_byRightBŸtomPowî
 ;

33 
BYTE
 
	mm_byO≥n
 ;

35 
public
 
	m¶Ÿs
:

36 
¶Ÿs_QMíuA˘i⁄
(
QA˘i⁄
 * 
a˘i⁄
);

	@Element/ctext_sign.cpp

1 
	~"˘ext_sign.h
"

3 
	gCText_sign
::
	$CText_sign
()

5 
m_wObje˘Ty≥
 = 
LINKER
;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
	}
}

11 
BOOL
 
	gCText_sign
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

13 if–!
pPaöãr
 )

15 
	`Q_ASSERT
–
FALSE
 );

16  
FALSE
 ;

19 
pPaöãr
->
	`ßve
();

21 if–
m_IsPowîOn
 =
POWER_ON
 )

22 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

24 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

26 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

27 
f⁄t
.
	`£tPixñSize
(12);

28 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

30 
pPaöãr
->
	`døwText
(
m_rcDøw
,
Qt
::
AlignVCíãr
,
m_ãxt
);

33 
pPaöãr
->
	`ª°‹e
();

34  
TRUE
 ;

35 
	}
}

37 
BOOL
 
	gCText_sign
::
	$InôD©a
( )

39  
FALSE
 ;

40 
	}
}

42 
BOOL
 
	gCText_sign
::
	$Cª©e
–
QRe˘
 
rc
 )

44 
m_rcDøw
 = 
rc
 ;

45  
TRUE
 ;

46 
	}
}

	@Element/ctext_sign.h

1 #i‚de‡
CTEXT_SIGN_H


2 
	#CTEXT_SIGN_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCText_sign
 : 
public
 
CEÀmít


8 
public
:

9 
CText_sign
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
BYTE
 
	mm_IsPowîOn
 ;

15 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Element/ctransformer.cpp

1 
	~"˘ønsf‹mî.h
"

3 
	gCTønsf‹mî
::
	$CTønsf‹mî
()

5 
m_wObje˘Ty≥
 = 
LINKER
;

6 
m_rcDøw
 = 
	`QRe˘
( 0 , 0 , 0 , 0 );

7 
m_IsPowîOn
 = 
POWER_OFF
 ;

8 
m_IsDúe˘i⁄
 = 
VER_DRAW
;

9 
	}
}

11 
BOOL
 
	gCTønsf‹mî
::
	$DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 )

13 if–!
pPaöãr
 )

15 
	`Q_ASSERT
–
FALSE
 );

16  
FALSE
 ;

19 
pPaöãr
->
	`ßve
();

21 if–
m_IsPowîOn
 =
POWER_ON
 )

22 
pPaöãr
->
	`£tPí
–
Qt
::
ªd
 );

24 
pPaöãr
->
	`£tPí
–
Qt
::
gªí
 );

26 if–
m_IsDúe˘i⁄
 =
HORZ_DRAW
 )

28 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
(),

29 
m_rcDøw
.
	`width
()*5/8,m_rcDøw.
	`height
());

30 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
()+m_rcDøw.
	`width
()*3/8,m_rcDøw.
	`y
(),

31 
m_rcDøw
.
	`width
()*5/8,m_rcDøw.
	`height
());

35 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
(),

36 
m_rcDøw
.
	`width
(),m_rcDøw.
	`height
()*5/8);

37 
pPaöãr
->
	`døwEŒù£
(
m_rcDøw
.
	`x
(),m_rcDøw.
	`y
()+m_rcDøw.
	`height
()*3/8,

38 
m_rcDøw
.
	`width
(),m_rcDøw.
	`height
()*5/8);

42 
pPaöãr
->
	`ª°‹e
();

43  
TRUE
 ;

44 
	}
}

46 
BOOL
 
	gCTønsf‹mî
::
	$InôD©a
( )

48  
FALSE
 ;

49 
	}
}

51 
BOOL
 
	gCTønsf‹mî
::
	$Cª©e
–
QRe˘
 
rc
 )

53 
m_rcDøw
 = 
rc
 ;

54  
TRUE
 ;

55 
	}
}

57 
BOOL
 
	gCTønsf‹mî
::
	$SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
)

59 if–
Ch™geNode
 =
m_wObje˘NodeL
 )

61 
m_IsPowîOn
 = 
PowîSèã
;

62  
TRUE
;

64  
FALSE
;

65 
	}
}

	@Element/ctransformer.h

1 #i‚de‡
CTRANSFORMER_H


2 
	#CTRANSFORMER_H


	)

4 
	~"˚ñmít.h
"

6 ˛as†
	cCTønsf‹mî
 : 
public
 
CEÀmít


8 
public
:

9 
CTønsf‹mî
();

11 
vútuÆ
 
BOOL
 
DøwEÀm¡
–
QPaöãr
 *
pPaöãr
 ) ;

12 
vútuÆ
 
BOOL
 
InôD©a
( ) ;

13 
vútuÆ
 
BOOL
 
Cª©e
–
QRe˘
 
rc
 ) ;

14 
vútuÆ
 
BOOL
 
SëCh™geNodeCﬁ‹
(
WORD
 
Ch™geNode
, 
BYTE
 
PowîSèã
);

15 
BYTE
 
	mm_IsPowîOn
 ;

16 
BYTE
 
	mm_IsDúe˘i⁄
 ;

	@Keyboard/keyboard.cpp

1 
	~"keybﬂrd.h
"

2 
	~"cglobÆ.h
"

3 
	~<QPaöãr
>

4 
	~<°rög.h
>

5 
	~<°dio.h
>

6 
	gKeybﬂrd
::
	$Keybﬂrd
(
QWidgë
 *
∑ª¡
) :

7 
	$QDülog
(
∑ª¡
)

9 
MoveSèã
 = 
FALSE
;

11 
Re£tPwdDlg
 = 
√w
 
	`¸e£çwddlg
();

12 
Sñe˘Re˘
 = 0xff;

13 
Mou£A˘i⁄
 = 
Rñó£Mou£
;

14 
RólSu≥rPwdLíth
 = 6;

15 
I≈utSu≥rPwdLíth
 = 0;

16 
	`mem£t
–
I≈utSu≥rPwd
 , 0 ,(InputSuperPwd) );

17 
	`mem£t
–
RólSu≥rPwd
 , 0 ,(RealSuperPwd) );

18 
RólSu≥rPwd
[ 0 ] = 10;

19 
RólSu≥rPwd
[ 1 ] = 10;

20 
RólSu≥rPwd
[ 2 ] = 10;

21 
RólSu≥rPwd
[ 3 ] = 11;

22 
RólSu≥rPwd
[ 4 ] = 11;

23 
RólSu≥rPwd
[ 5 ] = 11;

27 
	`£tWödowFœgs
(
Qt
::
WödowClo£Buâ⁄Höt
 | Qt::
WödowSèysOnT›Höt
 | Qt::
Wödow
);

29 
	`£tFixedSize
(210,350);

30 
	`move
(590,250);

32 
	`hide
();

34 
BYTE
 
vbox
=0,
hbox
=0;

35  
vbox
=0;vbox<5;vbox++ )

37 if–
vbox
 < 4 )

39  
hbox
=0;hbox<3;hbox++ )

41 
ª˘
[
hbox
+3*
vbox
].
	`£tRe˘
(
	`width
()/3*hbox,
	`height
()/5*vbox,width()/3,height()/5);

44 if–
vbox
 == 4 )

46 
ª˘
[3*
vbox
].
	`£tRe˘
(0,
	`height
()/5*vbox,
	`width
(),height()/5);

49 
	}
}

51 
	gKeybﬂrd
::
	$∑ötEvít
–
QPaötEvít
 * 
pEvít
 )

53 
QPaöãr
 
	`∑öãr
(
this
);

54 
BYTE
 
i
 = 0;

55 
ãmpbuf
[ 10 ] = "";

96 
∑öãr
.
	`£tBrush
(
	`QCﬁ‹
( 135,206,250,255 ));

97 
∑öãr
.
	`døwRe˘
(0,0,
	`width
(),
	`height
());

99  
i
=0;i<13;i++ )

101 
	`mem£t
(
ãmpbuf
,0,(tempbuf));

102  
i
 )

105 
	`•rötf
–
ãmpbuf
 , "%d" , 
i
-9 );

108 
	`•rötf
–
ãmpbuf
 , "%s" , "." );

111 
	`•rötf
–
ãmpbuf
 , "%s" , "Back" );

114 
	`•rötf
–
ãmpbuf
 , "%s" , "Clear" );

117 
	`•rötf
–
ãmpbuf
 , "%d" , 
i
+1 );

120 
∑öãr
.
	`døwRe˘
(
ª˘
[
i
]);

121 
∑öãr
.
	`døwText
(
ª˘
[
i
],
Qt
::
AlignCíãr
,
ãmpbuf
);

124 
	}
}

126 
	gKeybﬂrd
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

128 if(
pEvít
->
	`buâ⁄
(Ë=
Qt
::
Le·Buâ⁄
)

130 
BYTE
 
i
 = 0;

131  
i
=0;i<13;i++ )

133 
PªssX
 = 
pEvít
->
	`x
();

134 
PªssY
 = 
pEvít
->
	`y
();

135 
PªssGlobÆX
 = 
pEvít
->
	`globÆX
();

136 
PªssGlobÆY
 = 
pEvít
->
	`globÆY
();

137 if–
ª˘
[ 
i
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

139 
Sñe˘Re˘
 = 
i
;

140 
Mou£A˘i⁄
 = 
PªssMou£
;

142 
	`upd©e
();

146 
	}
}

148 
	gKeybﬂrd
::
	$mou£Rñó£Evít
(
QMou£Evít
 *
pEvít
 )

150 if(
pEvít
->
	`buâ⁄
(Ë=
Qt
::
Le·Buâ⁄
)

152 
MoveSèã
 = 
FALSE
;

153 
Mou£A˘i⁄
 = 
Rñó£Mou£
;

155 
	`upd©e
();

156 if–
	`abs
(
PªssGlobÆX
 - 
pEvít
->
	`globÆX
()Ë< 100 &&ábs(
PªssGlobÆY
 -ÖEvít->
	`globÆY
()) < 100 )

158 
QSåög
 
I≈utSå
 = 
KeyLöeEdô
->
	`ãxt
();

159 
QSåög
 
tmp°r
;

160  
Sñe˘Re˘
 )

163 
I≈utSå
 += '1';

166 
I≈utSå
 += '2';

169 
I≈utSå
 += '3';

172 
I≈utSå
 += '4';

175 
I≈utSå
 += '5';

178 
I≈utSå
 += '6';

181 
I≈utSå
 += '7';

184 
I≈utSå
 += '8';

187 
I≈utSå
 += '9';

190 
I≈utSå
 += '0';

193 
I≈utSå
 += '.';

196 
I≈utSå
.
	`ªmove
–I≈utSå.
	`Àngth
()-1,1 );

199 
I≈utSå
.
	`˛ór
();

205 
	`IsRe£tPwd
–
Sñe˘Re˘
 );

206 
KeyLöeEdô
->
	`£tText
(
I≈utSå
);

209 
	}
}

211 
	gKeybﬂrd
::
	$mou£MoveEvít
(
QMou£Evít
 *
pEvít
 )

213 if(
pEvít
->
	`buâ⁄s
(Ë& 
Qt
::
Le·Buâ⁄
)

215 if–
MoveSèã
 =
FALSE
 )

217 if–
	`abs
(
PªssGlobÆX
 - 
pEvít
->
	`globÆX
()Ë> 100 ||ábs(
PªssGlobÆY
 -ÖEvít->
	`globÆY
()) > 100 )

219 
MoveSèã
 = 
TRUE
;

220 
	`move
–
pEvít
->
	`globÆX
(Ë- 
PªssX
 ,ÖEvít->
	`globÆY
(Ë- 
PªssY
 );

221 
Sñe˘Re˘
 = 0xff;

222 
	`upd©e
();

228 
	`move
–
pEvít
->
	`globÆX
(Ë- 
PªssX
 ,ÖEvít->
	`globÆY
(Ë- 
PªssY
 );

229 
Sñe˘Re˘
 = 0xff;

230 
	`upd©e
();

233 
	}
}

235 
	gKeybﬂrd
::
	$˛o£Evít
(
QClo£Evít
 *
pEvít
)

237 
	`KeyBﬂrdhide
(
KeyLöeEdô
);

238 
	}
}

240 
	gKeybﬂrd
::
	$KeyBﬂrdShow
(
QLöeEdô
 *
tmpQlöeEdô
, 
BYTE
 
UsögZ⁄e
)

242 
	`move
(590,250);

243 
QDülog
::
	`show
();

245 
tmpQlöeEdô
->
	`£tFocus
();

246 
KeyLöeEdô
 = 
tmpQlöeEdô
;

247 if–
UsögZ⁄e
 =
SYSPARAMKEYBOARD
 )

249 
emô
 
	`show_sig«l
();

251 
	}
}

254 
	gKeybﬂrd
::
	$KeyBﬂrdhide
(
QLöeEdô
 *
tmpQlöeEdô
, 
BYTE
 
UsögZ⁄e
)

256 
QDülog
::
	`hide
();

258 
tmpQlöeEdô
->
	`˛órFocus
();

259 
KeyLöeEdô
 = 
NULL
;

260 if–
UsögZ⁄e
 =
SYSPARAMKEYBOARD
 )

261 
emô
 
	`hide_sig«l
();

262 
	}
}

264 
	gKeybﬂrd
::
	$IsRe£tPwd
–
BYTE
 
Su≥rByã
 )

266  
Su≥rByã
 )

269 
I≈utSu≥rPwd
[
I≈utSu≥rPwdLíth
++] = 
Su≥rByã
;

272 
I≈utSu≥rPwd
[
I≈utSu≥rPwdLíth
++] = 
Su≥rByã
;

275 
	`mem£t
–
I≈utSu≥rPwd
 , 0 , ( InputSuperPwd ) );

276 
I≈utSu≥rPwdLíth
 = 0;

279 if–
I≈utSu≥rPwdLíth
 <
RólSu≥rPwdLíth
 )

281 if–0 =
	`memcmp
–
RólSu≥rPwd
 , 
I≈utSu≥rPwd
 , 
I≈utSu≥rPwdLíth
))

283 if–
I≈utSu≥rPwdLíth
 =
RólSu≥rPwdLíth
 )

285 
Re£tPwdDlg
->
	`show
();

286 
	`mem£t
–
I≈utSu≥rPwd
 , 0 , ( InputSuperPwd ) );

287 
I≈utSu≥rPwdLíth
 = 0;

292 
	`mem£t
–
I≈utSu≥rPwd
 , 0 , ( InputSuperPwd ) );

293 
I≈utSu≥rPwdLíth
 = 0;

296 if–
I≈utSu≥rPwdLíth
 > 
RólSu≥rPwdLíth
 )

298 
	`mem£t
–
I≈utSu≥rPwd
 , 0 , ( InputSuperPwd ) );

299 
I≈utSu≥rPwdLíth
 = 0;

301 
	}
}

	@Keyboard/keyboard.h

1 #i‚de‡
KEYBOARD_H


2 
	#KEYBOARD_H


	)

3 
	~<QtGui/QtGui
>

4 
	~<QDülog
>

5 
	~<QMou£Evít
>

6 
	~<QImage
>

7 
	~<QKeyEvít
>

8 
	~"../Ty≥def.h
"

9 
	~"¸e£çwddlg.h
"

11 ˛as†
	cKeybﬂrd
 : 
public
 
QDülog


13 
Q_OBJECT


14 
public
:

15 
ex∂icô
 
Keybﬂrd
(
QWidgë
 *
∑ª¡
 = 0);

17 íum{
	mSYSPARAMKEYBOARD
,
	mLOGINDLGKEYBOARD
};

19 
∑ötEvít
–
QPaötEvít
 * 
pEvít
 );

20 
vútuÆ
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

21 
vútuÆ
 
mou£Rñó£Evít
(
QMou£Evít
 *
pEvít
 );

22 
vútuÆ
 
mou£MoveEvít
(
QMou£Evít
 *
pEvít
 );

23 
vútuÆ
 
˛o£Evít
(
QClo£Evít
 *
pEvít
);

24 
KeyBﬂrdShow
(
QLöeEdô
 * 
tmpQlöeEdô
 , 
BYTE
 
UsögZ⁄e
 = 
SYSPARAMKEYBOARD
);

25 
KeyBﬂrdhide
(
QLöeEdô
 * 
tmpQlöeEdô
 , 
BYTE
 
UsögZ⁄e
 = 
SYSPARAMKEYBOARD
);

27 
	g¥iv©e
:

28 
QRe˘
 
ª˘
[13];

29 
BYTE
 
	gSñe˘Re˘
 ;

30 
BYTE
 
	gMou£A˘i⁄
;

31 íum{ 
	gPªssMou£
=0x01,
	gRñó£Mou£
};

32 
QLöeEdô
 * 
	gKeyLöeEdô
;

33 
	gPªssX
;

34 
	gPªssY
;

35 
	gPªssGlobÆX
;

36 
	gPªssGlobÆY
;

37 
	gRólSu≥rPwd
[16];

38 
	gI≈utSu≥rPwd
[16];

39 
BYTE
 
	gRólSu≥rPwdLíth
;

40 
BYTE
 
	gI≈utSu≥rPwdLíth
;

41 
BOOL
 
	gMoveSèã
;

43 
¸e£çwddlg
 * 
	gRe£tPwdDlg
;

45 
IsRe£tPwd
–
BYTE
 
Su≥rByã
 );

48 
	gsig«ls
:

49 
show_sig«l
();

50 
hide_sig«l
();

52 
public
 
	g¶Ÿs
:

	@Pages/cpage.cpp

1 
	~"˝age.h
"

2 
	~"widgë.h
"

3 
	~<°rög.h
>

5 
	gCPage
::
	$CPage
–
BYTE
 
byTy≥
 )

7 
m_byPageTy≥
 = 
byTy≥
 ;

8 
m_byPªPageTy≥
 = 0;

9 
m_cxSize
 = 
Widgë
::
HOR_SIZE
 ;

10 
m_cySize
 = 
Widgë
::
VER_SIZE
 ;

11 
m_°rPic
 = "/usr/share/ePut800/Pics/";

12 
m_°rBackground
 = 
m_°rPic
;

13 
m_°rLogöP©h
 = 
m_°rPic
 ;

14 
m_rcLogöPic
 = 
	`QRe˘
( 646 ,558 , 25 ,26) ;

15 
m_rcLogöInfo
 = 
	`QRe˘
–
	`QPoöt
( 684 , 556 ) , QPoint( 794 , 589 )) ;

18 
m_rcNavig©i⁄
[ 0 ] = 
	`QRe˘
(
	`QPoöt
(533,21),QPoint(600 , 65)) ;

21 
m_rcNavig©i⁄
[ 1 ] = 
	`QRe˘
(
	`QPoöt
(616,21),QPoint(683 , 67)) ;

24 
m_rcNavig©i⁄
[ 2 ] = 
	`QRe˘
(
	`QPoöt
(700,21),QPoint(767 , 67));

27 
QRe˘
 
	`rc
–
m_rcLogöInfo
 ) ;

28 
m_rcNavig©i⁄
[ 3 ] = 
rc
.
	`unôed
(
m_rcLogöPic
 ) ;

29 
	}
}

31 
BOOL
 
	gCPage
::
	$DøwPage
–
QPaöãr
 * 
pPaöãr
 )

33 if–!
pPaöãr
 )

35 
	`Q_ASSERT
–
FALSE
 ) ;

36  
FALSE
 ;

40 
	`Pa°ePage
–
pPaöãr
 ) ;

43 if(
m_byPageTy≥
 == 18)

44 
	`Pa°eSysBackground
(
pPaöãr
);

51 if(
m_byPageTy≥
 =
Widgë
::
PAGE_HOME
 || m_byPageTy≥ =Widgë::
PAGE_SYS_PARA
)

52 
	`DøwLogö
(
pPaöãr
);

54 
	`DøwLogö
(
pPaöãr
);

57  
TRUE
 ;

58 
	}
}

60 
BOOL
 
	gCPage
::
	$DøwLogö
–
QPaöãr
 * 
pPaöãr
 )

62 if–!
pPaöãr
 )

64 
	`Q_ASSERT
–
FALSE
 ) ;

65  
FALSE
 ;

68 
BYTE
 
bSèã
 = 
	`AfxGëLogöSèã
( ) ;

69 
QSåög
 
	`°rP©h
–
m_°rLogöP©h
 ) ;

70 
QPoöt
 
	`±
( 646 ,558 ) ;

72 if–
bSèã
 =
LOGIN
 )

74 
°rP©h
 += "Login.jpg" ;

75 
	`Pa°eJPGFromP©h
–
pPaöãr
 , 
°rP©h
 , 
±
 ) ;

76 
	`DøwTimeOutTime
–
pPaöãr
 ) ;

78 if–
bSèã
 =
LOGOUT
 )

80 
°rP©h
 += "Logout.jpg" ;

81 
	`Pa°eJPGFromP©h
–
pPaöãr
 , 
°rP©h
 , 
±
 ) ;

82 
	`DøwText
–
pPaöãr
 , "Êú™ÁôªÂΩï" , 
m_rcLogöInfo
 );

86 
	`Q_ASSERT
–
FALSE
 ) ;

87  
FALSE
 ;

90  
TRUE
 ;

91 
	}
}

93 
	gCPage
::
	$DøwTimeOutTime
–
QPaöãr
 * 
∑öãr
 )

95 if–!
∑öãr
 )

97 
	`Q_ASSERT
–
FALSE
 );

101 
time_t
 
bEnd
 = 0 ;

102 
	`time
–&
bEnd
 ) ;

103 
time_t
 
bBegö
 = 
	`AfxGëGlobÆ
()->
	`GëCou¡downTime
() ;

104 if–!
bBegö
 )

110 
öã∫Æ
 = 
	`dif·ime
–
bEnd
, 
bBegö
 );

111 if–
öã∫Æ
 > 
CGlobÆ
::
ELAPSE_TIMEOUT
 + 10 )

113 
	`AfxGëGlobÆ
()->
	`SëCou¡downTime
–
bEnd
 );

114 
öã∫Æ
 = 0 ;

117 
iEœp£Time
 = 
CGlobÆ
::
ELAPSE_TIMEOUT
 - 
öã∫Æ
;

118 if–
iEœp£Time
 <= 0 )

119 
	`AfxSëLogöSèã
–
CPage
::
LOGOUT
 );

121 
∑öãr
->
	`ßve
();

123 
QSåög
 
°rTime
 ;

124 
°rTime
 = 
	`AfxF‹m©Så
–"%02d:%02d" , 
iEœp£Time
 / 60 , iElapseTime % 60 );

125 
∑öãr
->
	`£tPí
–
	`QCﬁ‹
( 255 , 0 , 0 ));

126 
WORD
 
wDwFœg
 = 
Qt
::
AlignLe·
 ;

127 
QF⁄t
 
f⁄t
 ;

128 
f⁄t
.
	`£tPixñSize
( 30 );

129 
f⁄t
.
	`£tBﬁd
–
TRUE
 );

130 
∑öãr
->
	`£tF⁄t
–
f⁄t
 );

131 
∑öãr
->
	`døwText
–
m_rcLogöInfo
 , 
wDwFœg
 , 
°rTime
 );

133 
∑öãr
->
	`ª°‹e
();

134 
	}
}

136 
	gCPage
::
	$DøwText
–
QPaöãr
 * 
pPaöãr
 , 
QSåög
 
°rText
 , 
QRe˘
 
rc
 )

138 if–
°rText
.
	`size
(Ë<0 || !
pPaöãr
 || 
rc
.
	`isEm±y
(Ë||Ñc.
	`isNuŒ
() )

141 
pPaöãr
->
	`ßve
();

142 
QF⁄t
 
f⁄t
 ;

143 
f⁄t
.
	`£tPixñSize
( 30 );

144 
f⁄t
.
	`£tBﬁd
–
TRUE
 );

145 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

146 
QPí
 
	`≥n
–
	`QCﬁ‹
( 255 , 255 , 255 , 255 ) );

147 
pPaöãr
->
	`£tPí
–
≥n
 );

149 
QRe˘
 
	`rcProj
–
rc
 ) ;

150 
pPaöãr
->
	`døwText
–
rcProj
 , 
Qt
::
AlignCíãr
 , 
°rText
 );

151 
pPaöãr
->
	`ª°‹e
();

152 
	}
}

154 
BOOL
 
	gCPage
::
	$Pa°eJPGFromP©h
–
QPaöãr
 * 
pPaöãr
 , 
QSåög
 
°rP©h
 , 
QPoöt
 
±
 )

156 if–!
pPaöãr
)

158 
	`Q_ASSERT
–
FALSE
 );

159  
FALSE
 ;

162 
size
 = 
°rP©h
.
	`size
() ;

163 if–
size
 <= 0 )

165 
	`Q_ASSERT
–
FALSE
 ) ;

166  
FALSE
 ;

169 
QPixm≠
 
pix
;

172 
boﬁ
 
bFœg
 = 
pix
.
	`lﬂd
–
°rP©h
 );

173 if–
bFœg
 =
Ál£
 )

175 
	`Q_ASSERT
–
FALSE
 );

176  
FALSE
 ;

179 
pPaöãr
->
	`døwPixm≠
–
±
 , 
pix
 );

180 
pix
.
	`dëach
();

182  
TRUE
 ;

183 
	}
}

185 
BOOL
 
	gCPage
::
	$Pa°ePage
–
QPaöãr
 * 
pPaöãr
 )

187 if–!
pPaöãr
 )

189 
	`Q_ASSERT
–
FALSE
 ) ;

190  
FALSE
 ;

193 
iWidth
 = 
m_cxSize
 ;

194 
iHeight
 = 
m_cySize
;

200 
boﬁ
 
bFœg
;

201 if(
m_byPªPageTy≥
 !
m_byPageTy≥
){

203 
m_byPªPageTy≥
 = 
m_byPageTy≥
;

204 
bFœg
 = 
pix
.
	`lﬂd
–
m_°rPic
 );

207 
QPixm≠
 
pix
;

208 
boﬁ
 
bFœg
 = 
pix
.
	`lﬂd
–
m_°rPic
 );

211 if–
bFœg
 =
Ál£
 )

213 
	`Q_ASSERT
–
FALSE
 );

214  
FALSE
 ;

217 
pPaöãr
->
	`døwPixm≠
(0,0,
iWidth
,
iHeight
,
pix
 );

218 
pix
.
	`dëach
();

220  
TRUE
 ;

221 
	}
}

224 
BOOL
 
	gCPage
::
	$Pa°eSysBackground
–
QPaöãr
 * 
pPaöãr
 )

226 if–!
pPaöãr
 )

228 
	`Q_ASSERT
–
FALSE
 ) ;

229  
FALSE
 ;

235 
QPixm≠
 
pix
;

237 
BYTE
 
cur_∑ge
 = 
	`GëCurPage
();

238 
QSåög
 
°r
 = 
m_°rBackground
.
	`ö£π
(28, 
cur_∑ge
 + "0");

239 
	`¥ötf
("%†%d cur_∑gê%d\n", 
__func__
, 
__LINE__
, 
cur_∑ge
);

240 
	`qDebug
(
m_°rBackground
.
	`toAscii
().
	`d©a
());

241 
	`qDebug
(
°r
.
	`toAscii
().
	`d©a
());

242 
boﬁ
 
bFœg
 = 
pix
.
	`lﬂd
(
°r
);

244 
boﬁ
 
bFœg
 = 
pix
.
	`lﬂd
–
m_°rBackground
 );

246 if–
bFœg
 =
Ál£
 )

248 
	`Q_ASSERT
–
FALSE
 );

249  
FALSE
 ;

253 
pPaöãr
->
	`døwPixm≠
(0, 67, 800, 490, 
pix
);

254 
pix
.
	`dëach
();

256  
TRUE
 ;

257 
	}
}

261 
BYTE
 
	gCPage
::
	$GëNavig©i⁄Fœg
–
QPoöt
 
±
 )

263 
BYTE
 
bySize
 = –
m_rcNavig©i⁄
 ) / ( m_rcNavigation[ 0 ] ) ;

264  
BYTE
 
i
 = 0 ; i < 
bySize
 ; i++ )

266 if–
m_rcNavig©i⁄
[ 
i
 ].
	`c⁄èös
–
±
 ) )

268 if–
i
 == 0 )

269  
PAGEUP
 ;

270 if–
i
 == 1 )

271  
PAGEDOWN
 ;

272 if–
i
 == 2 )

273  
BACK
 ;

274 if–
i
 == 3 )

275  
PAGE_LOGINOUT
 ;

278 
	`Q_ASSERT
–
FALSE
 ) ;

279  
PAGE_NULL
;

284  
PAGE_NULL
 ;

285 
	}
}

287 
BOOL
 
	gCPage
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

290 
	`AfxUpd©eTimeoutTime
( );

292 if–!
pEvít
 )

294 
	`Q_ASSERT
–
FALSE
 );

295  
FALSE
;

298 
QPoöt
 
	`±
–
pEvít
->
	`pos
() ) ;

299 
BYTE
 
byVÆ
 = 
	`GëNavig©i⁄Fœg
–
±
 );

300 if–
CPage
::
PAGE_NULL
 !
byVÆ
 )

302 if–
	`¥o˚ssNavig©i⁄Sèã
–
byVÆ
 ) )

303  
TRUE
 ;

305  
FALSE
 ;

308  
FALSE
 ;

309 
	}
}

311 
	gCPage
::
	$Pro˚ssLogö
( )

313 
Widgë
 * 
TempWidgë
 = 
	`AfxGëWidgë
();

314 
TempWidgë
->
LogöDlg
->
	`show
();

315 
	}
}

317 
BOOL
 
	gCPage
::
	$¥o˚ssNavig©i⁄Sèã
–
BYTE
 
byVÆ
 )

319 if–
byVÆ
 !
CPage
::
PAGEDOWN
 &&

320 
byVÆ
 !
CPage
::
PAGEUP
 &&

321 
byVÆ
 !
CPage
::
BACK
 &&

322 
byVÆ
 !
CPage
::
PAGE_LOGINOUT
 )

324 
	`Q_ASSERT
–
FALSE
 ) ;

325  
FALSE
 ;

327  
byVÆ
 )

329 
CPage
::
PAGEDOWN
:

330 
	`Pro˚ssPageDown
( );

332 
CPage
::
PAGEUP
:

333 
	`Pro˚ssPageUp
( ) ;

335 
CPage
::
BACK
:

336 
	`AfxSëCurPageIndex
–
Widgë
::
PAGE_HOME
 );

338 
CPage
::
PAGE_LOGINOUT
:

341 if(
m_byPageTy≥
 =
Widgë
::
PAGE_HOME
 || m_byPageTy≥ =Widgë::
PAGE_SYS_PARA
)

342 
	`Pro˚ssLogö
();

344 
	`Pro˚ssLogö
();

350 
	`Q_ASSERT
–
FALSE
 ) ;

351  
FALSE
 ;

355  
TRUE
 ;

356 
	}
}

	@Pages/cpage.h

1 #i‚de‡
CPAGE_H


2 
	#CPAGE_H


	)

3 
	~<QPaöãr
>

4 
	~"../Ty≥def.h
"

5 
	~<QMou£Evít
>

6 
	~"cglobÆ.h
"

7 
	~<QObje˘
>

9 ˛as†
	cCPage
 : 
public
 
QObje˘


11 
Q_OBJECT


12 
public
:

13 
CPage
–
BYTE
 
byTy≥
 );

14 
	mvútuÆ
 ~
	$CPage
(){  ; }

15 
vútuÆ
 
BOOL
 
	$AddD©a
–
LPVOID
 
pVoid
 ) {  
FALSE
 ;
	}
}

16 
vútuÆ
 
BOOL
 
DøwPage
–
QPaöãr
 * 
pPaöãr
 );

17 
vútuÆ
 
BOOL
 
mou£PªssEvít
(
QMou£Evít
 * 
pEvít
);

18 
vútuÆ
 
BOOL
 
¥o˚ssNavig©i⁄Sèã
–
BYTE
 
byVÆ
 ) ;

19 
vútuÆ
 
BOOL
 
	$Pro˚ssPageDown
–){  
FALSE
 ;
	}
}

20 
vútuÆ
 
BOOL
 
	$Pro˚ssPageUp
–){  
TRUE
 ;
	}
}

23 
BYTE
 
GëCurPage
();

27 íum{ 
	gPAGEUP
 = 0x21 , 
	gPAGEDOWN
 , 
	gBACK
 , 
	gPAGE_LOGINOUT
 , 
	gPAGE_NULL
 };

28 íum{ 
	gLOGIN
 = 0x31 , 
	gLOGOUT
 } ;

30 
Pro˚ssLogö
( );

31 
DøwText
–
QPaöãr
 * 
pPaöãr
 , 
QSåög
 
°rText
 , 
QRe˘
 
rc
 );

32 
BYTE
 
GëNavig©i⁄Fœg
–
QPoöt
 
±
 );

33 
BOOL
 
Pa°eJPGFromP©h
–
QPaöãr
 * 
pPaöãr
 , 
QSåög
 
°rP©h
 , 
QPoöt
 
±
 );

34 
BOOL
 
DøwLogö
–
QPaöãr
 * 
pPaöãr
 );

35 
BOOL
 
Pa°ePage
–
QPaöãr
 * 
pPaöãr
 ) ;

37 
BOOL
 
Pa°eSysBackground
–
QPaöãr
 * 
pPaöãr
 ) ;

38 
BYTE
 
	gm_CurPage
;

39 
QPixm≠
 
	gpix
;

41 
DøwTimeOutTime
–
QPaöãr
 * 
pPaöãr
 );

43 
QRe˘
 
	gm_rcLogöInfo
 ;

44 
QRe˘
 
	gm_rcLogöPic
 ;

45 
BYTE
 
	gm_byPageTy≥
 ;

46 
	gm_cxSize
 ;

47 
	gm_cySize
 ;

48 
QSåög
 
	gm_°rPic
 ;

50 
BYTE
 
	gm_byPªPageTy≥
 ;

51 
QSåög
 
	gm_°rBackground
;

54 
QSåög
 
	gm_°rLogöP©h
;

55 
QRe˘
 
	gm_rcNavig©i⁄
[ 4 ] ;

	@Pages/cpage_dataquery.cpp

1 
	~"˝age_d©aquîy.h
"

2 
	~<QMesßgeBox
>

3 
	~<°dio.h
>

4 
	~<°rög.h
>

5 
	~<QDebug
>

7 
BOOL
 
	gLOG
 = 1;

8 
BOOL
 
	gPRINT
 = 1;

15 
	$¥öt
–*
buf
)

17 if–
PRINT
 )

19 
	`¥ötf
("%s\n", 
buf
);

22 if–
LOG
 )

26 
	}
}

29 
	gCPage_D©aQuîy
::
	$CPage_D©aQuîy
(
BYTE
 
byTy≥
 ):
	$CPage
–
byTy≥
 )

32 
m_°rPicS€N⁄eSñe˘
 = "";

33 
m_°rPicS€N⁄eSñe˘
 = "";

35 
m_°rPicRólTimeSñe˘
 = "";

36 
m_°rPicRólTimeN⁄eSñe˘
 = "";

38 
m_°rPicYxAœrmSñe˘
 = "";

39 
m_°rPicYxAœrmN⁄eSñe˘
 = "";

50 
m_ve˘‹CaböëTabÀ
.
	`˛ór
();

56 
m_åìRólTimeD©a
 = 
NULL
;

57 
m_pModñ
 = 
NULL
;

59 
m_toﬁBoxS€
 = 
NULL
;

60 
m_widgëS€Bytime
 = 
NULL
;

61 
m_dülogTimeBegö
 = 
NULL
;

62 
m_dtBegö
 = 
NULL
;

63 
m_dülogTimeEnd
 = 
NULL
;

64 
m_dtEnd
 = 
NULL
;

65 
m_dtOk
 = 
NULL
;

66 
m_widgëS€ByBusLöe
 = 
NULL
;

67 
m_œbñBusLöe
 = 
NULL
;

68 
m_boxBusLöe
 = 
NULL
;

69 
m_œbñAddr
 = 
NULL
;

70 
m_boxAddr
 = 
NULL
;

71 
m_œbñPoöt
 = 
NULL
;

72 
m_boxPoöt
 = 
NULL
;

74 
m_°rTùs
 = 
	`QSåög
( "" );

75 
m_dwCuºítPage
 = 0;

76 
m_dwTŸÆPage
 = 0;

77 
m_dwS€CuºítPage
 = 0;

78 
m_dwS€TŸÆPage
 = 0;

79 
m_byCuºítQuîyTy≥
 = 0;

81 
	`SëQuîyTy≥
(
DATAQUERY_REALDATA
);

84 
m_bSñe˘AŒS€
 = 
TRUE
;

85 
m_buâ⁄TimeBegö
 = 
NULL
;

86 
m_edôBegöYór
 = 
NULL
;

87 
m_œbñBegöYór
 = 
NULL
;

88 
m_edôBegöM⁄th
 = 
NULL
;

89 
m_œbñBegöM⁄th
 = 
NULL
;

90 
m_edôBegöDay
 = 
NULL
;

91 
m_œbñBegöDay
 = 
NULL
;

92 
m_edôBegöHour
 = 
NULL
;

93 
m_œbñBegöHour
 = 
NULL
;

94 
m_edôBegöMöuã
 = 
NULL
;

95 
m_œbñBegöMöuã
 = 
NULL
;

96 
m_edôBegöSec⁄d
 = 
NULL
;

97 
m_œbñBegöSec⁄d
 = 
NULL
;

98 
m_buâ⁄TimeEnd
 = 
NULL
;

99 
m_edôEndYór
 = 
NULL
;

100 
m_œbñEndYór
 = 
NULL
;

101 
m_edôEndM⁄th
 = 
NULL
;

102 
m_œbñEndM⁄th
 = 
NULL
;

103 
m_edôEndDay
 = 
NULL
;

104 
m_œbñEndDay
 = 
NULL
;

105 
m_edôEndHour
 = 
NULL
;

106 
m_œbñEndHour
 = 
NULL
;

107 
m_edôEndMöuã
 = 
NULL
;

108 
m_œbñEndMöuã
 = 
NULL
;

109 
m_edôEndSec⁄d
 = 
NULL
;

110 
m_œbñEndSec⁄d
 = 
NULL
;

111 
m_BusLöeOk
 = 
NULL
;

114 
	}
}

116 
	gCPage_D©aQuîy
::~
	$CPage_D©aQuîy
()

118 
	`DñëeUi
();

119 
	}
}

122 
BOOL
 
	gCPage_D©aQuîy
::
	$AddD©a
–
LPVOID
 
pVoid
 )

124 i‡(
NULL
 =
pVoid
)

129 
	`InôUi
( );

130  
TRUE
 ;

131 
	}
}

133 
BOOL
 
	gCPage_D©aQuîy
::
	$DøwPage
–
QPaöãr
 * 
pPaöãr
 )

135 
CPage
::
	`DøwPage
–
pPaöãr
 ) ;

137 
	`DøwTùs
(
pPaöãr
);

139 
	`DøwPages
(
pPaöãr
 );

140 
	`DøwD©a
(
pPaöãr
);

143 
	`DøwQuîyTy≥Pics
(
pPaöãr
);

144 
	`ShowQuîyTy≥Ui
();

147  
TRUE
;

148 
	}
}

153 
BOOL
 
	gCPage_D©aQuîy
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

155 
QPoöt
 
	`±
(
pEvít
->
	`pos
());

158 
	`AfxUpd©eTimeoutTime
();

160 
BYTE
 
ty≥
 = 
	`GëFuncAªaTy≥
(
±
);

161 
ty≥
)

163 
PAGEUP
:

165 
	`PageUp
();

169 
PAGEDOWN
:

171 
	`PageDown
();

175 
BACKHOME
:

178 
	`HideQuîyTy≥Ui
();

179 
m_bSñe˘AŒS€
 = 
TRUE
;

180 
	`AfxSëCurPageIndex
–
Widgë
::
PAGE_HOME
 );

184 
QUERYSOE
:

186 
	`SëQuîyTy≥
(
DATAQUERY_SOE
);

190 
QUERYREALDATA
:

192 
	`SëQuîyTy≥
(
DATAQUERY_REALDATA
);

198 
LOGIN
:

200 
Widgë
 * 
TempWidgë
 = 
	`AfxGëWidgë
();

201 
TempWidgë
->
LogöDlg
->
	`show
();

206 
QUERYYXALARM
:

208 
	`SëQuîyTy≥
(
DATAQUERY_YXALARM
);

222 
	`AfxRe‰eshS¸ìn
( );

223  
TRUE
 ;

224 
	}
}

233 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUi
()

235 
m_°rTùs
 = "";

238 i‡–!
	`InôUiPics
() )

240 
	`¥öt
( (*)"InitUiPicsÉrror" );

241  
FALSE
;

245 i‡–!
	`InôUiPosôi⁄
() )

247 
	`¥öt
( (*)"InitUiPositionÉrror" );

248  
FALSE
;

252 i‡–!
	`InôD©aTabÀ
() )

254 
	`¥öt
( (*)"InitUiDataTableÉrror" );

259 if–!
	`InôUiTªeVõw
() )

261 
	`¥öt
( (*)"InitUiTreeViewÉrror" );

262  
FALSE
;

266 if–!
	`InôUiS€ToﬁBox
())

268 
	`¥öt
( (*)"InitUiSoeToolBoxÉrror" );

269  
FALSE
;

273 
	`¥öt
( (*)"InitUi ok" );

274  
TRUE
;

275 
	}
}

284 
	gCPage_D©aQuîy
::
	$DñëeUi
()

287 
	`DñëeUiS€ToﬁBox
();

290 
	`DñëeUiTªeVõw
();

293 
	`DñëeD©aTabÀ
();

295 
	`¥öt
( (*) "DeleteUi Ok");

297 
	}
}

307 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUiPics
()

310 
m_°rPic
 = "/usr/share/ePut800/Pics/ePut800-DataQuery.jpg";

313 
m_°rPicS€Sñe˘
 = "/usr/share/ePut800/Pics/ePut800-DataQuery-SOE-Select.jpg";

314 
m_°rPicS€N⁄eSñe˘
 = "/usr/share/ePut800/Pics/ePut800-DataQuery-SOE-NoneSelect.jpg";

317 
m_°rPicRólTimeSñe˘
 = "/usr/share/ePut800/Pics/ePut800-DataQuery-RealTimeData-Select.jpg";

318 
m_°rPicRólTimeN⁄eSñe˘
 = "/usr/share/ePut800/Pics/ePut800-DataQuery-RealTimeData-NoneSelect.jpg";

321 
m_°rPicYxAœrmSñe˘
 = "/usr/share/ePut800/Pics/ePut800-DataQuery-YxAlarm-Select.jpg";

322 
m_°rPicYxAœrmN⁄eSñe˘
 = "/usr/share/ePut800/Pics/ePut800-DataQuery-YxAlarm-NoneSelect.jpg";

324 
	`¥öt
( (*)"InitUiPics ok" );

325  
TRUE
;

326 
	}
}

335 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUiPosôi⁄
()

337 
m_rcToﬁTùs
 = 
	`QRe˘
( 150, 27, 200, 32 );

338 
m_rcPageInfo
 = 
	`QRe˘
( 380, 27, 140, 32 );

340 
m_rcFun˘i⁄
[
PAGEDOWN
] = 
	`QRe˘
( 532, 23, 68, 48 );

341 
m_rcFun˘i⁄
[
PAGEUP
] = 
	`QRe˘
(615, 23, 68, 48 );

342 
m_rcFun˘i⁄
[
BACKHOME
] = 
	`QRe˘
( 698, 23, 68, 48 );

343 
m_rcFun˘i⁄
[
QUERYREALDATA
] = 
	`QRe˘
(34 , 88, 100, 38);

344 
m_rcFun˘i⁄
[
LOGIN
] = 
	`QRe˘
( 646 ,558 , 154 ,42);

347 
m_rcFun˘i⁄
[
QUERYYXALARM
] = 
	`QRe˘
( 150, 88, 100, 38);

348 
m_rcFun˘i⁄
[
QUERYSOE
] = 
	`QRe˘
( 265, 88, 100, 38);

350 
m_rcFun˘i⁄
[
QUERYSOE
] = 
	`QRe˘
( 150, 88, 100, 38);

351 
m_rcFun˘i⁄
[
QUERYYXALARM
] = 
	`QRe˘
( 265, 88, 100, 38);

355 
m_rcD©aDü∂ay
[0][0] = 
	`QRe˘
(145, 137, 64, 29) ;

357 
m_rcD©aDü∂ay
[0][1] = 
	`QRe˘
(209, 137, 339, 29) ;

359 
m_rcD©aDü∂ay
[0][2] = 
	`QRe˘
(546, 137, 150, 29) ;

361 
m_rcD©aDü∂ay
[0][3] = 
	`QRe˘
(696, 137, 70, 29) ;

362 
i
 = 1; i < 15; i++)

365 
m_rcD©aDü∂ay
[
i
][0] = 
	`QRe˘
(145, 140 + i * 25, 64, 25 ) ;

367 
m_rcD©aDü∂ay
[
i
][1] = 
	`QRe˘
(209, 140 + i * 25, 339, 25 ) ;

369 
m_rcD©aDü∂ay
[
i
][2] = 
	`QRe˘
(546, 140 + i * 25, 150, 25 ) ;

371 
m_rcD©aDü∂ay
[
i
][3] = 
	`QRe˘
(696, 140 + i * 25, 70, 25 ) ;

374 
	`¥öt
( (*)"InitUiPosition ok" );

375  
TRUE
;

377 
	}
}

386 
BOOL
 
	gCPage_D©aQuîy
::
	$InôD©aTabÀ
()

388 if–!
	`InôCaböëTabÀ
( ) )

390 
	`¥öt
( (*)"InitUiDataTableÉrror" );

391  
FALSE
;

394 
	`¥öt
( (*)"InitUiDataTable ok" );

395  
TRUE
;

398 
	}
}

407 
	gCPage_D©aQuîy
::
	$DñëeD©aTabÀ
()

409 
iCaböëNum
 = 
m_ve˘‹CaböëTabÀ
.
	`size
();

411 
i
=
iCaböëNum
-1; i>=0; i--)

414 
j
=
m_ve˘‹CaböëTabÀ
[
i
].
∑gíum
-1; j>=0; j--)

417 
m_ve˘‹CaböëTabÀ
[
i
].
∑ge
[
j
].
d©a
.
	`˛ór
();

420 
m_ve˘‹CaböëTabÀ
[
i
].
∑ge
.
	`˛ór
();

423 
k
=
m_ve˘‹CaböëTabÀ
[
i
].
cúcuônum
-1; k>=0; k--)

426 
kk
=
m_ve˘‹CaböëTabÀ
[
i
].
cúcuô
[
k
].
∑gíum
-1; kk >=0; kk--)

429 
m_ve˘‹CaböëTabÀ
[
i
].
cúcuô
[
k
].
∑ge
[
kk
].
d©a
.
	`˛ór
();

433 
m_ve˘‹CaböëTabÀ
[
i
].
cúcuô
[
k
].
∑ge
.
	`˛ór
();

435 
m_ve˘‹CaböëTabÀ
[
i
].
cúcuô
.
	`˛ór
();

439 
m_ve˘‹CaböëTabÀ
.
	`˛ór
();

441 
	`¥öt
( (*)"DeleteUiDataTable ok" );

443 
	}
}

453 
BOOL
 
	gCPage_D©aQuîy
::
	$InôCaböëTabÀ
()

456 c⁄° 
QCAB_ARRAY
 &
ˇböeAºay
 = 
	`AfxGëCaböëAºay
();

458 
iCaböëNum
 = 
ˇböeAºay
.
	`size
();

460 if–0 >
iCaböëNum
 )

462 
buf
[128];

464 
	`•rötf
(
buf
, "InôCaböëTabÀ föd iCaböëNum=%d\n", 
iCaböëNum
);

465 
	`¥öt
–
buf
 );

467  
FALSE
;

471 
i
=0; i<
iCaböëNum
; i++)

473 
PCABINET
 
pCaböë
 = 
	`AfxGëCaböë
–
i
 );

474 i‡(
NULL
 =
pCaböë
 )

476 
buf
[128];

478 
	`•rötf
(
buf
, "InôCaböëTabÀ föd caböë%d NULL \n", 
i
);

479 
	`¥öt
–
buf
 );

481  
FALSE
;

484 
QUERY_REALTIME_CABINET
 
ˇböëèbÀ
;

487 
ˇböëèbÀ
.
ödex
 = 
pCaböë
->
wSîülNo
;

489 
	`°r˝y
–
ˇböëèbÀ
.
«me
, 
pCaböë
->
sName
);

492 i‡(!
	`InôPageTabÀ
(
pCaböë
, &
ˇböëèbÀ
, 
NULL
, 1))

494 
	`¥öt
((*)"InitPageTableÉrror");

495  
FALSE
;

500 if–!
	`InôCúcuôTabÀ
–
pCaböë
, &
ˇböëèbÀ
))

502 
	`¥öt
((*)"InitCircuitTableÉrror");

503  
FALSE
;

506 
m_ve˘‹CaböëTabÀ
.
	`push_back
–
ˇböëèbÀ
 );

509 
	`¥öt
( (*)"InitCabinetTable ok" );

510  
TRUE
;

511 
	}
}

521 
BOOL
 
	gCPage_D©aQuîy
::
	$InôCúcuôTabÀ
–
PCABINET
 
pCaböë
,

522 
QUERY_REALTIME_CABINET
 *
pˇböëabÀ
)

524 
iCúcuôNum
 = 
pCaböë
->
cúcuôAºay
.
	`size
();

527 
pˇböëabÀ
->
cúcuônum
 = 
iCúcuôNum
;

529 
QSCIRCUIT_MAP_ITOR
 
ôî
;

544 
ôî
 = 
pCaböë
->
cúcuôAºay
.
	`begö
(); iã∏!pCaböë->cúcuôAºay.
	`íd
(); iter++)

548 
PSINGLECIRCUIT
 
pCúcuô
 = 
ôî
.
	`vÆue
();

549 
QUERY_REALTIME_CIRCUIT
 
cúcuôtbÆe
;

551 i‡–
NULL
 =
pCúcuô
 )

553 
buf
[128];

555 
	`•rötf
(
buf
, "InitCircuitTable:: ");

556 
	`¥öt
–
buf
 );

558  
FALSE
;

561 
cúcuôtbÆe
.
ödex
 = 
pCúcuô
->
wSîülNo
;

562 
	`°r˝y
(
cúcuôtbÆe
.
«me
, 
pCúcuô
->
sName
);

565 if–!
	`InôPageTabÀ
–
pCaböë
, 
pˇböëabÀ
, &
cúcuôtbÆe
, 0))

567 
	`¥öt
( (*)"InitPageTableÉrror");

568  
FALSE
;

571 
pˇböëabÀ
->
cúcuô
.
	`push_back
–
cúcuôtbÆe
 ) ;

574 
	`¥öt
( (*)"InitCircuitTable ok" );

575  
TRUE
;

576 
	}
}

589 
BOOL
 
	gCPage_D©aQuîy
::
	$InôPageTabÀ
–
PCABINET
 
pCaböë
,

590 
QUERY_REALTIME_CABINET
 *
pˇböëabÀ
,

591 
QUERY_REALTIME_CIRCUIT
 *
pcúcuôabÀ
,

592 
BYTE
 
Êag
 )

594 if–
NULL
 =
pˇböëabÀ
 )

596 
	`¥öt
( (*)"InitPageTable: NULL ==Öcabinetable " );

597  
FALSE
;

600 if–0 =
Êag
)

602 i‡–
NULL
 =
pcúcuôabÀ
 )

604 
	`¥öt
( (*)"InitPageTable: NULL ==Öcircuitable " );

605  
FALSE
;

608 
PSINGLECIRCUIT
 
pCúcuô
 = 
	`AfxGëSögÀCúcuô
–
pcúcuôabÀ
->
ödex
 );

609 i‡(
NULL
 =
pCúcuô
)

611 
buf
[128];

613 
	`•rötf
(
buf
, "InôPageTabÀ föd cúcuô%d NULL\n", 
pcúcuôabÀ
->
ödex
);

614 
	`¥öt
–
buf
 );

616  
FALSE
;

620 
	`InôPageTabÀD©a
(
pCúcuô
, &
pcúcuôabÀ
->
∑ge
,
Êag
);

622 
pcúcuôabÀ
->
∑gíum
 =ÖcúcuôabÀ->
∑ge
.
	`size
();

625 i‡–1 =
Êag
)

627 
QSCIRCUIT_MAP_ITOR
 
ôî
;

629 
ôî
 = 
pCaböë
->
cúcuôAºay
.
	`begö
(); iã∏!pCaböë->cúcuôAºay.
	`íd
(); iter++)

631 
PSINGLECIRCUIT
 
pCúcuô
 = 
ôî
.
	`vÆue
();

632 i‡(
NULL
 =
pCúcuô
 )

634 
buf
[128];

636 
	`•rötf
–
buf
, "InôPageTabÀ föd caböë%d NULL\n", 
pˇböëabÀ
->
ödex
 );

637 
	`¥öt
–
buf
 );

639  
FALSE
;

643 if–!
	`InôPageTabÀD©a
(
pCúcuô
, &
pˇböëabÀ
->
∑ge
, 
Êag
))

645 
	`¥öt
( (*)"InitPageTableDataÉrror");

646  
FALSE
;

673 
pˇböëabÀ
->
∑gíum
 =ÖˇböëabÀ->
∑ge
.
	`size
();

679 
	`¥öt
( (*)"InitPageTable ok" );

680  
TRUE
;

681 
	}
}

692 
BOOL
 
	gCPage_D©aQuîy
::
InôPageTabÀD©a
–
PSINGLECIRCUIT
 
pCúcuô
, 
QVe˘‹
<
QUERY_REALTIME_PAGE
> *
µage
, 
BYTE
 
Êag
)

694 
	gycsum
 = 0;

695 
	gyxsum
 = 0;

696 
	gymsum
 = 0;

697 
	gsum
;

698 
QUERY_REALTIME_PAGE
 
	g∑ge
;

699 
	g∑ge
.
	gd©™um
 = 0;

702 i‡–1 =
Êag
 )

704 if–!
µage
->
isEm±y
() )

706 
∑ge
.
d©™um
 = 
µage
->
œ°
().datanum;

707 i‡–
	g∑ge
.
	gd©™um
 < 14 )

709 
	g∑ge
 = 
µage
->
œ°
();

710 
	gµage
->
ªmove
–
µage
->
size
() - 1);

716 
	gycsum
 = 
pCúcuô
->
ycAºay
.
size
();

717 
	gyxsum
 = 
pCúcuô
->
yxAºay
.
size
();

718 
	gymsum
 = 
pCúcuô
->
ymAºay
.
size
();

719 
	gsum
 = 
ycsum
 + 
yxsum
 + 
ymsum
;

721 
	gi
=0; i<
	gsum
; i++)

723 
QUERY_REALTIME_DATA
 
	gd©a
;

724 
QSåög
 
	g°rBusNo
 ;

725 
QSåög
 
	g°rAddr
 ;

726 
QSåög
 
	g°rP¡No
 ;

727 
QSåög
 
	g°rName
;

729 
	gd©a
.
	gödex
 = 
i
;

732 i‡–
	gi
 < 
	gycsum
 )

734 
PYCST
 
	gpyc
 = (PYCST)
pCúcuô
->
ycAºay
.
©
–
i
 );

735 
	g°rBusNo
 = 
QSåög
::
numbî
(
pyc
->
wBusNo
 + 1, 10);

736 
	g°rAddr
 = 
QSåög
::
numbî
(
pyc
->
wAddr
, 10);

737 
	g°rP¡No
 = 
QSåög
::
numbî
(
pyc
->
wP¡No
 + 1, 10);

739 
	g°rName
 = 
UTF8
(
pyc
->
chName
);

740 
	gd©a
.
	gty≥
 = 
D©aTy≥
::
YC_DTYPE
;

741 
	gd©a
.
	gbu¶öe
 = 
pyc
->
wBusNo
;

742 
	gd©a
.
	gaddr
 = 
pyc
->
wAddr
;

743 
	gd©a
.
	gpoöt
 = 
pyc
->
wP¡No
;

745 i‡–
	gi
>=
ycsum
 && 
i
 < ycsum + 
yxsum
 )

747 
PYXST
 
pyx
 = (PYXST)
pCúcuô
->
yxAºay
.
©
–
i
 - 
ycsum
 );

748 
	g°rBusNo
 = 
QSåög
::
numbî
(
pyx
->
wBusNo
+1, 10);

749 
	g°rAddr
 = 
QSåög
::
numbî
(
pyx
->
wAddr
, 10);

750 
	g°rP¡No
 = 
QSåög
::
numbî
(
pyx
->
wP¡No
+1, 10);

752 
	g°rName
 = 
UTF8
(
pyx
->
chName
);

753 
	gd©a
.
	gty≥
 = 
D©aTy≥
::
YX_DTYPE
;

754 
	gd©a
.
	gbu¶öe
 = 
pyx
->
wBusNo
;

755 
	gd©a
.
	gaddr
 = 
pyx
->
wAddr
;

756 
	gd©a
.
	gpoöt
 = 
pyx
->
wP¡No
;

758 i‡–
	gi
>=
ycsum
+
yxsum
 )

760 
PYMST
 
pym
 = (PYMST)
pCúcuô
->
ymAºay
.
©
–
i
 - 
ycsum
 - 
yxsum
 );

761 
	g°rBusNo
 = 
QSåög
::
numbî
(
pym
->
wBusNo
+1, 10);

762 
	g°rAddr
 = 
QSåög
::
numbî
(
pym
->
wAddr
, 10);

763 
	g°rP¡No
 = 
QSåög
::
numbî
(
pym
->
wP¡No
+1, 10);

765 
	g°rName
 = 
UTF8
(
pym
->
chName
);

766 
	gd©a
.
	gty≥
 = 
D©aTy≥
::
YM_DTYPE
;

767 
	gd©a
.
	gbu¶öe
 = 
pym
->
wBusNo
;

768 
	gd©a
.
	gaddr
 = 
pym
->
wAddr
;

769 
	gd©a
.
	gpoöt
 = 
pym
->
wP¡No
;

773 
	gd©a
.
	gpos
 = 
UTF8
("P")

774 + 
°rBusNo


775 + 
UTF8
(",")

776 + 
°rAddr


777 + 
UTF8
(",")

778 + 
°rP¡No
;

781 if–1 =
Êag
 )

786 
d©a
.
c⁄ã¡
 = 
pCúcuô
->
sName


787 + 
°rName
;

790 if–0 =
Êag
 )

792 
d©a
.
c⁄ã¡
 = 
°rName
;

795 
	g∑ge
.
	gd©a
.
push_back
(
d©a
);

796 
	g∑ge
.
	gd©™um
 ++;

797 i‡–
	gONE_PAGE_DATANUM
 =
∑ge
.
d©™um
 )

799 
µage
->
push_back
–
∑ge
 );

800 
	g∑ge
.
	gd©™um
 = 0;

801 
	g∑ge
.
	gd©a
.
˛ór
();

807 if–
	g∑ge
.
	gd©™um
 != 0)

809 
µage
->
push_back
–
∑ge
 );

812 
¥öt
( (*)"InitPageTableData ok" );

813  
	gTRUE
;

823 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUiTªeVõw
()

826 
QF⁄t
 
f⁄t
;

827 
f⁄t
.
	`£tPixñSize
( 20 );

830 
m_åìRólTimeD©a
 = 
√w
 
	`QTªeVõw
–(
QWidgë
 *)
	`AfxGëWidgë
());

831 
m_åìRólTimeD©a
->
	`£tGeomëry
(35, 135, 114, 385);

832 
m_åìRólTimeD©a
->
	`£tF⁄t
–
f⁄t
 );

835 
m_åìRólTimeD©a
->
	`£tHódîHiddí
(
åue
);

836 
m_åìRólTimeD©a
->
	`hódî
()->
	`£tResizeMode
–
QHódîVõw
::
ResizeToC⁄ã¡s
 );

837 
m_åìRólTimeD©a
->
	`hódî
()->
	`£tSåëchLa°Se˘i⁄
–
Ál£
 );

840 
m_pModñ
 = 
√w
 
	`QSènd¨dIãmModñ
–
m_åìRólTimeD©a
 );

843 
m_pModñ
->
	`£tH‹iz⁄èlHódîLabñs
(
	`QSåögLi°
()<<
	`QSåög
(
	`UTF8
( "ÂÆûÊó∂Êï∞ÊçÆ" )));

846 
BOOL
 
bRä
 = 
	`InôUiTªeVõwbyCfg
–
m_pModñ
);

849 
m_åìRólTimeD©a
->
	`£tModñ
(
m_pModñ
);

850 
m_åìRólTimeD©a
->
	`hide
( );

853 
	`c⁄√˘
–
m_åìRólTimeD©a
,

854 
	`SIGNAL
–
	`˛icked
–
QModñIndex
 ) ),

855 
this
,

856 
	`SLOT
–
	`TªeIãmCh™ge
–
QModñIndex
 ) ) );

858 if–
bRä
 )

860 
	`TªeIãmCh™ge
–
m_pModñ
->
	`ödex
–0, 0, 
	`QModñIndex
( ) ));

862 
	`¥öt
( (*)"InitUiTreeView ok" );

863  
TRUE
;

865 
	}
}

874 
	gCPage_D©aQuîy
::
	$DñëeUiTªeVõw
()

876 
iModñRowCou¡
 = 
m_pModñ
->
	`rowCou¡
( );

879 
i
=
iModñRowCou¡
-1; i>=0; i--)

881 
QSènd¨dIãm
 *
pIãmVec
 = 
m_pModñ
->
	`ôem
(
i
, 0);

882 i‡(
NULL
 =
pIãmVec
)

886 
iIãmRowCou¡
 = 
pIãmVec
->
	`rowCou¡
();

888 
j
 = 
iIãmRowCou¡
-1; j>=0; j--)

890 
QSènd¨dIãm
 *
pIãmC
 = 
pIãmVec
->
	`chûd
(
j
, 0);

891 if–
NULL
 !
pIãmC
 )

893 
dñëe
 
pIãmC
;

894 
pIãmC
 = 
NULL
;

899 if–
NULL
 !
pIãmVec
 )

901 
dñëe
 
pIãmVec
;

902 
pIãmVec
 = 
NULL
;

907 if–
NULL
 !
m_pModñ
 )

909 
dñëe
 
m_pModñ
;

910 
m_pModñ
 = 
NULL
;

914 if–
NULL
 !
m_åìRólTimeD©a
 )

916 
dñëe
 
m_åìRólTimeD©a
;

917 
m_åìRólTimeD©a
 = 
NULL
;

921 
	`¥öt
( (*)"DeleteUiTreeView ok" );

922 
	}
}

932 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUiTªeVõwbyCfg
–
QSènd¨dIãmModñ
 *
pModñ
 )

935 
iCaböëNum
 = 
m_ve˘‹CaböëTabÀ
.
	`size
();

936 i‡–0 =
iCaböëNum
 )

938  
FALSE
;

942  
i
=0; i<
iCaböëNum
; i++ )

945 
QSåög
 
°rCaböëName
 = 
	`UTF8
–
m_ve˘‹CaböëTabÀ
[
i
].
«me
 );

946 
QSènd¨dIãm
* 
pIãmVec
 = 
√w
 
	`QSènd¨dIãm
–
°rCaböëName
 );

949 
pIãmVec
->
	`£tEdôabÀ
–
Ál£
 );

951 
pModñ
->
	`≠≥ndRow
–
pIãmVec
 );

954  
j
=0; j< 
m_ve˘‹CaböëTabÀ
[
i
].
cúcuônum
; j++ )

956 
QVe˘‹
<
QUERY_REALTIME_CIRCUIT
> 
cúcuô
 = 
m_ve˘‹CaböëTabÀ
[
i
].circuit;

959 
QSåög
 
°r
 = 
	`UTF8
–
cúcuô
[
j
].
«me
 );

960 
QSènd¨dIãm
* 
pIãmC
 = 
√w
 
	`QSènd¨dIãm
(
°r
);

963 
pIãmC
->
	`£tEdôabÀ
–
Ál£
 );

965 
pIãmVec
->
	`≠≥ndRow
(
pIãmC
);

969 
	`¥öt
( (*)"InitUiTreeViewbyCfg ok" );

970  
TRUE
;

971 
	}
}

981 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUiS€ToﬁBox
()

984 
m_toﬁBoxS€
 = 
√w
 
	`QToﬁBox
–(
QWidgë
 *)
	`AfxGëWidgë
());

986 
m_toﬁBoxS€
->
	`£tGeomëry
(35, 135, 112, 383);

989 
	`InôUiS€ToﬁBoxByTime
();

990 
m_toﬁBoxS€
->
	`addIãm
–
m_widgëS€Bytime
, 
	`UTF8
("ÊåâÊó∂Èó¥Êü•ËØ¢"));

999 
	`¥öt
( (*)"InitUiSoeToolBox ok" );

1000  
TRUE
;

1002 
	}
}

1011 
	gCPage_D©aQuîy
::
	$DñëeUiS€ToﬁBox
()

1014 
	`DñëeUiS€ToﬁBoxByBusLöe
();

1017 
	`DñëeUiS€ToﬁBoxByTime
();

1019 if–
NULL
 !
m_toﬁBoxS€
 )

1021 
dñëe
 
m_toﬁBoxS€
;

1022 
m_toﬁBoxS€
 = 
NULL
;

1025 
	`¥öt
( (*)"DeleteUiSoeToolBox ok" );

1026 
	}
}

1038 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUiS€ToﬁBoxByTime
()

1041 
QF⁄t
 
f⁄t
;

1042 
f⁄t
.
	`£tPixñSize
( 35 );

1045 
m_widgëS€Bytime
 = 
√w
 
	`QWidgë
–(
QWidgë
 *)
	`AfxGëWidgë
());

1048 
m_dülogTimeBegö
 = 
√w
 
	`QDülog
–(
QWidgë
 *)
	`AfxGëWidgë
() );

1049 
m_dülogTimeBegö
->
	`£tFixedSize
–
	`QSize
(540, 110 ));

1050 
m_dülogTimeBegö
->
	`£tWödowTôÀ
–
	`UTF8
("Ëµ∑ÂßãÊó∂Èó¥ËÆæÁΩÆ"));

1051 
m_dülogTimeBegö
->
	`£tWödowFœgs
–
Qt
::
WödowClo£Buâ⁄Höt


1052 | 
Qt
::
Wödow
 );

1055 
m_dtBegö
 = 
√w
 
	`QD©eTimeEdô
–
m_dülogTimeBegö
 );

1056 
m_dtBegö
->
	`£tGeomëry
(10, 10, 520, 100);

1057 
m_dtBegö
->
	`£tDi•œyF‹m©
("yyyyÂπ¥ MMÊúà ddÊó• hhÊó∂ mmÂàÜ ssÁßí");

1058 
m_dtBegö
->
	`£tF⁄t
–
f⁄t
 );

1059 
	`c⁄√˘
(
m_dtBegö
,
	`SIGNAL
(
	`d©eTimeCh™ged
(c⁄° 
QD©eTime
)), 
this
 , 
	`SLOT
(
	`BegöTimeCh™ged
(QDateTime )));

1060 
m_dülogTimeBegö
->
	`hide
();

1063 
m_dülogTimeEnd
 = 
√w
 
	`QDülog
–(
QWidgë
 *)
	`AfxGëWidgë
() );

1064 
m_dülogTimeEnd
->
	`£tFixedSize
–
	`QSize
(540, 110 ));

1065 
m_dülogTimeEnd
->
	`£tWödowTôÀ
–
	`UTF8
("ÁªìÊùüÊó∂Èó¥ËÆæÁΩÆ"));

1066 
m_dülogTimeEnd
->
	`£tWödowFœgs
–
Qt
::
WödowClo£Buâ⁄Höt


1067 | 
Qt
::
Wödow
 );

1070 
m_dtEnd
 = 
√w
 
	`QD©eTimeEdô
–
m_dülogTimeEnd
 );

1071 
m_dtEnd
->
	`£tGeomëry
(10, 10, 520, 100);

1072 
m_dtEnd
->
	`£tDi•œyF‹m©
("yyyyÂπ¥ MMÊúà ddÊó• hhÊó∂ mmÂàÜ ssÁßí");

1073 
m_dtEnd
->
	`£tF⁄t
–
f⁄t
 );

1074 
	`c⁄√˘
(
m_dtEnd
,
	`SIGNAL
(
	`d©eTimeCh™ged
(
QD©eTime
 )), 
this
 , 
	`SLOT
(
	`EndTimeCh™ged
(QDateTime)));

1076 
m_dülogTimeEnd
->
	`hide
();

1079 
m_buâ⁄TimeBegö
 = 
√w
 
	`QPushBuâ⁄
–
m_widgëS€Bytime
 );

1080 
m_buâ⁄TimeBegö
->
	`£tGeomëry
(5, 10, 60, 20);

1081 
m_buâ⁄TimeBegö
->
	`£tText
–
	`UTF8
("Ëµ∑ÂßãÊó∂Èó¥") );

1082 
	`c⁄√˘
(
m_buâ⁄TimeBegö
, 
	`SIGNAL
(
	`ªÀa£d
()), 
m_dülogTimeBegö
,
	`SLOT
(
	`exec
()));

1089 
m_edôBegöYór
 = 
√w
 
	`QLöeEdô
 (
m_widgëS€Bytime
 );

1090 
m_edôBegöYór
->
	`£tGeomëry
(5, 30, 40, 20);

1091 
m_edôBegöYór
->
	`£tText
("2000");

1093 
m_œbñBegöYór
 = 
√w
 
	`QLabñ
–
	`UTF8
("Âπ¥"), 
m_widgëS€Bytime
);

1094 
m_œbñBegöYór
->
	`£tGeomëry
(50,30,30,20);

1097 
m_edôBegöM⁄th
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1098 
m_edôBegöM⁄th
->
	`£tGeomëry
(5, 50, 40, 20);

1099 
m_edôBegöM⁄th
->
	`£tText
("10");

1101 
m_œbñBegöM⁄th
 = 
√w
 
	`QLabñ
–
	`UTF8
("Êúà"), 
m_widgëS€Bytime
);

1102 
m_œbñBegöM⁄th
->
	`£tGeomëry
(50,50,30,20);

1105 
m_edôBegöDay
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1106 
m_edôBegöDay
->
	`£tGeomëry
(5, 70, 40, 20);

1107 
m_edôBegöDay
->
	`£tText
("10");

1109 
m_œbñBegöDay
 = 
√w
 
	`QLabñ
–
	`UTF8
("Êó•"), 
m_widgëS€Bytime
);

1110 
m_œbñBegöDay
->
	`£tGeomëry
(50,70,30,20);

1113 
m_edôBegöHour
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1114 
m_edôBegöHour
->
	`£tGeomëry
(5, 90, 40, 20);

1115 
m_edôBegöHour
->
	`£tText
("10");

1117 
m_œbñBegöHour
 = 
√w
 
	`QLabñ
–
	`UTF8
("Êó∂"), 
m_widgëS€Bytime
);

1118 
m_œbñBegöHour
->
	`£tGeomëry
(50,90,30,20);

1121 
m_edôBegöMöuã
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1122 
m_edôBegöMöuã
->
	`£tGeomëry
(5, 110, 40, 20);

1123 
m_edôBegöMöuã
->
	`£tText
("10");

1125 
m_œbñBegöMöuã
 = 
√w
 
	`QLabñ
–
	`UTF8
("ÂàÜ"), 
m_widgëS€Bytime
);

1126 
m_œbñBegöMöuã
->
	`£tGeomëry
(50,110,30,20);

1129 
m_edôBegöSec⁄d
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1130 
m_edôBegöSec⁄d
->
	`£tGeomëry
(5, 130, 40, 20);

1131 
m_edôBegöSec⁄d
->
	`£tText
("10");

1133 
m_œbñBegöSec⁄d
 = 
√w
 
	`QLabñ
–
	`UTF8
("Áßí"), 
m_widgëS€Bytime
);

1134 
m_œbñBegöSec⁄d
->
	`£tGeomëry
(50,130,30,20);

1137 
m_buâ⁄TimeEnd
 = 
√w
 
	`QPushBuâ⁄
–
m_widgëS€Bytime
 );

1138 
m_buâ⁄TimeEnd
->
	`£tGeomëry
(5, 150, 60, 20);

1139 
m_buâ⁄TimeEnd
->
	`£tText
–
	`UTF8
("ÁªìÊùüÊó∂Èó¥") );

1140 
	`c⁄√˘
(
m_buâ⁄TimeEnd
, 
	`SIGNAL
(
	`ªÀa£d
()), 
m_dülogTimeEnd
,
	`SLOT
(
	`exec
()));

1145 
m_edôEndYór
 = 
√w
 
	`QLöeEdô
 (
m_widgëS€Bytime
 );

1146 
m_edôEndYór
->
	`£tGeomëry
(5, 170, 40, 20);

1147 
m_edôEndYór
->
	`£tText
("2000");

1149 
m_œbñEndYór
 = 
√w
 
	`QLabñ
–
	`UTF8
("Âπ¥"), 
m_widgëS€Bytime
);

1150 
m_œbñEndYór
->
	`£tGeomëry
(50,170,30,20);

1153 
m_edôEndM⁄th
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1154 
m_edôEndM⁄th
->
	`£tGeomëry
(5, 190, 40, 20);

1155 
m_edôEndM⁄th
->
	`£tText
("10");

1157 
m_œbñEndM⁄th
 = 
√w
 
	`QLabñ
–
	`UTF8
("Êúà"), 
m_widgëS€Bytime
);

1158 
m_œbñEndM⁄th
->
	`£tGeomëry
(50,190,30,20);

1161 
m_edôEndDay
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1162 
m_edôEndDay
->
	`£tGeomëry
(5, 210, 40, 20);

1163 
m_edôEndDay
->
	`£tText
("10");

1165 
m_œbñEndDay
 = 
√w
 
	`QLabñ
–
	`UTF8
("Êó•"), 
m_widgëS€Bytime
);

1166 
m_œbñEndDay
->
	`£tGeomëry
(50,210,30,20);

1169 
m_edôEndHour
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1170 
m_edôEndHour
->
	`£tGeomëry
(5, 230, 40, 20);

1171 
m_edôEndHour
->
	`£tText
("10");

1173 
m_œbñEndHour
 = 
√w
 
	`QLabñ
–
	`UTF8
("Êó∂"), 
m_widgëS€Bytime
);

1174 
m_œbñEndHour
->
	`£tGeomëry
(50,230,30,20);

1177 
m_edôEndMöuã
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1178 
m_edôEndMöuã
->
	`£tGeomëry
(5, 250, 40, 20);

1179 
m_edôEndMöuã
->
	`£tText
("10");

1181 
m_œbñEndMöuã
 = 
√w
 
	`QLabñ
–
	`UTF8
("ÂàÜ"), 
m_widgëS€Bytime
);

1182 
m_œbñEndMöuã
->
	`£tGeomëry
(50,250,30,20);

1185 
m_edôEndSec⁄d
 = 
√w
 
	`QLöeEdô
(
m_widgëS€Bytime
);

1186 
m_edôEndSec⁄d
->
	`£tGeomëry
(5, 270, 40, 20);

1187 
m_edôEndSec⁄d
->
	`£tText
("10");

1189 
m_œbñEndSec⁄d
 = 
√w
 
	`QLabñ
–
	`UTF8
("Áßí"), 
m_widgëS€Bytime
);

1190 
m_œbñEndSec⁄d
->
	`£tGeomëry
(50,270,30,20);

1192 
m_dtOk
 = 
√w
 
	`QPushBuâ⁄
–
m_widgëS€Bytime
);

1193 
m_dtOk
->
	`£tGeomëry
(5,300,70,20);

1194 
m_dtOk
->
	`£tText
–
	`UTF8
("Êü•ËØ¢"));

1195 
	`c⁄√˘
(
m_dtOk
,
	`SIGNAL
(
	`ªÀa£d
()),
this
,
	`SLOT
(
	`SlŸQuîyS€ByTime
()));

1197 
m_dtBegö
->
	`£tD©eTime
(
QD©eTime
::
	`cuºítD©eTime
());

1198 
m_dtEnd
->
	`£tD©eTime
(
QD©eTime
::
	`cuºítD©eTime
());

1199 
	`¥öt
( (*)"InitUiSoeToolBoxByTime ok" );

1200  
TRUE
;

1201 
	}
}

1210 
	gCPage_D©aQuîy
::
	$DñëeUiS€ToﬁBoxByTime
()

1213 if–
NULL
 !
m_dtOk
 )

1215 
dñëe
 
m_dtOk
;

1216 
m_dtOk
 = 
NULL
;

1220 if–
NULL
 !
m_edôEndSec⁄d
 )

1222 
dñëe
 
m_edôEndSec⁄d
;

1223 
m_edôEndSec⁄d
 = 
NULL
;

1225 if–
NULL
 !
m_œbñEndSec⁄d
 )

1227 
dñëe
 
m_œbñEndSec⁄d
;

1228 
m_œbñEndSec⁄d
 = 
NULL
;

1232 if–
NULL
 !
m_edôEndMöuã
 )

1234 
dñëe
 
m_edôEndMöuã
;

1235 
m_edôEndMöuã
 = 
NULL
;

1237 if–
NULL
 !
m_œbñEndMöuã
 )

1239 
dñëe
 
m_œbñEndMöuã
;

1240 
m_œbñEndMöuã
 = 
NULL
;

1244 if–
NULL
 !
m_edôEndHour
 )

1246 
dñëe
 
m_edôEndHour
;

1247 
m_edôEndHour
 = 
NULL
;

1249 if–
NULL
 !
m_œbñEndHour
 )

1251 
dñëe
 
m_œbñEndHour
;

1252 
m_œbñEndHour
 = 
NULL
;

1256 if–
NULL
 !
m_edôEndDay
 )

1258 
dñëe
 
m_edôEndDay
;

1259 
m_edôEndDay
 = 
NULL
;

1261 if–
NULL
 !
m_œbñEndDay
 )

1263 
dñëe
 
m_œbñEndDay
;

1264 
m_œbñEndDay
 = 
NULL
;

1268 if–
NULL
 !
m_edôEndM⁄th
 )

1270 
dñëe
 
m_edôEndM⁄th
;

1271 
m_edôEndM⁄th
 = 
NULL
;

1273 if–
NULL
 !
m_œbñEndM⁄th
 )

1275 
dñëe
 
m_œbñEndM⁄th
;

1276 
m_œbñEndM⁄th
 = 
NULL
;

1280 if–
NULL
 !
m_edôEndYór
 )

1282 
dñëe
 
m_edôEndYór
;

1283 
m_edôEndYór
 = 
NULL
;

1285 if–
NULL
 !
m_œbñEndYór
 )

1287 
dñëe
 
m_œbñEndYór
;

1288 
m_œbñEndYór
 = 
NULL
;

1292 if–
NULL
 !
m_edôBegöSec⁄d
 )

1294 
dñëe
 
m_edôBegöSec⁄d
;

1295 
m_edôBegöSec⁄d
 = 
NULL
;

1297 if–
NULL
 !
m_œbñBegöSec⁄d
 )

1299 
dñëe
 
m_œbñBegöSec⁄d
;

1300 
m_œbñBegöSec⁄d
 = 
NULL
;

1304 if–
NULL
 !
m_edôBegöMöuã
 )

1306 
dñëe
 
m_edôBegöMöuã
;

1307 
m_edôBegöMöuã
 = 
NULL
;

1309 if–
NULL
 !
m_œbñBegöMöuã
 )

1311 
dñëe
 
m_œbñBegöMöuã
;

1312 
m_œbñBegöMöuã
 = 
NULL
;

1316 if–
NULL
 !
m_edôBegöHour
 )

1318 
dñëe
 
m_edôBegöHour
;

1319 
m_edôBegöHour
 = 
NULL
;

1321 if–
NULL
 !
m_œbñBegöHour
 )

1323 
dñëe
 
m_œbñBegöHour
;

1324 
m_œbñBegöHour
 = 
NULL
;

1328 if–
NULL
 !
m_edôBegöDay
 )

1330 
dñëe
 
m_edôBegöDay
;

1331 
m_edôBegöDay
 = 
NULL
;

1333 if–
NULL
 !
m_œbñBegöDay
 )

1335 
dñëe
 
m_œbñBegöDay
;

1336 
m_œbñBegöDay
 = 
NULL
;

1340 if–
NULL
 !
m_edôBegöM⁄th
 )

1342 
dñëe
 
m_edôBegöM⁄th
;

1343 
m_edôBegöM⁄th
 = 
NULL
;

1345 if–
NULL
 !
m_œbñBegöM⁄th
 )

1347 
dñëe
 
m_œbñBegöM⁄th
;

1348 
m_œbñBegöM⁄th
 = 
NULL
;

1352 if–
NULL
 !
m_edôBegöYór
 )

1354 
dñëe
 
m_edôBegöYór
;

1355 
m_edôBegöYór
 = 
NULL
;

1357 if–
NULL
 !
m_œbñBegöYór
 )

1359 
dñëe
 
m_œbñBegöYór
;

1360 
m_œbñBegöYór
 = 
NULL
;

1364 if–
NULL
 !
m_buâ⁄TimeEnd
 )

1366 
dñëe
 
m_buâ⁄TimeEnd
;

1367 
m_buâ⁄TimeEnd
 = 
NULL
;

1370 if–
NULL
 !
m_buâ⁄TimeBegö
 )

1372 
dñëe
 
m_buâ⁄TimeBegö
;

1373 
m_buâ⁄TimeBegö
 = 
NULL
;

1377 if–
NULL
 !
m_dtEnd
 )

1379 
dñëe
 
m_dtEnd
;

1380 
m_dtEnd
 = 
NULL
;

1383 if–
NULL
 !
m_dtBegö
 )

1385 
dñëe
 
m_dtBegö
;

1386 
m_dtBegö
 = 
NULL
;

1390 if–
NULL
 !
m_dülogTimeEnd
 )

1392 
dñëe
 
m_dülogTimeEnd
;

1393 
m_dülogTimeEnd
 = 
NULL
;

1396 if–
NULL
 !
m_dülogTimeBegö
 )

1398 
dñëe
 
m_dülogTimeBegö
;

1399 
m_dülogTimeBegö
 = 
NULL
;

1403 if–
NULL
 !
m_widgëS€Bytime
 )

1405 
dñëe
 
m_widgëS€Bytime
;

1406 
m_widgëS€Bytime
 = 
NULL
;

1409 
	`¥öt
( (*)"DeleteUiSoeToolBoxByTime");

1411 
	}
}

1421 
BOOL
 
	gCPage_D©aQuîy
::
	$InôUiS€ToﬁBoxByBusLöe
()

1424 
m_widgëS€ByBusLöe
 = 
√w
 
	`QWidgë
–(
QWidgë
 *Ë
	`AfxGëWidgë
());

1427 
m_œbñBusLöe
 = 
√w
 
	`QLabñ
–
	`UTF8
("ÈÄöÈÅìÂè∑"), 
m_widgëS€ByBusLöe
 );

1428 
m_œbñBusLöe
->
	`£tGeomëry
(5, 20, 70, 20 );

1430 
m_boxBusLöe
 = 
√w
 
	`QComboBox
–
m_widgëS€ByBusLöe
 );

1431 
m_boxBusLöe
->
	`£tGeomëry
(5, 40, 70, 20);

1434 
QBUS_ARRAY
 *
pBusAºay
 = 
	`AfxGëBusAºay
();

1435 i‡–
NULL
 =
pBusAºay
 )

1437  
FALSE
;

1441 
DWORD
 
busSize
 = 
pBusAºay
->
	`size
();

1443  
DWORD
 
i
=0; i<
busSize
; i++)

1445 
QBUS_ARRAY
::
ôî©‹
 
ô‹
 = 
pBusAºay
->
	`föd
–
i
 ) ;

1446 if–
ô‹
 =
pBusAºay
->
	`íd
() )

1451 
PBUS_LINEST
 
pBusLöe
 = 
ô‹
.
	`vÆue
() ;

1453 i‡–
BUS_PAUSE
 !
pBusLöe
->
byBusTy≥
 )

1455 
m_boxBusLöe
->
	`addIãm
–
QSåög
::
	`numbî
–
pBusLöe
->
wBusNo
 + 1) );

1463 
m_œbñAddr
 = 
√w
 
	`QLabñ
–
	`UTF8
("ËÆæÂ§áÂú∞ÂùÄ"), 
m_widgëS€ByBusLöe
 );

1464 
m_œbñAddr
->
	`£tGeomëry
(5, 60, 70, 20 );

1466 
m_boxAddr
 = 
√w
 
	`QComboBox
–
m_widgëS€ByBusLöe
 );

1467 
m_boxAddr
->
	`£tGeomëry
(5, 80, 70, 20);

1468 
m_boxAddr
->
	`addIãm
("1" );

1469 
m_boxAddr
->
	`addIãm
("2" );

1472 
m_œbñPoöt
 = 
√w
 
	`QLabñ
–
	`UTF8
("ÁÇπÂè∑"), 
m_widgëS€ByBusLöe
 );

1473 
m_œbñPoöt
->
	`£tGeomëry
(5, 100, 70, 20 );

1475 
m_boxPoöt
 = 
√w
 
	`QComboBox
–
m_widgëS€ByBusLöe
 );

1476 
m_boxPoöt
->
	`£tGeomëry
(5, 120, 70, 20);

1477 
m_boxPoöt
->
	`addIãm
("1" );

1478 
m_boxPoöt
->
	`addIãm
("2" );

1480 
m_BusLöeOk
 = 
√w
 
	`QPushBuâ⁄
–
m_widgëS€ByBusLöe
 );

1481 
m_BusLöeOk
->
	`£tGeomëry
(5, 150, 70, 20);

1482 
m_BusLöeOk
->
	`£tText
(
	`UTF8
("Êü•ËØ¢"));

1484 
	`¥öt
( (*)"InitUiSoeToolBoxByTime ok" );

1485  
TRUE
;

1486 
	}
}

1495 
	gCPage_D©aQuîy
::
	$DñëeUiS€ToﬁBoxByBusLöe
()

1498 if–
NULL
 !
m_BusLöeOk
 )

1500 
dñëe
 
m_BusLöeOk
;

1501 
m_BusLöeOk
 = 
NULL
;

1505 if–
NULL
 !
m_boxPoöt
 )

1507 
m_boxPoöt
->
	`˛ór
();

1508 
dñëe
 
m_boxPoöt
;

1509 
m_boxPoöt
 = 
NULL
;

1511 if–
NULL
 !
m_œbñPoöt
 )

1513 
dñëe
 
m_œbñPoöt
;

1514 
m_œbñPoöt
 = 
NULL
;

1518 if–
NULL
 !
m_boxAddr
 )

1520 
m_boxAddr
->
	`˛ór
();

1521 
dñëe
 
m_boxAddr
;

1522 
m_boxAddr
 = 
NULL
;

1524 if–
NULL
 !
m_œbñAddr
 )

1526 
dñëe
 
m_œbñAddr
;

1527 
m_œbñAddr
 = 
NULL
;

1531 if–
NULL
 !
m_boxBusLöe
 )

1533 
m_boxBusLöe
->
	`˛ór
();

1534 
dñëe
 
m_boxBusLöe
;

1535 
m_boxBusLöe
 = 
NULL
;

1537 if–
NULL
 !
m_œbñBusLöe
 )

1539 
dñëe
 
m_œbñBusLöe
;

1540 
m_œbñBusLöe
 = 
NULL
;

1544 if–
NULL
 !
m_widgëS€ByBusLöe
 )

1546 
dñëe
 
m_widgëS€ByBusLöe
;

1547 
m_widgëS€ByBusLöe
 = 
NULL
;

1550 
	`¥öt
( (*)"DeleteUiSoeToolBoxByBusLine ok");

1552 
	}
}

1563 
	gCPage_D©aQuîy
::
	$SëTùsSå
–
QSåög
 
°r
)

1565 
m_°rTùs
 = 
°r
;

1566 
	}
}

1575 
QSåög
 
	gCPage_D©aQuîy
::
	$GëTùsSå
()

1577  
m_°rTùs
;

1578 
	}
}

1587 
	gCPage_D©aQuîy
::
	$DøwTùs
–
QPaöãr
 *
pPaöãr
 )

1589 
pPaöãr
->
	`ßve
();

1591 
QF⁄t
 
f⁄t
 ;

1592 
f⁄t
.
	`£tPixñSize
( 23 );

1593 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

1594 
QPí
 
	`≥n
–
	`QCﬁ‹
( 255 , 255 , 255 , 255 ) );

1595 
pPaöãr
->
	`£tPí
–
≥n
 );

1597 if–
DATAQUERY_REALDATA
 =
	`GëQuîyTy≥
( ) )

1599 
pPaöãr
->
	`døwText
–
m_rcToﬁTùs
 , 
Qt
::
AlignLe·
 , 
	`GëTùsSå
( ));

1603 
pPaöãr
->
	`døwText
–
m_rcToﬁTùs
 , 
Qt
::
AlignLe·
 , 
	`QSåög
(""));

1606 
pPaöãr
->
	`ª°‹e
();

1608 
	}
}

1617 
	gCPage_D©aQuîy
::
	$SëCuºítPage
–
DWORD
 
dwCuºítPage
)

1619 i‡–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
() )

1621 
m_dwS€CuºítPage
 = 
dwCuºítPage
;

1622 
	`SëDi•œyS€
();

1624 i‡–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
() )

1626 
m_dwYxAœrmCuºítPage
 = 
dwCuºítPage
;

1627 
	`SëDi•œyS€
();

1629 i‡–
DATAQUERY_REALDATA
 =
	`GëQuîyTy≥
() )

1631 
m_dwCuºítPage
 = 
dwCuºítPage
;

1633 
	`SëTªeIãmD©a
();

1636 
	}
}

1645 
DWORD
 
	gCPage_D©aQuîy
::
	$GëCuºítPage
()

1647 i‡–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
() )

1649  
m_dwS€CuºítPage
;

1651 i‡–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
() )

1653  
m_dwYxAœrmCuºítPage
;

1655 i‡–
DATAQUERY_REALDATA
 =
	`GëQuîyTy≥
() )

1657  
m_dwCuºítPage
;

1661 
	}
}

1670 
	gCPage_D©aQuîy
::
	$SëTŸÆPage
–
DWORD
 
dwTŸÆPage
 )

1672 i‡–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
() )

1674 
m_dwS€TŸÆPage
 = 
dwTŸÆPage
;

1676 i‡–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
() )

1678 
m_dwYxAœrmTŸÆPage
 = 
dwTŸÆPage
;

1680 i‡–
DATAQUERY_REALDATA
 =
	`GëQuîyTy≥
() )

1682 
m_dwTŸÆPage
 = 
dwTŸÆPage
;

1684 
	}
}

1693 
DWORD
 
	gCPage_D©aQuîy
::
	$GëTŸÆPage
()

1695 i‡–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
() )

1697  
m_dwS€TŸÆPage
;

1699 i‡–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
() )

1701  
m_dwYxAœrmTŸÆPage
;

1703 i‡–
DATAQUERY_REALDATA
 =
	`GëQuîyTy≥
() )

1705  
m_dwTŸÆPage
;

1709 
	}
}

1718 
	gCPage_D©aQuîy
::
	$DøwPages
(
QPaöãr
 *
pPaöãr
 )

1720 
DWORD
 
cur_∑ge
 = 
	`GëCuºítPage
();

1721 
DWORD
 
tŸÆ_∑ge
 = 
	`GëTŸÆPage
();

1722 
boﬁ
 
∑ge_îr‹
 = 
Ál£
;

1724 i‡–0 =
cur_∑ge
 || 0 =
tŸÆ_∑ge
 )

1728 i‡(
cur_∑ge
 > 
tŸÆ_∑ge
 && !
∑ge_îr‹
)

1730 
∑ge_îr‹
 = 
åue
;

1734 i‡–0 =
cur_∑ge
 )

1736 
cur_∑ge
 = 1;

1737 
	`SëCuºítPage
(1);

1740 
∑ge_îr‹
 = 
Ál£
;

1741 
QSåög
 
°r
 = QSåög::
	`numbî
(
cur_∑ge
, 10Ë+ "/" + QSåög::numbî(
tŸÆ_∑ge
, 10Ë+ 
	`UTF8
( "È°µ");

1743 
pPaöãr
->
	`ßve
();

1745 
QF⁄t
 
f⁄t
 ;

1746 
f⁄t
.
	`£tPixñSize
( 23 );

1747 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

1748 
QPí
 
	`≥n
–
	`QCﬁ‹
( 255 , 255 , 255 , 255 ) );

1749 
pPaöãr
->
	`£tPí
–
≥n
 );

1751 
pPaöãr
->
	`døwText
–
m_rcPageInfo
 , 
Qt
::
AlignLe·
 , 
°r
 );

1753 
pPaöãr
->
	`ª°‹e
();

1755 
	}
}

1764 
	gCPage_D©aQuîy
::
	$PageUp
()

1766 
DWORD
 
∑ge
 = 
	`GëCuºítPage
();

1768 
∑ge
 ++;

1769 i‡–
∑ge
 > 
	`GëTŸÆPage
() )

1771 
∑ge
 = 1;

1774 
	`SëCuºítPage
–
∑ge
 );

1775 
	}
}

1784 
	gCPage_D©aQuîy
::
	$PageDown
()

1786 
DWORD
 
∑ge
 = 
	`GëCuºítPage
();

1787 
∑ge
--;

1789 i‡–
∑ge
 < 1 )

1791 
∑ge
 = 
	`GëTŸÆPage
();

1794 
	`SëCuºítPage
–
∑ge
 );

1795 
	}
}

1804 
	gCPage_D©aQuîy
::
	$SëQuîyTy≥
–
BYTE
 
ty≥
 )

1806 
m_byCuºítQuîyTy≥
 = 
ty≥
;

1807 i‡–
DATAQUERY_YXALARM
 =
ty≥
)

1812 
	`QuîyAŒS€
();

1814 i‡–
DATAQUERY_SOE
 =
ty≥
)

1816 
	`QuîyAŒS€
();

1818 i‡–
DATAQUERY_REALDATA
 =
ty≥
 )

1822 
	}
}

1831 
BYTE
 
	gCPage_D©aQuîy
::
	$GëQuîyTy≥
()

1833  
m_byCuºítQuîyTy≥
;

1834 
	}
}

1843 
	gCPage_D©aQuîy
::
	$DøwQuîyTy≥PicsN⁄e
–
QPaöãr
 *
pPaöãr
 )

1845 
	`DøwQuîyTy≥Pic
(
pPaöãr
, 
DATAQUERY_REALDATA
, 
FALSE
);

1846 
	`DøwQuîyTy≥Pic
(
pPaöãr
, 
DATAQUERY_SOE
, 
FALSE
);

1847 
	`DøwQuîyTy≥Pic
(
pPaöãr
, 
DATAQUERY_YXALARM
, 
FALSE
);

1849 
	}
}

1861 
	gCPage_D©aQuîy
::
	$DøwQuîyTy≥Pic
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ty≥
, 
BOOL
 
Êag
)

1863 
size
 = 0;

1864 
QSåög
 
°r
 = "";

1865 
QPoöt
 
	`±
(0, 0);

1867 if–
NULL
 =
pPaöãr
 )

1872 
ty≥
)

1874 
DATAQUERY_REALDATA
:

1876 
size
 = 
m_°rPicRólTimeN⁄eSñe˘
.
	`size
() ;

1877 
°r
 = 
m_°rPicRólTimeN⁄eSñe˘
;

1878 i‡–
Êag
 )

1880 
size
 = 
m_°rPicRólTimeSñe˘
.
	`size
() ;

1881 
°r
 = 
m_°rPicRólTimeSñe˘
;

1884 
±
.
	`£tX
(
m_rcFun˘i⁄
[
QUERYREALDATA
].
	`x
());

1885 
±
.
	`£tY
–
m_rcFun˘i⁄
[
QUERYREALDATA
].
	`y
());

1890 
DATAQUERY_SOE
:

1892 
size
 = 
m_°rPicS€N⁄eSñe˘
.
	`size
() ;

1893 
°r
 = 
m_°rPicS€N⁄eSñe˘
;

1894 i‡–
Êag
 )

1896 
size
 = 
m_°rPicS€Sñe˘
.
	`size
() ;

1897 
°r
 = 
m_°rPicS€Sñe˘
;

1900 
±
.
	`£tX
(
m_rcFun˘i⁄
[
QUERYSOE
].
	`x
());

1901 
±
.
	`£tY
–
m_rcFun˘i⁄
[
QUERYSOE
].
	`y
());

1906 
DATAQUERY_YXALARM
:

1908 
size
 = 
m_°rPicYxAœrmN⁄eSñe˘
.
	`size
() ;

1909 
°r
 = 
m_°rPicYxAœrmN⁄eSñe˘
;

1910 i‡–
Êag
 )

1912 
size
 = 
m_°rPicYxAœrmSñe˘
.
	`size
() ;

1913 
°r
 = 
m_°rPicYxAœrmSñe˘
;

1916 
±
.
	`£tX
(
m_rcFun˘i⁄
[
QUERYYXALARM
].
	`x
());

1917 
±
.
	`£tY
–
m_rcFun˘i⁄
[
QUERYYXALARM
].
	`y
());

1925 if–
size
 <= 0 )

1929 
QPixm≠
 
pix
;

1931 
boﬁ
 
bFœg
 = 
pix
.
	`lﬂd
–
°r
 );

1932 if–
bFœg
 =
Ál£
 )

1936 
pPaöãr
->
	`døwPixm≠
–
±
 , 
pix
 );

1938 
pix
.
	`dëach
();

1940 
	}
}

1949 
	gCPage_D©aQuîy
::
	$DøwQuîyTy≥Pics
–
QPaöãr
 *
pPaöãr
)

1951 
	`DøwQuîyTy≥PicsN⁄e
–
pPaöãr
 );

1952 
	`DøwQuîyTy≥Pic
(
pPaöãr
, 
	`GëQuîyTy≥
(), 
TRUE
);

1953 
	}
}

1963 
	gCPage_D©aQuîy
::
	$SëQuîyD©a
(
BYTE
 
ödex
, 
QUERY_REALTIME_DATA
 
d©a
)

1965 if–
ödex
 >
ONE_PAGE_DATANUM
 )

1970 
m_byCuºítD©aNum
 = 
ödex
 + 1;

1974 
m_CuºítD©a
[
ödex
].ödex = 
d©a
.index;

1975 
m_CuºítD©a
[
ödex
].
c⁄ã¡
 = 
d©a
.content;

1976 
m_CuºítD©a
[
ödex
].
ty≥
 = 
d©a
.type;

1977 
m_CuºítD©a
[
ödex
].
bu¶öe
 = 
d©a
.busline;

1978 
m_CuºítD©a
[
ödex
].
addr
 = 
d©a
.addr;

1979 
m_CuºítD©a
[
ödex
].
poöt
 = 
d©a
.point;

1980 
m_CuºítD©a
[
ödex
].
vÆ
 = 
d©a
.val;

1981 
m_CuºítD©a
[
ödex
].
pos
 = 
d©a
.pos;

1988 
	}
}

1998 
QUERY_REALTIME_DATA
 *
	gCPage_D©aQuîy
::
	$GëQuîyD©a
–
BYTE
 
ödex
)

2000 if–
ödex
 >
m_byCuºítD©aNum
 )

2002  
NULL
;

2005 if–
NULL
 =&
m_CuºítD©a
[
ödex
])

2007  
NULL
;

2011  
m_CuºítD©a
[
ödex
].
ty≥
)

2013 
D©aTy≥
::
YC_DTYPE
:

2015 
PYCST
 
pyc
 = 
	`AfxGëYc
–
m_CuºítD©a
[
ödex
].
bu¶öe
,

2016 
m_CuºítD©a
[
ödex
].
addr
,

2017 
m_CuºítD©a
[
ödex
].
poöt
);

2019 i‡–
NULL
 =
pyc
 )

2021  
NULL
;

2023 
m_CuºítD©a
[
ödex
].
vÆ
 = 
	`QSåög
("%1").
	`¨g
(
pyc
->
fVÆ_1Time
, 0, 'f', 3);

2027 
D©aTy≥
::
YX_DTYPE
:

2029 
PYXST
 
pyx
 = 
	`AfxGëYx
–
m_CuºítD©a
[
ödex
].
bu¶öe
,

2030 
m_CuºítD©a
[
ödex
].
addr
,

2031 
m_CuºítD©a
[
ödex
].
poöt
);

2032 i‡(
NULL
 =
pyx
)

2034  
NULL
;

2038 i‡–1 =
pyx
->
byVÆue
 )

2040 
m_CuºítD©a
[
ödex
].
vÆ
 = 
	`UTF8
("Âêà");

2044 
m_CuºítD©a
[
ödex
].
vÆ
 = 
	`UTF8
("ÂàÜ");

2050 
D©aTy≥
::
YM_DTYPE
:

2052 
PYMST
 
pym
 = 
	`AfxGëYm
–
m_CuºítD©a
[
ödex
].
bu¶öe
,

2053 
m_CuºítD©a
[
ödex
].
addr
,

2054 
m_CuºítD©a
[
ödex
].
poöt
);

2055 i‡(
NULL
 =
pym
)

2057  
NULL
;

2059 
m_CuºítD©a
[
ödex
].
vÆ
 = 
	`QSåög
("%1").
	`¨g
((
DWORD
)
pym
->
dVÆ_1Time
, 0, 'f', 0);

2067  &
m_CuºítD©a
[
ödex
] ;

2068 
	}
}

2077 
	gCPage_D©aQuîy
::
	$SëS€D©a
–
BYTE
 
ödex
, 
SOEDATA
 
d©a
)

2079 if–
ödex
 >
ONE_PAGE_DATANUM
 )

2084 
m_byCuºítS€Num
 = 
ödex
 + 1;

2086 
m_CuºítS€
[
ödex
].
BusNo
 = 
d©a
.BusNo;

2087 
m_CuºítS€
[
ödex
].
DevNo
 = 
d©a
.DevNo;

2088 
m_CuºítS€
[
ödex
].
D©aTy≥
 = 
d©a
.DataType;

2089 
	`°r˝y
(
m_CuºítS€
[
ödex
].
Loˇti⁄
,
d©a
.Location);

2090 
	`°r˝y
(
m_CuºítS€
[
ödex
].
C⁄ã¡
,
d©a
.Content);

2091 
	`°r˝y
(
m_CuºítS€
[
ödex
].
D©eTime
,
d©a
.DateTime);

2093 
	}
}

2102 
SOEDATA
 * 
	gCPage_D©aQuîy
::
	$GëS€D©a
–
BYTE
 
ödex
)

2104 if–
ödex
 >
m_byCuºítS€Num
 )

2106  
NULL
;

2109 if–
NULL
 =&
m_CuºítS€
[
ödex
])

2111  
NULL
;

2114  &
m_CuºítS€
[
ödex
];

2115 
	}
}

2124 
	gCPage_D©aQuîy
::
	$DøwD©aHód
(
QPaöãr
 *
pPaöãr
)

2126 
pPaöãr
->
	`ßve
();

2128 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[0][0] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("Â∫èÂè∑"));

2129 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[0][1] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("ÂÜÖÂÆπ"));

2130 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[0][3] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("‰ΩçÁΩÆ"));

2132 i‡–
DATAQUERY_REALDATA
 =
	`GëQuîyTy≥
())

2134 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[0][2] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("Êï∞ÂÄº"));

2137 if–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
() )

2139 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[0][2] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("Êó∂Èó¥"));

2142 if–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
() )

2144 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[0][2] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("Êó∂Èó¥"));

2147 
pPaöãr
->
	`ª°‹e
();

2149 
	}
}

2160 
	gCPage_D©aQuîy
::
	$DøwD©aIndex
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
 )

2162 
DWORD
 
∑gíum
 = 
	`GëCuºítPage
();

2163 
pPaöãr
->
	`ßve
();

2171 
DWORD
 
cuºít_ödex
 = 
ödex
 + (
∑gíum
 - 1 ) * 
ONE_PAGE_DATANUM
;

2172 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[
ödex
][0] , 
Qt
::
AlignCíãr
 , 
QSåög
::
	`numbî
(
cuºít_ödex
,10));

2174 
pPaöãr
->
	`ª°‹e
();

2177 
	}
}

2188 
	gCPage_D©aQuîy
::
	$DøwD©aC⁄ã¡
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
, 
QSåög
 
c⁄ã¡
)

2190 
pPaöãr
->
	`ßve
();

2194 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[
ödex
][1] , 
Qt
::
AlignCíãr
 , 
c⁄ã¡
);

2196 
pPaöãr
->
	`ª°‹e
();

2198 
	}
}

2207 
	gCPage_D©aQuîy
::
	$DøwD©aVÆue
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
, 
QSåög
 
vÆ
)

2209 
pPaöãr
->
	`ßve
();

2211 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[
ödex
][2] , 
Qt
::
AlignCíãr
 , 
vÆ
);

2213 
pPaöãr
->
	`ª°‹e
();

2215 
	}
}

2224 
	gCPage_D©aQuîy
::
	$DøwD©aPosôi⁄
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
, 
QSåög
 
pos
)

2226 
pPaöãr
->
	`ßve
();

2228 
pPaöãr
->
	`døwText
–
m_rcD©aDü∂ay
[
ödex
][3] , 
Qt
::
AlignCíãr
 , 
pos
);

2230 
pPaöãr
->
	`ª°‹e
();

2232 
	}
}

2241 
	gCPage_D©aQuîy
::
	$DøwD©a
–
QPaöãr
 *
pPaöãr
 )

2243 
	`DøwD©aHód
–
pPaöãr
 );

2245 i‡–
DATAQUERY_REALDATA
 =
	`GëQuîyTy≥
())

2248 
BYTE
 
i
=1; i<=
m_byCuºítD©aNum
; i++)

2250 
QUERY_REALTIME_DATA
 *
pd©a
 = 
	`GëQuîyD©a
–
i
 - 1 );

2254 i‡(
NULL
 =
pd©a
 )

2259 
	`DøwD©aIndex
–
pPaöãr
, 
i
 );

2260 
	`DøwD©aC⁄ã¡
–
pPaöãr
, 
i
, 
pd©a
->
c⁄ã¡
);

2261 
	`DøwD©aVÆue
(
pPaöãr
, 
i
, 
pd©a
->
vÆ
 );

2262 
	`DøwD©aPosôi⁄
(
pPaöãr
, 
i
, 
pd©a
->
pos
 );

2266 if–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
(Ë|| 
DATAQUERY_YXALARM
 == GetQueryType() )

2269 if–
m_bSñe˘AŒS€
 )

2271 
	`QuîyAŒS€
();

2272 
m_bSñe˘AŒS€
 = 
FALSE
;

2275 
BYTE
 
i
=1; i<=
m_byCuºítS€Num
; i++)

2277 
SOEDATA
 *
pS€
 = 
	`GëS€D©a
–
i
 - 1 );

2278 i‡(
NULL
 =
pS€
 )

2283 
	`DøwD©aIndex
–
pPaöãr
, 
i
 );

2284 
	`DøwD©aC⁄ã¡
–
pPaöãr
, 
i
, 
	`UTF8
(
pS€
->
C⁄ã¡
 ));

2285 
	`DøwD©aVÆue
(
pPaöãr
, 
i
, 
	`UTF8
(
pS€
->
D©eTime
 ) );

2286 
	`DøwD©aPosôi⁄
(
pPaöãr
, 
i
, 
	`UTF8
(
pS€
->
Loˇti⁄
 ) );

2290 
	}
}

2299 
BYTE
 
	gCPage_D©aQuîy
::
	$GëFuncAªaTy≥
–
QPoöt
 
±
)

2301 
size
 = –
m_rcFun˘i⁄
 ) / ( m_rcFunction[ 0 ] ) ;

2302 
i
=0; i < 
size
; i++)

2304 i‡–
m_rcFun˘i⁄
[
i
].
	`c⁄èös
(
±
) )

2306  
i
;

2311 
	}
}

2320 
	gCPage_D©aQuîy
::
	$ShowQuîyTy≥Ui
()

2322 
BYTE
 
ty≥
 = 
	`GëQuîyTy≥
();

2323 
ty≥
)

2325 
DATAQUERY_SOE
:

2326 
DATAQUERY_YXALARM
:

2328 i‡–!
m_toﬁBoxS€
->
	`isHiddí
() )

2333 
	`HideQuîyTy≥Ui
();

2334 
m_toﬁBoxS€
->
	`show
();

2338 
DATAQUERY_REALDATA
:

2340 i‡–!
m_åìRólTimeD©a
->
	`isHiddí
() )

2345 
	`HideQuîyTy≥Ui
();

2346 
m_åìRólTimeD©a
->
	`show
();

2352 
	}
}

2361 
	gCPage_D©aQuîy
::
	$HideQuîyTy≥Ui
()

2363 
m_åìRólTimeD©a
->
	`hide
();

2364 
m_toﬁBoxS€
->
	`hide
();

2365 
	}
}

2375 
	gCPage_D©aQuîy
::
	$TªeIãmCh™ge
–c⁄° 
QModñIndex
 &
ödex
)

2377 
QSènd¨dIãm
 *
pIãm
 = 
m_pModñ
->
	`ôemFromIndex
(
ödex
);

2378 
QSåög
 
°rTùs
 = "";

2379 
QVe˘‹
<
QUERY_REALTIME_PAGE
> 
∑ge
 ;

2380 
QUERY_TREE_ITEM_ATTR
 
©å
;

2384 
cuºít_ödex
 = 
pIãm
->
	`row
();

2386 
©å
.
ödex
 = 
cuºít_ödex
;

2388 i‡(
NULL
 !
pIãm
->
	`∑ª¡
())

2390 
QSènd¨dIãm
 *
pIãmP
 = 
pIãm
->
	`∑ª¡
();

2391 
∑ª¡_ödex
 = 
pIãmP
->
	`row
();

2407 
©å
.
∑ª¡
 = 
FALSE
;

2408 
©å
.
∑ª¡_ödex
 =Öarent_index;

2409 
©å
.
«me
 = 
pIãm
->
	`ãxt
();

2410 
©å
.
∑ª¡_«me
 = 
pIãmP
->
	`ãxt
();

2426 
©å
.
∑ª¡
 = 
TRUE
;

2427 
©å
.
∑ª¡_ödex
 = 0;

2428 
©å
.
«me
 = 
pIãm
->
	`ãxt
();

2434 
	`SëTªeIãmAâr
–
©å
 );

2438 
	`SëCuºítPage
(1);

2449 
	}
}

2458 
	gCPage_D©aQuîy
::
	$SëTªeIãmAâr
(
QUERY_TREE_ITEM_ATTR
 
©å
)

2460 
m_åìAâr
.
ödex
 = 
©å
.index;

2461 
m_åìAâr
.
∑ª¡
 = 
©å
.parent;

2462 
m_åìAâr
.
∑ª¡_ödex
 = 
©å
.parent_index;

2463 
m_åìAâr
.
«me
 = 
©å
.name;

2464 
m_åìAâr
.
∑ª¡_«me
 = 
©å
.parent_name;

2465 
	}
}

2474 
QUERY_TREE_ITEM_ATTR
 *
	gCPage_D©aQuîy
::
	$GëTªeIãmAâr
()

2476  &
m_åìAâr
;

2477 
	}
}

2487 
	gCPage_D©aQuîy
::
	$SëTªeIãmD©a
()

2489 
QSåög
 
°rTùs
 = "";

2490 
QVe˘‹
<
QUERY_REALTIME_PAGE
> 
∑ge
 ;

2491 
QUERY_TREE_ITEM_ATTR
 *
pTªeAâr
;

2492 
cuºít_ödex
;

2493 
DWORD
 
∑gíum
 = 
	`GëCuºítPage
();

2495 
pTªeAâr
 = 
	`GëTªeIãmAâr
();

2496 
cuºít_ödex
 = 
pTªeAâr
->
ödex
;

2498 i‡–!
pTªeAâr
->
∑ª¡
)

2500 
∑ª¡_ödex
 = 
pTªeAâr
->parent_index;

2503 
°rTùs
 = 
pTªeAâr
->
∑ª¡_«me


2507 + 
pTªeAâr
->
«me
;

2511 
	`SëTŸÆPage
(
m_ve˘‹CaböëTabÀ
[
∑ª¡_ödex
].
cúcuô
[
cuºít_ödex
].
∑gíum
);

2514 
∑ge
 = 
m_ve˘‹CaböëTabÀ
[
∑ª¡_ödex
].
cúcuô
[
cuºít_ödex
].page;

2519 
°rTùs
 = 
pTªeAâr
->
«me
;

2523 
	`SëTŸÆPage
(
m_ve˘‹CaböëTabÀ
[
cuºít_ödex
].
∑gíum
);

2526 
∑ge
 = 
m_ve˘‹CaböëTabÀ
[
cuºít_ödex
].page;

2530 
	`SëTùsSå
(
°rTùs
);

2532 if–0 =
∑ge
.
	`size
() )

2534 
m_byCuºítD©aNum
 = 0;

2536 
	`SëTŸÆPage
( 1 );

2537 
	`AfxRe‰eshS¸ìn
( );

2541 
i
=0; i<
∑ge
[
∑gíum
-1].
d©™um
; i++)

2543 
	`SëQuîyD©a
(
i
, 
∑ge
[
∑gíum
-1].
d©a
.
	`vÆue
(i));

2547 
	`AfxRe‰eshS¸ìn
( );

2549 
	}
}

2558 
	gCPage_D©aQuîy
::
	$SëDi•œyS€
()

2560 
BYTE
 
s€num
 = 0;

2561 
DWORD
 
dwD©aTŸÆNum
;

2563 
CDBa£M™agî
 *
pDBa£
 = 
	`AfxGëDBa£
();

2564 i‡–
NULL
 =
pDBa£
 )

2566 
	`¥öt
((*)"NULL ==ÖDBase\n");

2570 
DWORD
 
∑gíum
 = 
	`GëCuºítPage
();

2571 i‡–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
())

2573 
dwD©aTŸÆNum
 = 
m_dwS€Num
;

2575 i‡–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
())

2577 
dwD©aTŸÆNum
 = 
m_dwYxAœrmNum
;

2580 i‡(–
∑gíum
-1 ) * 
ONE_PAGE_DATANUM
 > 
dwD©aTŸÆNum
 )

2585 i‡–
∑gíum
 * 
ONE_PAGE_DATANUM
 > 
dwD©aTŸÆNum
 )

2587 
s€num
 = 
dwD©aTŸÆNum
 - (–
∑gíum
-1 ) * 
ONE_PAGE_DATANUM
);

2591 
s€num
 = 
ONE_PAGE_DATANUM
;

2595 if–0 =
s€num
 )

2597 
m_byCuºítS€Num
 = 0;

2600 
BYTE
 
i
=0; i < 
s€num
; i++)

2602 
SOEDATA
 *
pS€
 = (SOEDATA *)
pDBa£
->
	`GëD©a
–(
∑gíum
 - 1Ë* 
ONE_PAGE_DATANUM
 + 
i
);

2603 if–
NULL
 =
pS€
 )

2605 
	`¥ötf
("NULL ==ÖSoe\n");

2609 
	`SëS€D©a
(
i
, *
pS€
);

2613 
	}
}

2623 
	gCPage_D©aQuîy
::
	$BegöTimeCh™ged
–c⁄° 
QD©eTime
 &
d©ëime
)

2625 
QD©e
 
d©e
 = 
d©ëime
.
	`d©e
();

2626 
QTime
 
time
 = 
d©ëime
.
	`time
();

2628 
m_edôBegöYór
->
	`£tText
–
QSåög
::
	`numbî
(
d©e
.
	`yór
(), 10 ));

2629 
m_edôBegöM⁄th
->
	`£tText
(
QSåög
::
	`numbî
(
d©e
.
	`m⁄th
(), 10));

2630 
m_edôBegöDay
->
	`£tText
(
QSåög
::
	`numbî
(
d©e
.
	`day
(), 10));

2631 
m_edôBegöHour
->
	`£tText
(
QSåög
::
	`numbî
(
time
.
	`hour
(), 10));

2632 
m_edôBegöMöuã
->
	`£tText
(
QSåög
::
	`numbî
(
time
.
	`möuã
(), 10));

2633 
m_edôBegöSec⁄d
->
	`£tText
(
QSåög
::
	`numbî
(
time
.
	`£c⁄d
(), 10));

2634 
	}
}

2643 
	gCPage_D©aQuîy
::
	$EndTimeCh™ged
–c⁄° 
QD©eTime
 &
d©ëime
)

2645 
QD©e
 
d©e
 = 
d©ëime
.
	`d©e
();

2646 
QTime
 
time
 = 
d©ëime
.
	`time
();

2648 
m_edôEndYór
->
	`£tText
–
QSåög
::
	`numbî
(
d©e
.
	`yór
(), 10 ));

2649 
m_edôEndM⁄th
->
	`£tText
(
QSåög
::
	`numbî
(
d©e
.
	`m⁄th
(), 10));

2650 
m_edôEndDay
->
	`£tText
(
QSåög
::
	`numbî
(
d©e
.
	`day
(), 10));

2651 
m_edôEndHour
->
	`£tText
(
QSåög
::
	`numbî
(
time
.
	`hour
(), 10));

2652 
m_edôEndMöuã
->
	`£tText
(
QSåög
::
	`numbî
(
time
.
	`möuã
(), 10));

2653 
m_edôEndSec⁄d
->
	`£tText
(
QSåög
::
	`numbî
(
time
.
	`£c⁄d
(), 10));

2654 
	}
}

2663 
	gCPage_D©aQuîy
::
	$SlŸQuîyS€ByTime
()

2665 
chBegöTime
[256] = "";

2666 
chEndTime
[256] = "";

2668 
	`•rötf
–
chBegöTime
,"%.2d-%.2d-%.2d %.2d:%.2d:%.2d",

2669 
m_dtBegö
->
	`d©e
().
	`yór
(),

2670 
m_dtBegö
->
	`d©e
().
	`m⁄th
(),

2671 
m_dtBegö
->
	`d©e
().
	`day
(),

2672 
m_dtBegö
->
	`time
().
	`hour
(),

2673 
m_dtBegö
->
	`time
().
	`möuã
(),

2674 
m_dtBegö
->
	`time
().
	`£c⁄d
()

2677 
	`•rötf
–
chEndTime
,"%.2d-%.2d-%.2d %.2d:%.2d:%.2d",

2678 
m_dtEnd
->
	`d©e
().
	`yór
(),

2679 
m_dtEnd
->
	`d©e
().
	`m⁄th
(),

2680 
m_dtEnd
->
	`d©e
().
	`day
(),

2681 
m_dtEnd
->
	`time
().
	`hour
(),

2682 
m_dtEnd
->
	`time
().
	`möuã
(),

2683 
m_dtEnd
->
	`time
().
	`£c⁄d
()

2686 
	`¥öt
((*)
chBegöTime
);

2687 
	`¥öt
((*)
chEndTime
);

2689 
CDBa£M™agî
 *
pDBa£
 = 
	`AfxGëDBa£
();

2690 i‡–
NULL
 =
pDBa£
 )

2692 
	`¥öt
((*)"NULL ==ÖDBase\n");

2696 i‡–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
() )

2698 
m_dwS€Num
 = 
pDBa£
->
	`Sñe˘Fú°PageOfD©aByTime
(
ONE_PAGE_DATANUM
, 
chBegöTime
, 
chEndTime
, 
DBASE_SOE_DATATYPE
);

2699 
	`SëCuºítPage
(1);

2700 
	`SëTŸÆPage
(1);

2701 
	`AfxRe‰eshS¸ìn
();

2702 if–
m_dwS€Num
 < 
ONE_PAGE_DATANUM
 )

2706 
m_dwS€Num
 = 
pDBa£
->
	`Sñe˘D©aByTime
(
chBegöTime
, 
chEndTime
, 
DBASE_SOE_DATATYPE
);

2707 
DWORD
 
tŸÆ∑ge
 = 
m_dwS€Num
 / 
ONE_PAGE_DATANUM
;

2708 if–0 !
m_dwS€Num
 % 
ONE_PAGE_DATANUM
 )

2710 
tŸÆ∑ge
++;

2713 
	`SëTŸÆPage
–
tŸÆ∑ge
);

2716 i‡–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
() )

2718 
m_dwYxAœrmNum
 = 
pDBa£
->
	`Sñe˘Fú°PageOfD©aByTime
(
ONE_PAGE_DATANUM
, 
chBegöTime
, 
chEndTime
, 
DBASE_YXALARM_DATATYPE
);

2719 
	`SëCuºítPage
(1);

2720 
	`SëTŸÆPage
(1);

2721 
	`AfxRe‰eshS¸ìn
();

2722 if–
m_dwYxAœrmNum
 < 
ONE_PAGE_DATANUM
 )

2726 
m_dwYxAœrmNum
 = 
pDBa£
->
	`Sñe˘D©aByTime
(
chBegöTime
, 
chEndTime
, 
DBASE_YXALARM_DATATYPE
);

2727 
DWORD
 
tŸÆ∑ge
 = 
m_dwYxAœrmNum
 / 
ONE_PAGE_DATANUM
;

2728 if–0 !
m_dwYxAœrmNum
 % 
ONE_PAGE_DATANUM
 )

2730 
tŸÆ∑ge
++;

2733 
	`SëTŸÆPage
–
tŸÆ∑ge
);

2735 
	}
}

2744 
	gCPage_D©aQuîy
::
	$QuîyAŒS€
()

2746 
CDBa£M™agî
 *
pDBa£
 = 
	`AfxGëDBa£
();

2747 i‡–
NULL
 =
pDBa£
 )

2749 
	`¥öt
((*)"NULL ==ÖDBase\n");

2753 i‡–
DATAQUERY_SOE
 =
	`GëQuîyTy≥
() )

2755 
m_dwS€Num
 = 
pDBa£
->
	`Sñe˘Fú°PageOfAŒD©a
(
ONE_PAGE_DATANUM
,
DBASE_SOE_DATATYPE
);

2756 
	`SëCuºítPage
(1);

2757 
	`SëTŸÆPage
(1);

2758 
	`AfxRe‰eshS¸ìn
();

2759 if–
m_dwS€Num
 < 
ONE_PAGE_DATANUM
 )

2763 
m_dwS€Num
 = 
pDBa£
->
	`Sñe˘AŒD©a
–
DBASE_SOE_DATATYPE
 );

2764 
DWORD
 
tŸÆ∑ge
 = 
m_dwS€Num
 / 
ONE_PAGE_DATANUM
;

2765 if–0 !
m_dwS€Num
 % 
ONE_PAGE_DATANUM
 )

2767 
tŸÆ∑ge
++;

2770 
	`SëTŸÆPage
–
tŸÆ∑ge
);

2772 i‡–
DATAQUERY_YXALARM
 =
	`GëQuîyTy≥
() )

2774 
m_dwYxAœrmNum
 = 
pDBa£
->
	`Sñe˘Fú°PageOfAŒD©a
(
ONE_PAGE_DATANUM
,
DBASE_YXALARM_DATATYPE
);

2775 
	`SëCuºítPage
(1);

2776 
	`SëTŸÆPage
(1);

2777 
	`AfxRe‰eshS¸ìn
();

2778 if–
m_dwYxAœrmNum
 < 
ONE_PAGE_DATANUM
 )

2782 
m_dwYxAœrmNum
 = 
pDBa£
->
	`Sñe˘AŒD©a
–
DBASE_YXALARM_DATATYPE
 );

2783 
DWORD
 
tŸÆ∑ge
 = 
m_dwYxAœrmNum
 / 
ONE_PAGE_DATANUM
;

2784 if–0 !
m_dwYxAœrmNum
 % 
ONE_PAGE_DATANUM
 )

2786 
tŸÆ∑ge
++;

2789 
	`SëTŸÆPage
–
tŸÆ∑ge
);

2792 
	}
}

	@Pages/cpage_dataquery.h

1 #i‚de‡
CPAGE_DATAQUERY_H


2 
	#CPAGE_DATAQUERY_H


	)

5 
	~"˝age.h
"

7 
	~<QVe˘‹
>

8 
	~<QTªeVõw
>

9 
	~<QSènd¨dIãm
>

10 
	~<QSènd¨dIãmModñ
>

11 
	~<QToﬁBox
>

12 
	~<QD©eTimeEdô
>

13 
	~<QPushBuâ⁄
>

14 
	~<QLabñ
>

15 
	~<QComboBox
>

16 
	~<QLöeEdô
>

17 
	~<QDülog
>

18 
	~<QObje˘
>

19 
	~<QD©eTime
>

22 
	#DATAQUERY_REALDATA
 0x01

	)

23 
	#DATAQUERY_SOE
 0x02

	)

24 
	#DATAQUERY_YXALARM
 0x03

	)

27 
	#ONE_PAGE_DATANUM
 14

	)

31 
	s_QUERY_REALTIME_DATA


33 
WORD
 
	mödex
;

34 
QSåög
 
	mc⁄ã¡
;

37 
BYTE
 
	mty≥
;

38 
WORD
 
	mbu¶öe
;

39 
WORD
 
	maddr
;

40 
WORD
 
	mpoöt
;

42 
QSåög
 
	mvÆ
;

44 
QSåög
 
	mpos
;

46 
_QUERY_REALTIME_DATA
()

48 
	mbu¶öe
 = 0xffff;

49 
	maddr
 = 0;

50 
	mpoöt
 = 0;

51 
	mödex
 = 0;

52 
	mty≥
 = 0;

53 
	mc⁄ã¡
 = 
QSåög
("");

54 
	mpos
 = 
QSåög
("");

55 
	mvÆ

QSåög
("");

58 }
	tQUERY_REALTIME_DATA
;

61 
	s_QUERY_REALTIME_PAGE


63 
	md©™um
;

64 
	mQVe˘‹
<
	mQUERY_REALTIME_DATA
> 
	md©a
;

65 }
	tQUERY_REALTIME_PAGE
;

68 
	s_QUERY_REALTIME_CIRCUIT


70 
WORD
 
	mödex
;

71 
	m«me
[100];

73 
	m∑gíum
;

74 
	mQVe˘‹
<
	mQUERY_REALTIME_PAGE
> 
	m∑ge
;

75 }
	tQUERY_REALTIME_CIRCUIT
;

77 
	s_QUERY_REALTIME_CABINET


79 
WORD
 
	mödex
;

80 
	m«me
[100];

82 
	m∑gíum
;

83 
	mQVe˘‹
<
	mQUERY_REALTIME_PAGE
> 
	m∑ge
;

85 
	mcúcuônum
;

86 
	mQVe˘‹
<
	mQUERY_REALTIME_CIRCUIT
> 
	mcúcuô
;

87 }
	tQUERY_REALTIME_CABINET
 ;

90 
	s_QUERY_TREE_ITEM_ATTR


92 
	mödex
;

93 
BOOL
 
	m∑ª¡
;

94 
	m∑ª¡_ödex
;

95 
QSåög
 
	m«me
;

96 
QSåög
 
	m∑ª¡_«me
;

98 
_QUERY_TREE_ITEM_ATTR
()

100 
	mödex
 = 0;

101 
	m∑ª¡
 = 
TRUE
;

102 
	m∑ª¡_ödex
 = 0;

103 
	m«me
 = 
QSåög
("");

104 
	m∑ª¡_«me
 = 
QSåög
("");

106 }
	tQUERY_TREE_ITEM_ATTR
;

109 ˛as†
	cCPage_D©aQuîy
 : 
public
 
CPage


111 
Q_OBJECT


113 
public
:

114 
ex∂icô
 
CPage_D©aQuîy
–
BYTE
 
byTy≥
 );

115 
vútuÆ
 
BOOL
 
AddD©a
–
LPVOID
 
pVoid
 ) ;

116 
vútuÆ
 
BOOL
 
DøwPage
–
QPaöãr
 * 
pPaöãr
 );

117 
vútuÆ
 
BOOL
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

118 ~
CPage_D©aQuîy
();

122 
	m¥iv©e
:

124 
CÀ¨D©a
();

126 
BOOL
 
InôUi
( );

128 
DñëeUi
( );

131 
BOOL
 
InôUiPics
( );

135 
BOOL
 
InôUiPosôi⁄
( );

139 
BOOL
 
InôD©aTabÀ
( );

141 
DñëeD©aTabÀ
();

144 
BOOL
 
InôCaböëTabÀ
();

146 
BOOL
 
InôCúcuôTabÀ
(
PCABINET
 
pCaböë
,

147 
QUERY_REALTIME_CABINET
 *
pˇböëabÀ
);

150 
BOOL
 
InôPageTabÀ
–
PCABINET
 
pCaböë
,

151 
QUERY_REALTIME_CABINET
 *
pˇböëabÀ
,

152 
QUERY_REALTIME_CIRCUIT
 *
pcúcuôabÀ
,

153 
BYTE
 
Êag
);

157 
BOOL
 
InôPageTabÀD©a
(
PSINGLECIRCUIT
 
pCúcuô
,

158 
QVe˘‹
<
QUERY_REALTIME_PAGE
> *
µage
,

159 
BYTE
 
Êag


162 
BOOL
 
InôUiTªeVõw
( );

164 
DñëeUiTªeVõw
();

166 
BOOL
 
InôUiTªeVõwbyCfg
–
QSènd¨dIãmModñ
 *
pModÀ
 );

169 
BOOL
 
InôUiS€ToﬁBox
( );

171 
DñëeUiS€ToﬁBox
( );

173 
BOOL
 
InôUiS€ToﬁBoxByTime
();

175 
DñëeUiS€ToﬁBoxByTime
( );

177 
BOOL
 
InôUiS€ToﬁBoxByBusLöe
();

179 
DñëeUiS€ToﬁBoxByBusLöe
( );

181 
	m¥iv©e
:

183 
SëTùsSå
–
QSåög
 
°r
);

185 
QSåög
 
GëTùsSå
( );

187 
DøwTùs
–
QPaöãr
 *
pPaöãr
 );

190 
SëCuºítPage
–
DWORD
 
dwCuºítPage
 );

192 
DWORD
 
GëCuºítPage
( );

194 
SëTŸÆPage
–
DWORD
 
dwTŸÆPage
 );

196 
DWORD
 
GëTŸÆPage
( );

198 
DøwPages
–
QPaöãr
 *
pPaöãr
);

201 
PageUp
();

203 
PageDown
();

206 
SëQuîyTy≥
–
BYTE
 
ty≥
 );

208 
BYTE
 
GëQuîyTy≥
( );

210 
DøwQuîyTy≥PicsN⁄e
–
QPaöãr
 *
pPaöãr
 );

212 
DøwQuîyTy≥Pic
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ty≥
, 
BOOL
 
Êag
 );

214 
DøwQuîyTy≥Pics
–
QPaöãr
 *
pPaöãr
 );

217 
SëQuîyD©a
–
BYTE
 
ödex
, 
QUERY_REALTIME_DATA
 
d©a
 );

219 
QUERY_REALTIME_DATA
 *
GëQuîyD©a
–
BYTE
 
ödex
 );

221 
DøwD©aHód
–
QPaöãr
 *
pPaöãr
 );

223 
DøwD©aIndex
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
 );

225 
DøwD©aC⁄ã¡
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
 , 
QSåög
 
c⁄ã¡
);

227 
DøwD©aVÆue
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
, 
QSåög
 
vÆ
);

229 
DøwD©aPosôi⁄
–
QPaöãr
 *
pPaöãr
, 
BYTE
 
ödex
,
QSåög
 
posôi⁄
 );

231 
SëS€D©a
–
BYTE
 
ödex
, 
SOEDATA
 
d©a
 );

233 
SOEDATA
 *
GëS€D©a
–
BYTE
 
ödex
 );

235 
DøwD©a
–
QPaöãr
 *
pPaöãr
 );

238 
SëTªeIãmAâr
–
QUERY_TREE_ITEM_ATTR
 
©å
);

240 
QUERY_TREE_ITEM_ATTR
 *
GëTªeIãmAâr
();

242 
SëTªeIãmD©a
( );

244 
SëDi•œyS€
();

245 
	m¥iv©e
:

247 
BYTE
 
GëFuncAªaTy≥
–
QPoöt
 
±
);

250 
ShowQuîyTy≥Ui
( );

252 
HideQuîyTy≥Ui
( );

254 
	m¥iv©e
:

255 
QuîyAŒS€
( );

257 
¥iv©e
 
	m¶Ÿs
:

259 
TªeIãmCh™ge
(c⁄° 
QModñIndex
 &
ödex
);

261 
BegöTimeCh™ged
(c⁄° 
QD©eTime
 &
d©ëime
);

263 
EndTimeCh™ged
(c⁄° 
QD©eTime
 &
d©ëime
);

265 
SlŸQuîyS€ByTime
( );

268 
	m¥iv©e
:

270 
QSåög
 
m_°rPicS€Sñe˘
;

271 
QSåög
 
	mm_°rPicS€N⁄eSñe˘
;

274 
QSåög
 
	mm_°rPicRólTimeSñe˘
;

275 
QSåög
 
	mm_°rPicRólTimeN⁄eSñe˘
;

278 
QSåög
 
	mm_°rPicYxAœrmSñe˘
;

279 
QSåög
 
	mm_°rPicYxAœrmN⁄eSñe˘
;

282 
QRe˘
 
	mm_rcToﬁTùs
;

284 
QRe˘
 
	mm_rcPageInfo
;

286 
QRe˘
 
	mm_rcFun˘i⁄
[7];

287 
	ercNavig©i⁄


290 
	mPAGEUP
 = 0,

291 
	mPAGEDOWN
,

292 
	mBACKHOME
,

293 
	mQUERYSOE
,

294 
	mQUERYREALDATA
,

295 
	mLOGIN
,

296 
	mQUERYYXALARM


300 
QRe˘
 
	gm_rcD©aDü∂ay
[15][4];

311 
	gQVe˘‹
<
	gQUERY_REALTIME_CABINET
> 
	gm_ve˘‹CaböëTabÀ
;

312 
QUERY_REALTIME_DATA
 
	gm_CuºítD©a
[
ONE_PAGE_DATANUM
];

313 
BYTE
 
	gm_byCuºítD©aNum
;

316 
SOEDATA
 
	gm_CuºítS€
[
ONE_PAGE_DATANUM
];

317 
BYTE
 
	gm_byCuºítS€Num
;

318 
BOOL
 
	gm_bSñe˘AŒS€
;

322 
QTªeVõw
 *
	gm_åìRólTimeD©a
;

324 
QSènd¨dIãmModñ
 *
	gm_pModñ
;

326 
QUERY_TREE_ITEM_ATTR
 
	gm_åìAâr
;

329 
QToﬁBox
 *
	gm_toﬁBoxS€
;

331 
QWidgë
 *
	gm_widgëS€Bytime
;

333 
QPushBuâ⁄
 *
	gm_buâ⁄TimeBegö
;

334 
QDülog
 *
	gm_dülogTimeBegö
;

335 
QD©eTimeEdô
 *
	gm_dtBegö
;

336 
QLöeEdô
 *
	gm_edôBegöYór
;

337 
QLabñ
 *
	gm_œbñBegöYór
;

338 
QLöeEdô
 *
	gm_edôBegöM⁄th
;

339 
QLabñ
 *
	gm_œbñBegöM⁄th
;

340 
QLöeEdô
 *
	gm_edôBegöDay
;

341 
QLabñ
 *
	gm_œbñBegöDay
;

342 
QLöeEdô
 *
	gm_edôBegöHour
;

343 
QLabñ
 *
	gm_œbñBegöHour
;

344 
QLöeEdô
 *
	gm_edôBegöMöuã
;

345 
QLabñ
 *
	gm_œbñBegöMöuã
;

346 
QLöeEdô
 *
	gm_edôBegöSec⁄d
;

347 
QLabñ
 *
	gm_œbñBegöSec⁄d
;

350 
QPushBuâ⁄
 *
	gm_buâ⁄TimeEnd
;

351 
QDülog
 *
	gm_dülogTimeEnd
;

352 
QD©eTimeEdô
 *
	gm_dtEnd
;

353 
QLöeEdô
 *
	gm_edôEndYór
;

354 
QLabñ
 *
	gm_œbñEndYór
;

355 
QLöeEdô
 *
	gm_edôEndM⁄th
;

356 
QLabñ
 *
	gm_œbñEndM⁄th
;

357 
QLöeEdô
 *
	gm_edôEndDay
;

358 
QLabñ
 *
	gm_œbñEndDay
;

359 
QLöeEdô
 *
	gm_edôEndHour
;

360 
QLabñ
 *
	gm_œbñEndHour
;

361 
QLöeEdô
 *
	gm_edôEndMöuã
;

362 
QLabñ
 *
	gm_œbñEndMöuã
;

363 
QLöeEdô
 *
	gm_edôEndSec⁄d
;

364 
QLabñ
 *
	gm_œbñEndSec⁄d
;

366 
QPushBuâ⁄
 *
	gm_dtOk
;

369 
QWidgë
 *
	gm_widgëS€ByBusLöe
;

371 
QLabñ
 *
	gm_œbñBusLöe
;

372 
QComboBox
 *
	gm_boxBusLöe
;

374 
QLabñ
 *
	gm_œbñAddr
;

375 
QComboBox
 *
	gm_boxAddr
;

377 
QLabñ
 *
	gm_œbñPoöt
;

378 
QComboBox
 *
	gm_boxPoöt
;

380 
QPushBuâ⁄
 *
	gm_BusLöeOk
;

382 
	g¥iv©e
:

384 
QSåög
 
m_°rTùs
;

386 
DWORD
 
	gm_dwCuºítPage
;

388 
DWORD
 
	gm_dwS€CuºítPage
;

390 
DWORD
 
	gm_dwYxAœrmCuºítPage
;

392 
DWORD
 
	gm_dwTŸÆPage
;

394 
DWORD
 
	gm_dwS€TŸÆPage
;

396 
DWORD
 
	gm_dwYxAœrmTŸÆPage
;

398 
BYTE
 
	gm_byCuºítQuîyTy≥
;

400 
DWORD
 
	gm_dwS€Num
 ;

402 
DWORD
 
	gm_dwYxAœrmNum
 ;

	@Pages/cpage_diagnostic.cpp

1 
	~"˝age_dügno°ic.h
"

3 
	gCPage_Dügno°ic
::
	$CPage_Dügno°ic
–
BYTE
 
byTy≥
 ):
	$CPage
–
byTy≥
 )

5 
m_°rPic
 += "4ÈÄöËÆØËØäÊñ≠-1.jpg";

7 
MesßgeTextEdô
 = 
√w
 
	`QTextEdô
(
	`AfxGëWidgë
());

8 
MesßgeTextEdô
->
	`£tWödowFœgs
(
Qt
::
FømñessWödowHöt
 );

9 
MesßgeTextEdô
->
	`move
(153,87);

10 
MesßgeTextEdô
->
	`£tFixedSize
(615,431);

11 
QPÆëã
 
∂
 = 
MesßgeTextEdô
->
	`∑Àâe
();

12 
∂
.
	`£tBrush
(
QPÆëã
::
Ba£
,
	`QBrush
(
	`QCﬁ‹
(255,0,0,0)));

13 
MesßgeTextEdô
->
	`£tPÆëã
(
∂
);

14 
QF⁄t
 
f⁄t
 = 
MesßgeTextEdô
->
	`f⁄t
();

15 
f⁄t
.
	`£tPixñSize
(20);

16 
MesßgeTextEdô
->
	`£tF⁄t
(
f⁄t
);

17 
MesßgeTextEdô
->
	`£tVisibÀ
(
Ál£
);

18 
MesßgeTextEdô
->
	`£tRódO∆y
(
åue
);

19 
MesßgeTextEdô
->
	`documít
()->
	`£tMaximumBlockCou¡
(2000);

21 
BusNoComboBox
 = 
√w
 
	`QComboBox
(
	`AfxGëWidgë
());

22 
BusNoComboBox
->
	`move
(130+70,30);

23 
BusNoComboBox
->
	`£tFixedSize
(70,30);

24 
BusNoComboBox
->
	`£tEdôabÀ
(
FALSE
);

25 
BusNoComboBox
->
	`£tMaxVisibÀIãms
(5);

27 
BusNoComboBox
->
	`£tStyÀShìt
("QComboBox{border:1px solidÑed;background-color:rgb(96, 96, 96);color:red;}"

32 
BusNoComboBox
->
	`£tVõw
(
√w
 
	`QLi°Võw
());

33 
BusNoComboBox
->
	`£tVisibÀ
(
Ál£
);

35 
DevAddrComboBox
 = 
√w
 
	`QComboBox
(
	`AfxGëWidgë
());

36 
DevAddrComboBox
->
	`move
(130+210,30);

37 
DevAddrComboBox
->
	`£tFixedSize
(70,30);

38 
DevAddrComboBox
->
	`£tEdôabÀ
(
FALSE
);

39 
DevAddrComboBox
->
	`£tMaxVisibÀIãms
(5);

40 
DevAddrComboBox
->
	`£tStyÀShìt
(
BusNoComboBox
->
	`°yÀShìt
());

41 
DevAddrComboBox
->
	`£tVõw
(
√w
 
	`QLi°Võw
());

42 
DevAddrComboBox
->
	`£tVisibÀ
(
Ál£
);

44 
	`c⁄√˘
(
BusNoComboBox
 , 
	`SIGNAL
(
	`a˘iv©ed
()Ë, 
this
 , 
	`SLOT
(
	`¶Ÿs_BusNoCh™ge
()));

45 
	`c⁄√˘
(
DevAddrComboBox
 , 
	`SIGNAL
(
	`a˘iv©ed
()Ë, 
this
 , 
	`SLOT
(
	`¶Ÿs_DevAddrCh™ge
()));

46 
	`c⁄√˘
(
this
 , 
	`SIGNAL
(
	`sig«l_MesßgeShow
(
QSåög
)Ë,Åhi†, 
	`SLOT
(
	`¶Ÿs_MesßgeShow
(QString)));

48 
Dügno°icO±i⁄
 = 
DATAGRAM_PAGE
;

49 
CheckSèã
 = 
TRUE
;

50 
MesßgeShow
 = 
TRUE
;

51 
MesßgeF‹m©
 = 
HEX_FOEMAT
;

52 
Ch™√lNoRe˘Show
 = 
FALSE
;

53 
DevAddªssRe˘Show
 = 
FALSE
;

54 
CheckSèãRe˘Show
 = 
FALSE
;

55 
MesßgeShowRe˘Show
 = 
FALSE
;

56 
MesßgeF‹m©Re˘Show
 = 
FALSE
;

57 
Ch™√lNo
 = 9;

58 
DevAddªss
 = 3;

59 
Ch™√lNoAŒNum
 = 9;

60 
DevAddªssAŒNum
 = 3;

61 
	`mem£t
–&
sBusNoD©a
 , 0 , (sBusNoData) );

63 
	`mem£t
–
D©agømRñó£P©h
 , 0 , (DatagramReleasePath) );

64 
	`mem˝y
–
D©agømRñó£P©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-Êä•ÊñáÊòæÁ§∫.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-Êä•ÊñáÊòæÁ§∫.jpg"));

65 
	`mem£t
–
D©agømPªssP©h
 , 0 , (DatagramPressPath) );

66 
	`mem˝y
–
D©agømPªssP©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-Êä•ÊñáÊòæÁ§∫.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-Êä•ÊñáÊòæÁ§∫.jpg"));

68 
	`mem£t
–
CommunSèãRñó£P©h
 , 0 , (CommunStateReleasePath) );

69 
	`mem˝y
–
CommunSèãRñó£P©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-ÈÄöËÆØÁä∂ÊÄÅ.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-ÈÄöËÆØÁä∂ÊÄÅ.jpg"));

70 
	`mem£t
–
CommunSèãPªssP©h
 , 0 , (CommunStatePressPath) );

71 
	`mem˝y
–
CommunSèãPªssP©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-ÈÄöËÆØÁä∂ÊÄÅ.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-ÈÄöËÆØÁä∂ÊÄÅ.jpg"));

73 
Dügno°icPageRe˘
[
DATAGRAM_RECT
].
	`£tRe˘
(40 , 113 , 106 , 51);

74 
Dügno°icPageRe˘
[
COMMUNINICATION_STATE_RECT
].
	`£tRe˘
(40 , 183 , 106 , 51);

76 
Dügno°icPageRe˘
[
CHANNEL_TEXT_RECT
].
	`£tRe˘
(130,30, 70, 30);

77 
Dügno°icPageRe˘
[
CHANNEL_RECT
].
	`£tRe˘
(130+70,30, 70, 30);

78 
Dügno°icPageRe˘
[
DEVADDR_TEXT_RECT
].
	`£tRe˘
(130+140,30, 70, 30);

79 
Dügno°icPageRe˘
[
DEVADDR_RECT
].
	`£tRe˘
(130+210,30, 70, 30);

80 
Dügno°icPageRe˘
[
CHECK_RECT
].
	`£tRe˘
(135+280,30, 65, 60);

81 
Dügno°icPageRe˘
[
HEX_OR_ASCII
].
	`£tRe˘
(135+350,30, 65, 60);

82 
Dügno°icPageRe˘
[
START_OR_END_RECT
].
	`£tRe˘
(135+420,30, 65, 60);

83 
Dügno°icPageRe˘
[
TX_RECT
].
	`£tRe˘
(130+490,30, 75, 30);

84 
Dügno°icPageRe˘
[
RX_RECT
].
	`£tRe˘
(130+490,60, 75, 30);

86 
DevSèãRe˘
.
	`£tRe˘
(153,87,615,431);

87 
RxTxRe˘
.
	`£tRe˘
(130+490,30,70,60);

89 
TimeBegö
 = 0;

90 
m_°r
.
	`˛ór
();

91 
	}
}

93 
BOOL
 
	gCPage_Dügno°ic
::
	$AddD©a
–
LPVOID
 
pVoid
 )

95 
	`gëBusNoAndDevAddr
();

97 
i
=0;

98 
i
=0;i<
sBusNoD©a
.
BusNum
;i++)

100 
tmpbuf
[16]="";

101 
	`•rötf
(
tmpbuf
,"%d",
sBusNoD©a
.
DevAddrOfBus
[
i
].
BusNo
+1);

103 
BusNoComboBox
->
	`addIãm
(
	`UTF8
(
tmpbuf
));

105 
BusNoComboBox
->
	`£tCuºítIndex
(0);

106 
	`¶Ÿs_BusNoCh™ge
(0);

108  
FALSE
 ;

109 
	}
}

111 
BOOL
 
	gCPage_Dügno°ic
::
	$gëBusNoAndDevAddr
()

113 
QBUS_ARRAY
 * 
pBusAºay
 = 
	`AfxGëBusAºay
() ;

114 if–!
pBusAºay
 )

116 
	`Q_ASSERT
–
FALSE
 ) ;

117  
FALSE
 ;

120 
size
 = 
pBusAºay
->
	`size
() ;

121 if–!
size
 )

123 
	`Q_ASSERT
–
FALSE
 ) ;

124  
FALSE
 ;

127 
i
=0;

128  
i
=0;i<
size
;i++ )

130 
QBUS_ARRAY
::
ôî©‹
 
ô‹
 = 
pBusAºay
->
	`föd
–
i
 ) ;

131 if–
ô‹
 =
pBusAºay
->
	`íd
() )

132  
NULL
 ;

133 
PBUS_LINEST
 
tmpBus
 = 
ô‹
.
	`vÆue
() ;

134 if–
tmpBus
->
byBusTy≥
 !
BUS_PAUSE
 )

136 
DevSize
 = 
tmpBus
->
DevAºay
.
	`size
() ;

137 if–!
DevSize
 )

139 
	`Q_ASSERT
–
FALSE
 ) ;

140  
FALSE
 ;

142 
j
=0;

143 if–
tmpBus
->
byBusTy≥
 =
BUS_TRANS
 )

145 
sBusNoD©a
.
BusTønsNo
[sBusNoD©a.
BusTønsNum
++] = 
tmpBus
->
wBusNo
;

148 
QDEV_ARRAY
::
ôî©‹
 
Begö_ô‹
 = 
tmpBus
->
DevAºay
.
	`begö
() ;

149 
QDEV_ARRAY
::
ôî©‹
 
End_ô‹
 = 
tmpBus
->
DevAºay
.
	`íd
() ;

151  ;
Begö_ô‹
 !
End_ô‹
 ; Begin_itor++ )

153 
PDEVST
 
pDev
 = 
Begö_ô‹
.
	`vÆue
() ;

154 if–!
pDev
 ||ÖDev->
wAddr
 !
Begö_ô‹
.
	`key
( ) )

155  
FALSE
 ;

156 
j
++;

157 
PDEVST
 
tmpDev
 = 
Begö_ô‹
.
	`vÆue
() ;

158 
sBusNoD©a
.
DevAddrOfBus
[sBusNoD©a.
BusNum
].
BusNo
 = 
tmpDev
->
wBusNo
;

159 
sBusNoD©a
.
DevAddrOfBus
[sBusNoD©a.
BusNum
].
DevAddr
[
j
-1] = 
tmpDev
->
wAddr
;

160 
sBusNoD©a
.
DevAddrOfBus
[sBusNoD©a.
BusNum
].
DevNum
++;

165 
sBusNoD©a
.
BusNum
++;

169  
TRUE
;

170 
	}
}

172 
BOOL
 
	gCPage_Dügno°ic
::
	$DøwPage
–
QPaöãr
 * 
pPaöãr
 )

175 
CPage
::
	`DøwPage
–
pPaöãr
 ) ;

176 
	`DøwDügno°icPage
(
pPaöãr
);

177 if–
BusNoComboBox
->
	`isHiddí
() )

179 
BusNoComboBox
->
	`£tVisibÀ
(
åue
);

181 if–
Dügno°icO±i⁄
 =
DATAGRAM_PAGE
 )

183 if–
DevAddrComboBox
->
	`isHiddí
() )

184 
DevAddrComboBox
->
	`£tVisibÀ
(
åue
);

186 if–
MesßgeTextEdô
->
	`isHiddí
() )

187 
MesßgeTextEdô
->
	`£tVisibÀ
(
åue
);

189  
FALSE
 ;

190 
	}
}

192 
BOOL
 
	gCPage_Dügno°ic
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

194 if–
CPage
::
	`mou£PªssEvít
–
pEvít
 ) )

196 
	`AfxRe‰eshS¸ìn
();

197 if–
Widgë
::
PAGE_DIOGNOSTIC
 !
	`AfxGëCurPageIndex
() )

199 
DevAddrComboBox
->
	`£tVisibÀ
(
Ál£
);

200 
BusNoComboBox
->
	`£tVisibÀ
(
Ál£
);

201 
MesßgeTextEdô
->
	`£tVisibÀ
(
Ál£
);

202 
MesßgeTextEdô
->
	`˛ór
();

203  
TRUE
 ;

206 if(
pEvít
->
	`buâ⁄
(Ë=
Qt
::
Le·Buâ⁄
)

209 if–
	`Mou£PªssChoi˚Page
(
pEvít
) )

210  
TRUE
;

211 if–
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

213 if–
CheckSèãRe˘Show
 )

215 
QRe˘
 
	`tmpRe˘
(
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`x
(),Dügno°icPageRe˘[ CHECK_RECT ].
	`y
(),

216 
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`width
(),

217 0.5 * 
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`height
());

218 if–
tmpRe˘
.
	`c⁄èös
(
pEvít
->
	`pos
()) )

222 if–
CheckSèã
 )

223 
CheckSèã
 = 
FALSE
;

225 
CheckSèã
 = 
TRUE
;

227 
CheckSèãRe˘Show
 = 
FALSE
;

231 
CheckSèãRe˘Show
 = 
TRUE
;

233 
	`AfxGëWidgë
()->
	`upd©e
(
Dügno°icPageRe˘
[ 
CHECK_RECT
 ]);

235 if–
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

237 if–
MesßgeF‹m©Re˘Show
 )

239 
QRe˘
 
	`tmpRe˘
(
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`x
(),Dügno°icPageRe˘[ HEX_OR_ASCII ].
	`y
(),

240 
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`width
(),

241 0.5 * 
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`height
());

242 if–
tmpRe˘
.
	`c⁄èös
(
pEvít
->
	`pos
()) )

246 if–
MesßgeF‹m©
 =
HEX_FOEMAT
 )

247 
MesßgeF‹m©
 = 
ASCII_FOEMAT
;

249 
MesßgeF‹m©
 = 
HEX_FOEMAT
;

251 
MesßgeF‹m©Re˘Show
 = 
FALSE
;

255 
MesßgeF‹m©Re˘Show
 = 
TRUE
;

257 
	`AfxGëWidgë
()->
	`upd©e
(
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ]);

259 if–
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

261 if–
MesßgeShowRe˘Show
 )

263 
QRe˘
 
	`tmpRe˘
(
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`x
(),Dügno°icPageRe˘[ START_OR_END_RECT ].
	`y
(),

264 
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`width
(),

265 0.5 * 
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`height
());

266 if–
tmpRe˘
.
	`c⁄èös
(
pEvít
->
	`pos
()) )

270 if–
MesßgeShow
 )

271 
MesßgeShow
 = 
FALSE
;

273 
MesßgeShow
 = 
TRUE
;

275 
MesßgeShowRe˘Show
 = 
FALSE
;

279 
MesßgeShowRe˘Show
 = 
TRUE
;

281 
	`AfxGëWidgë
()->
	`upd©e
(
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ]);

285 if–
Ch™√lNoRe˘Show
 )

287 if–(
pEvít
->
	`x
(Ë> 
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].x()) &&

288 (
pEvít
->
	`x
(Ë< 
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].x() +

289 
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].
	`width
()))

291 
i
=0;

292 
i
=0;i<
sBusNoD©a
.
BusNum
+2;i++)

294 if–(
pEvít
->
	`y
(Ë> 
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].y()+

295 
i
 * 
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].
	`height
()) &&

296 (
pEvít
->
	`y
(Ë< 
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].y() +

297 (
i
+1Ë* 
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].
	`height
()))

299 if–
i
 == 0 )

303 
Ch™√lNo
 = 
i
-1;

304 
DevAddªss
 = 
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
DevNum
;

309 
Ch™√lNoRe˘Show
 = 
FALSE
;

313 if–
Dügno°icPageRe˘
[ 
CHANNEL_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

315 
Ch™√lNoRe˘Show
 = 
TRUE
;

319 if–
DevAddªssRe˘Show
 )

321 if–(
pEvít
->
	`x
(Ë> 
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].x()) &&

322 (
pEvít
->
	`x
(Ë< 
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].x() +

323 
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].
	`width
()))

325 
i
=0;

326 
i
=0;i<
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
DevNum
+2;i++)

328 if–(
pEvít
->
	`y
(Ë> 
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].y()+

329 
i
 * 
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].
	`height
()) &&

330 (
pEvít
->
	`y
(Ë< 
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].y() +

331 (
i
+1Ë* 
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].
	`height
()))

333 if–
i
 == 0 )

337 
DevAddªss
 = 
i
 - 1;

342 
DevAddªssRe˘Show
 = 
FALSE
;

346 if–
Dügno°icPageRe˘
[ 
DEVADDR_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

348 
DevAddªssRe˘Show
 = 
TRUE
;

352 
	`AfxGëWidgë
()->
	`upd©e
();

353  
TRUE
;

356 
	`AfxRe‰eshS¸ìn
( );

357  
FALSE
 ;

358 
	}
}

360 
BOOL
 
	gCPage_Dügno°ic
::
	$DøwDügno°icPage
–
QPaöãr
 * 
pPaöãr
 )

362 
BOOL
 
Rë
 = 
FALSE
;

363 
	`DøwDügno°icO±i⁄
(
pPaöãr
);

364  
Dügno°icO±i⁄
 )

366 
DATAGRAM_PAGE
:

367 
Rë
 = 
	`DøwD©agøm
(
pPaöãr
);

369 
COMMUNINICATION_STATE_PAGE
:

370 
Rë
 = 
	`DøwCommunSèã
(
pPaöãr
);

373 
Rë
 = 
	`DøwD©agøm
(
pPaöãr
);

376  
Rë
;

377 
	}
}

379 
BOOL
 
	gCPage_Dügno°ic
::
	$DøwDügno°icO±i⁄
–
QPaöãr
 * 
pPaöãr
 )

381 
pPaöãr
->
	`ßve
();

383 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

384 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,0,0,255));

385 
pPaöãr
->
	`£tPí
(
≥n
);

386 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

387 
f⁄t
.
	`£tPixñSize
(16);

388 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

390 
pPaöãr
->
	`døwText
–
Dügno°icPageRe˘
[
CHANNEL_TEXT_RECT
] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("ÈÄöÈÅìÂè∑:") );

391 
QRe˘
 
tmpRe˘
;

393  
Dügno°icO±i⁄
 )

395 
DATAGRAM_PAGE
:

396 
pPaöãr
->
	`døwPixm≠
–
Dügno°icPageRe˘
[
DATAGRAM_RECT
] , 
	`UTF8
(
D©agømPªssP©h
) );

397 
pPaöãr
->
	`døwPixm≠
–
Dügno°icPageRe˘
[
COMMUNINICATION_STATE_RECT
] , 
	`UTF8
(
CommunSèãRñó£P©h
) );

399 
COMMUNINICATION_STATE_PAGE
:

400 
pPaöãr
->
	`døwPixm≠
–
Dügno°icPageRe˘
[
DATAGRAM_RECT
] , 
	`UTF8
(
D©agømRñó£P©h
) );

401 
pPaöãr
->
	`døwPixm≠
–
Dügno°icPageRe˘
[
COMMUNINICATION_STATE_RECT
] , 
	`UTF8
(
CommunSèãPªssP©h
) );

404 
pPaöãr
->
	`døwPixm≠
–
Dügno°icPageRe˘
[
DATAGRAM_RECT
] , 
	`UTF8
(
D©agømPªssP©h
) );

405 
pPaöãr
->
	`døwPixm≠
–
Dügno°icPageRe˘
[
COMMUNINICATION_STATE_RECT
] , 
	`UTF8
(
CommunSèãRñó£P©h
) );

408 
pPaöãr
->
	`ª°‹e
();

409  
TRUE
;

410 
	}
}

412 
BOOL
 
	gCPage_Dügno°ic
::
	$DøwD©agøm
–
QPaöãr
 * 
pPaöãr
 )

414 
pPaöãr
->
	`ßve
();

416 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

417 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,0,0,255));

418 
pPaöãr
->
	`£tPí
(
≥n
);

419 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

420 
f⁄t
.
	`£tPixñSize
(16);

421 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

422 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

423 
brush
.
	`£tCﬁ‹
(
	`QCﬁ‹
(96, 96, 96,255));

424 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

425 
pPaöãr
->
	`£tBrush
(
brush
);

427 
QRe˘
 
tmpRe˘
;

428 
TmpBuf
[10] = "";

430 
pPaöãr
->
	`døwText
–
Dügno°icPageRe˘
[
DEVADDR_TEXT_RECT
] , 
Qt
::
AlignCíãr
 , 
	`UTF8
("ËÆæÂ§áÂú∞ÂùÄ:") );

432 
tmpRe˘
.
	`£tRe˘
(
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`x
(),Dügno°icPageRe˘[ CHECK_RECT ].
	`y
(),

433 
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`width
(),

434 0.5 * 
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`height
());

435 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

436 if–
CheckSèã
 )

437 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("Ê†°È™å"));

439 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("Êó†Ê†°È™å"));

440 if–
CheckSèãRe˘Show
 )

442 
tmpRe˘
.
	`£tRe˘
(
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`x
(),

443 
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`y
(Ë+ 0.5 * Dügno°icPageRe˘[ CHECK_RECT ].
	`height
(),

444 
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`width
(),

445 0.5 * 
Dügno°icPageRe˘
[ 
CHECK_RECT
 ].
	`height
());

446 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

447 if–
CheckSèã
 )

448 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("Êó†Ê†°È™å"));

450 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("Ê†°È™å"));

453 
tmpRe˘
.
	`£tRe˘
(
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`x
(),Dügno°icPageRe˘[ HEX_OR_ASCII ].
	`y
(),

454 
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`width
(),

455 0.5 * 
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`height
());

456 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

457 if–
MesßgeF‹m©
 =
HEX_FOEMAT
 )

458 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("HEX"));

459 if–
MesßgeF‹m©
 =
ASCII_FOEMAT
 )

460 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("ASCII"));

461 if–
MesßgeF‹m©Re˘Show
 )

463 
tmpRe˘
.
	`£tRe˘
(
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`x
(),

464 
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`y
(Ë+ 0.5 * Dügno°icPageRe˘[ HEX_OR_ASCII ].
	`height
(),

465 
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`width
(),

466 0.5 * 
Dügno°icPageRe˘
[ 
HEX_OR_ASCII
 ].
	`height
());

467 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

468 if–
MesßgeF‹m©
 =
HEX_FOEMAT
 )

469 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("ASCII"));

471 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("HEX"));

474 
tmpRe˘
.
	`£tRe˘
(
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`x
(),Dügno°icPageRe˘[ START_OR_END_RECT ].
	`y
(),

475 
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`width
(),

476 0.5 * 
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`height
());

477 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

478 if–
MesßgeShow
 )

479 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("ÊòæÁ§∫"));

481 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("ÂÅúÊ≠¢"));

482 if–
MesßgeShowRe˘Show
 )

484 
tmpRe˘
.
	`£tRe˘
(
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`x
(),

485 
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`y
(Ë+ 0.5 * Dügno°icPageRe˘[ START_OR_END_RECT ].
	`height
(),

486 
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`width
(),

487 0.5 * 
Dügno°icPageRe˘
[ 
START_OR_END_RECT
 ].
	`height
());

488 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

489 if–
MesßgeShow
 )

490 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("ÂÅúÊ≠¢"));

492 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
("ÊòæÁ§∫"));

497 
QF⁄t
 
tmpßvef⁄t
 = 
pPaöãr
->
	`f⁄t
();

498 
f⁄t
.
	`£tPixñSize
(14);

499 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

500 
pPaöãr
->
	`døwRe˘
–
Dügno°icPageRe˘
[ 
TX_RECT
 ] );

501 
	`mem£t
(
TmpBuf
,0,(TmpBuf));

502 
	`•rötf
(
TmpBuf
,"T:%u",(
uöt
)(
	`AfxGëBus
(
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
BusNo
)->
dwSídNo
));

503 
pPaöãr
->
	`døwText
(
Dügno°icPageRe˘
[ 
TX_RECT
 ],
	`UTF8
(
TmpBuf
));

504 
pPaöãr
->
	`døwRe˘
–
Dügno°icPageRe˘
[ 
RX_RECT
 ] );

505 
	`mem£t
(
TmpBuf
,0,(TmpBuf));

506 
	`•rötf
(
TmpBuf
,"R:%u",(
uöt
)(
	`AfxGëBus
(
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
BusNo
)->
dwRecvNo
));

507 
pPaöãr
->
	`døwText
(
Dügno°icPageRe˘
[ 
RX_RECT
 ],
	`UTF8
(
TmpBuf
));

508 
pPaöãr
->
	`£tF⁄t
(
tmpßvef⁄t
);

510 
pPaöãr
->
	`ª°‹e
();

511  
TRUE
;

512 
	}
}

514 
BOOL
 
	gCPage_Dügno°ic
::
	$DøwCommunSèã
–
QPaöãr
 * 
pPaöãr
 )

516 
TmpBuf
[32] = "";

517 
WORD
 
BusSèã
=
COMM_ABNORMAL
;

518 
WORD
 
DevSèã
=
COMM_ABNORMAL
;

519 
pPaöãr
->
	`ßve
();

520 
QBrush
 
brush
 = 
pPaöãr
->
	`brush
();

521 
brush
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255, 0, 0,255));

522 
brush
.
	`£tStyÀ
(
Qt
::
SﬁidP©ã∫
);

523 
pPaöãr
->
	`£tBrush
(
brush
);

524 
QRe˘
 
	`tmpRe˘
(183,87,45,25);

526 if–
	`AfxGëBusCommSèã
(
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
BusNo
,
BusSèã
) )

528 if–
BusSèã
 =
COMM_NOMAL
 )

529 
brush
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0, 255, 0,255));

530 if–
BusSèã
 =
COMM_ABNORMAL
 )

531 
brush
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255, 0, 0,255));

532 
pPaöãr
->
	`£tBrush
(
brush
);

534 
tmpRe˘
.
	`£tRe˘
—mpRe˘.
	`x
(),tmpRe˘.
	`y
(),tmpRe˘.
	`width
(),tmpRe˘.
	`height
()+25);

535 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

536 
	`mem£t
(
TmpBuf
,0,(TmpBuf));

537 
	`•rötf
(
TmpBuf
,"ÈÄöËÆØË°å:%d",
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
BusNo
+1);

538 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
(
TmpBuf
));

539 
tmpRe˘
.
	`£tRe˘
—mpRe˘.
	`x
(),tmpRe˘.
	`y
(),tmpRe˘.
	`width
(),tmpRe˘.
	`height
()-25);

541 
i
=0;

542  
i
=0;i<
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
DevNum
;i++ )

545 if–
i
!=0 && i%8==0 )

547 
pPaöãr
->
	`døwLöe
(
tmpRe˘
.
	`x
()+tmpRe˘.
	`width
(),tmpRe˘.
	`y
()+tmpRe˘.
	`height
()/2,

548 
tmpRe˘
.
	`x
()+tmpRe˘.
	`width
()+20,tmpRe˘.
	`y
()+tmpRe˘.
	`height
()/2);

549 
tmpRe˘
.
	`£tRe˘
—mpRe˘.
	`x
()-7*tmpRe˘.
	`width
()-7*20,tmpRe˘.
	`y
()+75,tmpRe˘.width(),tmpRe˘.
	`height
());

553 
pPaöãr
->
	`døwLöe
(
tmpRe˘
.
	`x
()+tmpRe˘.
	`width
(),tmpRe˘.
	`y
()+tmpRe˘.
	`height
()/2,

554 
tmpRe˘
.
	`x
()+tmpRe˘.
	`width
()+20,tmpRe˘.
	`y
()+tmpRe˘.
	`height
()/2);

555 
tmpRe˘
.
	`£tRe˘
—mpRe˘.
	`x
()+tmpRe˘.
	`width
()+20,tmpRe˘.
	`y
(),tmpRe˘.width(),tmpRe˘.
	`height
());

557 if–
	`AfxGëDevCommSèã
(
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
BusNo
,

558 
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
DevAddr
[
i
],

559 
DevSèã
) )

561 if–
DevSèã
 =
COMM_NOMAL
 )

562 
brush
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0, 255, 0,255));

563 if–
DevSèã
 =
COMM_ABNORMAL
 )

564 
brush
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255, 0, 0,255));

565 
pPaöãr
->
	`£tBrush
(
brush
);

567 
pPaöãr
->
	`døwRe˘
–
tmpRe˘
 );

568 
	`mem£t
(
TmpBuf
,0,(TmpBuf));

569 
	`•rötf
(
TmpBuf
,"%d",
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
DevAddr
[
i
]);

570 
pPaöãr
->
	`døwText
(
tmpRe˘
,
	`UTF8
(
TmpBuf
));

573 
pPaöãr
->
	`ª°‹e
();

574  
TRUE
;

575 
	}
}

577 
BOOL
 
	gCPage_Dügno°ic
::
	$Mou£PªssChoi˚Page
–
QMou£Evít
 *
pEvít
 )

579 if–
Dügno°icPageRe˘
[ 
DATAGRAM_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

581 if–
Dügno°icO±i⁄
 !
DATAGRAM_PAGE
 )

583 
Dügno°icO±i⁄
 = 
DATAGRAM_PAGE
;

584 
MesßgeTextEdô
->
	`£tVisibÀ
(
åue
);

585 
DevAddrComboBox
->
	`£tVisibÀ
(
åue
);

588 if–
Dügno°icPageRe˘
[ 
COMMUNINICATION_STATE_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

590 if–
Dügno°icO±i⁄
 !
COMMUNINICATION_STATE_PAGE
 )

592 
Dügno°icO±i⁄
 = 
COMMUNINICATION_STATE_PAGE
;

593 
MesßgeTextEdô
->
	`£tVisibÀ
(
Ál£
);

594 
DevAddrComboBox
->
	`£tVisibÀ
(
Ál£
);

595 
MesßgeTextEdô
->
	`˛ór
();

600  
FALSE
;

602 
	`AfxGëWidgë
()->
	`upd©e
();

603  
TRUE
;

604 
	}
}

606 
BOOL
 
	gCPage_Dügno°ic
::
	$Di•œyMsg
–
WORD
 
wBusNo
 , WORD 
wAddr
 , 
BYTE
 
byTy≥
 , BYTE * 
pBuf
 , 
Àn
 )

608 if–!
Àn
 || !
pBuf
 )

609  
FALSE
 ;

610 if–
byTy≥
 !
CGlobÆ
::
SEND_MSG
 && byTy≥ !CGlobÆ::
RECV_MSG


611 && 
byTy≥
 !
CGlobÆ
::
ERROR_MSG
 )

612  
FALSE
 ;

613 if–
Dügno°icO±i⁄
 !
DATAGRAM_PAGE
 )

614  
FALSE
;

616 if–!
MesßgeShow
 )

617  
FALSE
;

619 if–
wBusNo
 !
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
BusNo
 )

621 if–
Ch™√lNo
 !
sBusNoD©a
.
BusNum
 )

622  
FALSE
;

625 if–
wAddr
 !
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
DevAddr
[
DevAddªss
] )

627 if–
DevAddªss
 !
sBusNoD©a
.
DevAddrOfBus
[
Ch™√lNo
].
DevNum
 )

628  
FALSE
;

631 
QSåög
 
tmp°r
;

633 
byTy≥
)

635 
CGlobÆ
::
SEND_MSG
:

636 
tmp°r
 = "TX:";

638 
CGlobÆ
::
RECV_MSG
:

639 
tmp°r
 = "RX:";

641 
CGlobÆ
::
ERROR_MSG
:

642 
tmp°r
 = 
	`UTF8
("ËØ¥Êòé");

645  
FALSE
;

648 if–
byTy≥
 =
CGlobÆ
::
ERROR_MSG
 )

650 if–
CheckSèã
 )

652 
tmp°r
 = 
	`UTF8_LEN
((c⁄° *)
pBuf
,
Àn
);

656  
FALSE
;

661 if–
MesßgeF‹m©
 =
HEX_FOEMAT
 )

663 if–
Àn
 > 1024 )

665 
Àn
 = 1024;

667 
HexBuf
[1024 * 3 + 1] ;

668 
	`mem£t
–
HexBuf
 , 0 , (HexBuf ) );

669 
tCh¨
[3] ;

670 
i
=0;

671 
i
=0;i<
Àn
;i++)

673 
	`•rötf
(&
HexBuf
[
i
*3], "%02x ", 
pBuf
[i]);

680 
tmp°r
 +
	`UTF8_LEN
–
HexBuf
 , 
i
 * 3 );

682 if–
MesßgeF‹m©
 =
ASCII_FOEMAT
 )

684 
tmp°r
 = 
	`UTF8_LEN
((c⁄° *)
pBuf
,
Àn
);

687 
emô
 
	`sig«l_MesßgeShow
(
tmp°r
);

689  
TRUE
 ;

690 
	}
}

693 
	gCPage_Dügno°ic
::
	$¶Ÿs_MesßgeShow
(
QSåög
 
°r
)

695 
time_t
 
cur_time
;

696 
	`time
(&
cur_time
);

697 
°r
+='\n';

698 
m_°r
 +
°r
;

699 if–
	`abs
(
cur_time
 - 
TimeBegö
) >= 1 )

701 
MesßgeTextEdô
->
	`≠≥nd
(
m_°r
);

702 
m_°r
.
	`˛ór
();

703 
TimeBegö
 = 
cur_time
;

706 
m_°r
+='\n';

707 
	}
}

709 
	gCPage_Dügno°ic
::
	$¶Ÿs_BusNoCh™ge
(
ödex
)

711 
Ch™√lNo
 = 
ödex
;

712 
MesßgeTextEdô
->
	`˛ór
();

713 
DevAddrComboBox
->
	`˛ór
();

714 
i
=0;

715 
i
=0;i<
sBusNoD©a
.
DevAddrOfBus
[
ödex
].
DevNum
;i++)

717 
tmpbuf
[16]="";

718 
	`•rötf
(
tmpbuf
,"%d",
sBusNoD©a
.
DevAddrOfBus
[
ödex
].
DevAddr
[
i
]);

720 
DevAddrComboBox
->
	`addIãm
(
	`UTF8
(
tmpbuf
));

722 
DevAddrComboBox
->
	`addIãm
(
	`UTF8
("all"));

723 
DevAddrComboBox
->
	`£tCuºítIndex
(
sBusNoD©a
.
DevAddrOfBus
[
ödex
].
DevNum
);

724 
	`¶Ÿs_DevAddrCh™ge
(
sBusNoD©a
.
DevAddrOfBus
[
ödex
].
DevNum
);

725 
	}
}

727 
	gCPage_Dügno°ic
::
	$¶Ÿs_DevAddrCh™ge
(
ödex
)

729 
MesßgeTextEdô
->
	`˛ór
();

730 
DevAddªss
 = 
ödex
;

731 
	}
}

	@Pages/cpage_diagnostic.h

1 #i‚de‡
CPAGE_DIAGNOSTIC_H


2 
	#CPAGE_DIAGNOSTIC_H


	)

3 
	~"˝age.h
"

5 
	sDevAddrD©aOfBus


7 
WORD
 
	mBusNo
;

8 
WORD
 
	mDevNum
;

9 
WORD
 
	mDevAddr
[32];

10 
DevAddrD©aOfBus
()

12 
	mBusNo
 = 0;

13 
	mDevNum
 = 0;

14 
mem£t
(
DevAddr
,0,(DevAddr));

16 }
	tDEVADDRDATAOFBUS
,*
	tPDEVADDRDATAOFBUS
;

18 
	sBusNoD©a


20 
WORD
 
	mBusNum
;

21 
WORD
 
	mBusTønsNum
;

22 
WORD
 
	mBusTønsNo
[22];

23 
DEVADDRDATAOFBUS
 
	mDevAddrOfBus
[22];

24 
BusNoD©a
()

26 
	mBusNum
 = 0;

27 
	mBusTønsNum
 = 0;

28 
mem£t
(
DevAddrOfBus
,0,(
BusTønsNo
));

29 
mem£t
(
DevAddrOfBus
,0,(DevAddrOfBus));

31 }
	tBUSNODATA
,*
	tPBUSNODATA
;

34 ˛as†
	cCPage_Dügno°ic
 : 
public
 
CPage


36 
Q_OBJECT


37 
public
:

38 
CPage_Dügno°ic
–
BYTE
 
byTy≥
 );

39 
vútuÆ
 
BOOL
 
AddD©a
–
LPVOID
 
pVoid
 ) ;

40 
vútuÆ
 
BOOL
 
DøwPage
–
QPaöãr
 * 
pPaöãr
 );

41 
vútuÆ
 
BOOL
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

42 
BOOL
 
Di•œyMsg
–
WORD
 
wBusNo
 , WORD 
wAddr
 , 
BYTE
 
byTy≥
 , BYTE * 
pBuf
 , 
Àn
 ) ;

44 
QRe˘
 
	mDevSèãRe˘
;

45 
QRe˘
 
	mRxTxRe˘
;

46 
BYTE
 
	mDügno°icO±i⁄
;

47 íum{
	mDATAGRAM_PAGE
,
	mCOMMUNINICATION_STATE_PAGE
};

48 
	g¥iv©e
:

49 
QTextEdô
 * 
MesßgeTextEdô
;

50 
QComboBox
 * 
	gBusNoComboBox
;

51 
QComboBox
 * 
	gDevAddrComboBox
;

52 
BUSNODATA
 
	gsBusNoD©a
;

54 
time_t
 
	gTimeBegö
;

55 
QSåög
 
	gm_°r
;

58 íum{
	gDATAGRAM_RECT
,
	gCOMMUNINICATION_STATE_RECT
,
	gCHANNEL_TEXT_RECT
,
	gCHANNEL_RECT
,

59 
	gDEVADDR_TEXT_RECT
,
	gDEVADDR_RECT
,
	gCHECK_RECT
,
	gHEX_OR_ASCII
,
	gSTART_OR_END_RECT
,

60 
	gTX_RECT
,
	gRX_RECT
};

61 íum{
	gHEX_FOEMAT
,
	gASCII_FOEMAT
};

63 
	gD©agømRñó£P©h
[64];

64 
	gD©agømPªssP©h
[64];

65 
	gCommunSèãRñó£P©h
[64];

66 
	gCommunSèãPªssP©h
[64];

68 
BYTE
 
	gCh™√lNoAŒNum
;

69 
BYTE
 
	gDevAddªssAŒNum
;

71 
BOOL
 
	gCheckSèã
;

72 
BOOL
 
	gMesßgeShow
;

73 
BYTE
 
	gMesßgeF‹m©
;

74 
BYTE
 
	gCh™√lNo
;

75 
BYTE
 
	gDevAddªss
;

76 
QRe˘
 
	gDügno°icPageRe˘
[11];

77 
BOOL
 
	gCh™√lNoRe˘Show
;

78 
BOOL
 
	gDevAddªssRe˘Show
;

79 
BOOL
 
	gCheckSèãRe˘Show
;

80 
BOOL
 
	gMesßgeShowRe˘Show
;

81 
BOOL
 
	gMesßgeF‹m©Re˘Show
;

83 
BOOL
 
gëBusNoAndDevAddr
();

84 
BOOL
 
DøwDügno°icPage
–
QPaöãr
 * 
pPaöãr
 );

85 
BOOL
 
DøwDügno°icO±i⁄
–
QPaöãr
 * 
pPaöãr
 );

86 
BOOL
 
DøwD©agøm
–
QPaöãr
 * 
pPaöãr
 );

87 
BOOL
 
DøwCommunSèã
–
QPaöãr
 * 
pPaöãr
 );

89 
BOOL
 
Mou£PªssChoi˚Page
–
QMou£Evít
 *
pEvít
 );

90 
BOOL
 
Mou£PªssD©agøm
–
QMou£Evít
 *
pEvít
 );

91 
BOOL
 
Mou£CommunSèã
–
QMou£Evít
 *
pEvít
 );

93 
	gsig«ls
:

94 
sig«l_MesßgeShow
(
QSåög
 
°r
);

96 
¥iv©e
 
	g¶Ÿs
:

97 
¶Ÿs_MesßgeShow
(
QSåög
 
°r
);

98 
¶Ÿs_BusNoCh™ge
(
ödex
);

99 
¶Ÿs_DevAddrCh™ge
(
ödex
);

	@Pages/cpage_home.cpp

1 
	~"˝age_home.h
"

2 
	~"cglobÆ.h
"

4 
	gCPage_Home
::
	$CPage_Home
–
BYTE
 
byTy≥
 ):

5 
	$CPage
–
byTy≥
 )

7 
m_°rPic
 += "ePut800-Home.jpg";

10 
m_rcD©e
 = 
	`QRe˘
–
	`QPoöt
(180 , 487 ) , QPoint( 620 , 527 ) ) ;

11 
m_rcPage
[
HOME_SYS
] = 
	`QRe˘
(
	`QPoöt
(34 ,138),QPoint(388,286)) ;

12 
m_rcPage
[
HOME_QUERY
] = 
	`QRe˘
(
	`QPoöt
( 412 , 138 ) , QPoint(767,286));

13 
m_rcPage
[
HOME_DIAGNOSDIC
] = 
	`QRe˘
(
	`QPoöt
( 34 , 306 ) , QPoint(388,452 ));

14 
m_rcPage
[
HOME_PARAM
] = 
	`QRe˘
(
	`QPoöt
( 412 , 305 ) , QPoint(767,452 )) ;

15 
	}
}

18 
BOOL
 
	gCPage_Home
::
	$AddD©a
–
LPVOID
 
pVoid
 )

20 
	`AfxGëProje˘Name
(
m_°rProje˘Name
);

21 if–!
pVoid
 )

22  
FALSE
 ;

24  
TRUE
 ;

25 
	}
}

27 
BOOL
 
	gCPage_Home
::
	$DøwPage
–
QPaöãr
 * 
pPaöãr
 )

29 if–!
pPaöãr
 )

31 
	`Q_ASSERT
–
FALSE
 ) ;

32  
FALSE
 ;

35 
CPage
::
	`DøwPage
–
pPaöãr
 ) ;

38 
	`DøwD©e
–
pPaöãr
 ) ;

41 
	`DøwProjName
–
pPaöãr
 ) ;

43  
TRUE
 ;

44 
	}
}

46 
BOOL
 
	gCPage_Home
::
	$DøwD©e
(
QPaöãr
 *
pPaöãr
)

48 if–!
pPaöãr
 )

49  
FALSE
 ;

51 
QF⁄t
 
f⁄t
 ;

52 
f⁄t
.
	`£tPixñSize
( 40 );

53 
f⁄t
.
	`£tBﬁd
–
TRUE
 );

54 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

55 
QPí
 
	`≥n
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ) );

56 
pPaöãr
->
	`£tPí
–
≥n
 );

58 
QSåög
 
°rTime
 = 
	`AfxGëGlobÆ
()->
	`GëRólTimeSå
() ;

59 
pPaöãr
->
	`døwText
–
m_rcD©e
 , 
Qt
::
AlignLe·
 , 
°rTime
 );

61  
TRUE
 ;

62 
	}
}

64 
BOOL
 
	gCPage_Home
::
	$DøwProjName
–
QPaöãr
 * 
pPaöãr
 )

66 
QF⁄t
 
f⁄t
 ;

67 
f⁄t
.
	`£tPixñSize
( 35 );

68 
f⁄t
.
	`£tBﬁd
–
TRUE
 );

69 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

70 
QPí
 
	`≥n
–
	`QCﬁ‹
( 255 , 255 , 255 , 255 ) );

71 
pPaöãr
->
	`£tPí
–
≥n
 );

73 
QRe˘
 
	`rcProj
–
	`QPoöt
( 6 , 15 ) , QPoint( 798 , 71 ) ) ;

74 
pPaöãr
->
	`døwText
–
rcProj
 , 
Qt
::
AlignLe·
 | Qt::
AlignVCíãr
 , 
m_°rProje˘Name
 );

76  
TRUE
 ;

77 
	}
}

79 
BOOL
 
	gCPage_Home
::
	$mou£PªssEvít
(
QMou£Evít
 * 
pEvít
 )

81 if–
CPage
::
	`mou£PªssEvít
–
pEvít
 ) )

83 
	`AfxRe‰eshS¸ìn
();

84  
TRUE
 ;

87 if–!
pEvít
 )

89 
	`Q_ASSERT
–
FALSE
 ) ;

90  
FALSE
;

93 
QPoöt
 
±
 = 
pEvít
->
	`pos
() ;

95 
size
 = –
m_rcPage
 ) / ( m_rcPage[ 0 ] );

96  
BYTE
 
i
 = 0 ; i < 
size
 ; i++ )

98 if(
m_rcPage
[ 
i
 ].
	`c⁄èös
–
±
 ) )

99 
	`Ch™gePage
–
i
 );

102  
TRUE
 ;

103 
	}
}

105 
	gCPage_Home
::
	$Ch™gePage
–
BYTE
 
ödex
 )

107 if–
ödex
 =
HOME_SYS
 )

108 
	`AfxSëCurPageIndex
–
Widgë
::
PAGE_SYS_PIC
 ) ;

109 if–
ödex
 =
HOME_QUERY
 )

110 
	`AfxSëCurPageIndex
–
Widgë
::
PAGE_DATA_QUERY
 );

111 if–
ödex
 =
HOME_DIAGNOSDIC
 )

112 
	`AfxSëCurPageIndex
–
Widgë
::
PAGE_DIOGNOSTIC
 );

113 if–
ödex
 =
HOME_PARAM
 )

114 
	`AfxSëCurPageIndex
–
Widgë
::
PAGE_SYS_PARA
 );

117 
	`Q_ASSERT
–
FALSE
 ) ;

121 
	`AfxRe‰eshS¸ìn
();

122 
	}
}

	@Pages/cpage_home.h

1 #i‚de‡
CPAGE_HOME_H


2 
	#CPAGE_HOME_H


	)

4 
	~<Pages/˝age.h
>

6 ˛as†
	cCPage_Home
 : 
public
 
CPage


8 
public
:

9 
CPage_Home
–
BYTE
 
byTy≥
 );

10 
vútuÆ
 
BOOL
 
AddD©a
–
LPVOID
 
pVoid
 ) ;

11 
vútuÆ
 
BOOL
 
DøwPage
–
QPaöãr
 * 
pPaöãr
 );

12 
vútuÆ
 
BOOL
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

14 
BOOL
 
DøwProjName
–
QPaöãr
 * 
pPaöãr
 ) ;

15 
Ch™gePage
–
BYTE
 
ödex
 ) ;

16 
BOOL
 
DøwD©e
(
QPaöãr
 *
pPaöãr
);

18 
QRe˘
 
	mm_rcPage
[4];

19 
QSåög
 
	mm_°rProje˘Name
 ;

20 
QRe˘
 
	mm_rcD©e
 ;

21 íum { 
	mHOME_SYS
 , 
	mHOME_QUERY
 , 
	mHOME_DIAGNOSDIC
 , 
	mHOME_PARAM
 };

	@Pages/cpage_sysparameter.cpp

1 
	~"˝age_sy•¨amëî.h
"

2 
	~"cglobÆ.h
"

4 
	~<¨∑/öë.h
>

6 
	gCPage_SysP¨amëî
::
	$CPage_SysP¨amëî
–
BYTE
 
byTy≥
 ):
	$CPage
–
byTy≥
 )

8 
m_°rPic
 += "ePut800-SysParam.jpg";

9 
SysP¨amO±i⁄
 = 
NET_PARAM
;

10 
	`mem£t
–
NëP¨amRñó£P©h
 , 0 , (NetParamReleasePath) );

11 
	`mem˝y
–
NëP¨amRñó£P©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-ÁΩëÁªúÂèÇÊï∞.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-ÁΩëÁªúÂèÇÊï∞.jpg"));

12 
	`mem£t
–
NëP¨amPªssP©h
 , 0 , (NetParamPressPath) );

13 
	`mem˝y
–
NëP¨amPªssP©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-ÁΩëÁªúÂèÇÊï∞.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-ÁΩëÁªúÂèÇÊï∞.jpg"));

15 
	`mem£t
–
SysTimeRñó£P©h
 , 0 , (SysTimeReleasePath) );

16 
	`mem˝y
–
SysTimeRñó£P©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-Á≥ªÁªüÊó∂Èó¥.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-Á≥ªÁªüÊó∂Èó¥.jpg"));

17 
	`mem£t
–
SysTimePªssP©h
 , 0 , (SysTimePressPath) );

18 
	`mem˝y
–
SysTimePªssP©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-Á≥ªÁªüÊó∂Èó¥.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-Á≥ªÁªüÊó∂Èó¥.jpg"));

20 
	`mem£t
–
LogöPwdRñó£P©h
 , 0 , (LoginPwdReleasePath) );

21 
	`mem˝y
–
LogöPwdRñó£P©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-ÁôªÂΩïÂØÜÁ†Å.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆÁôΩ-ÁôªÂΩïÂØÜÁ†Å.jpg"));

22 
	`mem£t
–
LogöPwdPªssP©h
 , 0 , (LoginPwdPressPath) );

23 
	`mem˝y
–
LogöPwdPªssP©h
 , "/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-ÁôªÂΩïÂØÜÁ†Å.jpg" , ("/usr/share/ePut800/Pics/ÁÅ∞Â∫ï-ÊåâÈíÆËìù-ÁôªÂΩïÂØÜÁ†Å.jpg"));

25 
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
].
	`£tRe˘
(150,30, 100, 30);

26 
SysP¨amPageRe˘
[
NET_PARAM_RECT
].
	`£tRe˘
(40 , 113 , 106 , 51);

27 
SysP¨amPageRe˘
[
SYS_TIME_RECT
].
	`£tRe˘
(40 , 183 , 106 , 51);

28 
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
].
	`£tRe˘
(40 , 253 , 106 , 51);

29 
SysP¨amPageRe˘
[
IP_INPUT_RECT
].
	`£tRe˘
(360,160, 300, 40);

30 
SysP¨amPageRe˘
[
MASK_INPUT_RECT
].
	`£tRe˘
(360,225, 300, 40);

31 
SysP¨amPageRe˘
[
GATEWAY_INPUT_RECT
].
	`£tRe˘
(360,290, 300, 40);

32 
SysP¨amPageRe˘
[
DNS_INPUT_RECT
].
	`£tRe˘
(360,355, 300, 40);

33 
SysP¨amPageRe˘
[
YES_RECT
].
	`£tRe˘
(280,420, 95, 45);

34 
SysP¨amPageRe˘
[
NO_RECT
].
	`£tRe˘
(545,420, 95, 45);

36 
SysP¨amPageRe˘
[
YEAR_INPUT_RECT
].
	`£tRe˘
(230 , 190 , 130 , 45);

37 
SysP¨amPageRe˘
[
MONTH_INPUT_RECT
].
	`£tRe˘
(390 , 190 , 130 , 45);

38 
SysP¨amPageRe˘
[
DAY_INPUT_RECT
].
	`£tRe˘
(550 , 190 , 130 , 45);

39 
SysP¨amPageRe˘
[
HOUR_INPUT_RECT
].
	`£tRe˘
(230 , 300 , 130 , 45);

40 
SysP¨amPageRe˘
[
MINUTE_INPUT_RECT
].
	`£tRe˘
(390 , 300 , 130 , 45);

41 
SysP¨amPageRe˘
[
SECOND_INPUT_RECT
].
	`£tRe˘
(550 , 300 , 130 , 45);

43 
SysP¨amPageRe˘
[
OLD_PWD_INPUT_RECT
].
	`£tRe˘
(360,170, 300, 40);

44 
SysP¨amPageRe˘
[
NEW_PWD_INPUT_RECT
].
	`£tRe˘
(360,250, 300, 40);

45 
SysP¨amPageRe˘
[
CONFIRM_PWD_INPUT_RECT
].
	`£tRe˘
(360,330, 300, 40);

47 
SysP¨amPageRe˘Text
[
IP_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
ù
));

48 
SysP¨amPageRe˘Text
[
MASK_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
mask
));

49 
SysP¨amPageRe˘Text
[
GATEWAY_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
g©eway
));

50 
SysP¨amPageRe˘Text
[
DNS_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
dns
));

51 
SysP¨amPageRe˘PªviousText
[
IP_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
ù
));

52 
SysP¨amPageRe˘PªviousText
[
MASK_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
mask
));

53 
SysP¨amPageRe˘PªviousText
[
GATEWAY_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
g©eway
));

54 
SysP¨amPageRe˘PªviousText
[
DNS_INPUT_RECT
] = 
	`QSåög
(
	`QL©ö1Såög
(
	`AfxGëGlobÆ
()->
CuºítNëP¨am
.
dns
));

56 
KeyLöeEdô
 = 
√w
 
QLöeEdô
;

57 
NumBﬂrdFocusRe˘
 = -1;

58 
La°NumBﬂrdFocusRe˘
 = -1;

59 
Is_Re‰esh_SysP¨amTime
 = 
TRUE
;

60 
LogöSèã_SysP¨am
 = 
	`AfxGëLogöSèã
();

61 
	`c⁄√˘
(
KeyLöeEdô
 , 
	`SIGNAL
(
	`ãxtCh™ged
(
QSåög
)Ë, 
this
 , 
	`SLOT
(
	`TextCh™geFocusRe˘
(QString)));

62 
	`c⁄√˘
(
	`AfxGëGlobÆ
(Ë, 
	`SIGNAL
(
	`LogöSèãCh™ged
(
BYTE
)Ë, 
this
 , 
	`SLOT
(
	`LogöSèãCh™ge_SysP¨am
(BYTE)));

63 
	}
}

65 
BOOL
 
	gCPage_SysP¨amëî
::
	$AddD©a
–
LPVOID
 
pVoid
 )

67 
	`c⁄√˘
(
	`AfxGëWidgë
()->
Numkeybﬂrd
 , 
	`SIGNAL
(
	`hide_sig«l
()Ë, 
this
 , 
	`SLOT
(
	`NumBﬂrdHide
()));

68 
	`c⁄√˘
(
	`AfxGëWidgë
()->
Numkeybﬂrd
 , 
	`SIGNAL
(
	`show_sig«l
()Ë, 
this
 , 
	`SLOT
(
	`NumBﬂrdShow
()));

69  
FALSE
 ;

70 
	}
}

72 
BOOL
 
	gCPage_SysP¨amëî
::
	$DøwPage
–
QPaöãr
 * 
pPaöãr
 )

74 
CPage
::
	`DøwPage
–
pPaöãr
 ) ;

78 
	`DøwSysP¨amPage
–
pPaöãr
 ) ;

80  
FALSE
 ;

81 
	}
}

83 
BOOL
 
	gCPage_SysP¨amëî
::
	$DøwSysP¨amPage
–
QPaöãr
 * 
pPaöãr
 )

85 
BOOL
 
Rë
 = 
FALSE
;

86 
	`DøwSysP¨amO±i⁄
(
pPaöãr
);

87 if–
LogöSèã_SysP¨am
 =
CPage
::
LOGIN
 )

89  
SysP¨amO±i⁄
 )

91 
NET_PARAM
:

92 
Rë
 = 
	`DøwNëP¨am
(
pPaöãr
);

94 
SYS_TIME
:

95 
Rë
 = 
	`DøwSysTime
(
pPaöãr
);

97 
LOGIN_PWD
:

98 
Rë
 = 
	`DøwLogöPwd
(
pPaöãr
);

101 
Rë
 = 
	`DøwNëP¨am
(
pPaöãr
);

107 
pPaöãr
->
	`ßve
();

108 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

109 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,255,255,255));

110 
pPaöãr
->
	`£tPí
(
≥n
);

111 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

112 
f⁄t
.
	`£tPixñSize
(22);

113 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

114 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,200,400,200),
Qt
::
AlignCíãr
,
	`UTF8
("Â∞öÊú™ÁôªÂΩïÔºåÊó†ÊùÉÈôêÊìç‰ΩúËØ•È°µÈù¢ÔºÅÔºÅ"));

115 
pPaöãr
->
	`ª°‹e
();

117  
Rë
;

118 
	}
}

120 
BOOL
 
	gCPage_SysP¨amëî
::
	$DøwSysP¨amO±i⁄
–
QPaöãr
 * 
pPaöãr
 )

122 
pPaöãr
->
	`ßve
();

123 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

124 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,255,255,255));

125 
pPaöãr
->
	`£tPí
(
≥n
);

126 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

127 
f⁄t
.
	`£tPixñSize
(22);

128 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

129  
SysP¨amO±i⁄
 )

131 
NET_PARAM
:

132 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
] ,
	`UTF8
("ÁΩëÁªúÂèÇÊï∞"));

133 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
NET_PARAM_RECT
] , 
	`UTF8
(
NëP¨amPªssP©h
) );

134 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
SYS_TIME_RECT
] , 
	`UTF8
(
SysTimeRñó£P©h
) );

135 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
] , 
	`UTF8
(
LogöPwdRñó£P©h
) );

137 
SYS_TIME
:

138 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
] ,
	`UTF8
("Á≥ªÁªüÊó∂Èó¥"));

139 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
NET_PARAM_RECT
] , 
	`UTF8
(
NëP¨amRñó£P©h
) );

140 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
SYS_TIME_RECT
] , 
	`UTF8
(
SysTimePªssP©h
) );

141 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
] , 
	`UTF8
(
LogöPwdRñó£P©h
) );

143 
LOGIN_PWD
:

144 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
] ,
	`UTF8
("ÁôªÂΩïÂØÜÁ†Å"));

145 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
NET_PARAM_RECT
] , 
	`UTF8
(
NëP¨amRñó£P©h
) );

146 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
SYS_TIME_RECT
] , 
	`UTF8
(
SysTimeRñó£P©h
) );

147 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
] , 
	`UTF8
(
LogöPwdPªssP©h
) );

150 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
] ,
	`UTF8
("ÁΩëÁªúÂèÇÊï∞"));

151 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
NET_PARAM_RECT
] , 
	`UTF8
(
NëP¨amPªssP©h
) );

152 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
SYS_TIME_RECT
] , 
	`UTF8
(
SysTimeRñó£P©h
) );

153 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
] , 
	`UTF8
(
LogöPwdRñó£P©h
) );

156 
pPaöãr
->
	`ª°‹e
();

157  
TRUE
;

158 
	}
}

160 
BOOL
 
	gCPage_SysP¨amëî
::
	$DøwNëP¨am
–
QPaöãr
 * 
pPaöãr
 )

162 
pPaöãr
->
	`ßve
();

164 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

165 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,255,255,255));

166 
pPaöãr
->
	`£tPí
(
≥n
);

167 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

168 
f⁄t
.
	`£tPixñSize
(22);

169 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

170 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
] ,
	`UTF8
("ÁΩëÁªúÂèÇÊï∞"));

172 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
NET_PARAM_RECT
] , 
	`UTF8
(
NëP¨amPªssP©h
) );

173 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
SYS_TIME_RECT
] , 
	`UTF8
(
SysTimeRñó£P©h
) );

174 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
] , 
	`UTF8
(
LogöPwdRñó£P©h
) );

176 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,160, 108, 40Ë,
Qt
::
AlignCíãr
,
	`UTF8
("IPÂú∞ÂùÄÔºö"));

177 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,225, 108, 40Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Â≠êÁΩëÊé©Á†Å:"));

178 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,290, 108, 40Ë,
Qt
::
AlignCíãr
,
	`UTF8
("ÁΩëÂÖ≥Ôºö"));

179 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,355, 108, 40Ë,
Qt
::
AlignCíãr
,
	`UTF8
("DNSÔºö"));

181 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0x3c,0xb3,0x71,255));

182 
≥n
.
	`£tWidth
(3);

183 
pPaöãr
->
	`£tPí
(
≥n
);

185 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

186 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
IP_INPUT_RECT
]);

187 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
IP_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[IP_INPUT_RECT]);

188 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
MASK_INPUT_RECT
]);

189 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
MASK_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[MASK_INPUT_RECT]);

190 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
GATEWAY_INPUT_RECT
]);

191 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
GATEWAY_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[GATEWAY_INPUT_RECT]);

192 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
DNS_INPUT_RECT
]);

193 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
DNS_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[DNS_INPUT_RECT]);

195 
pPaöãr
->
	`£tBrush
(
Qt
::
bœck
);

196 
pPaöãr
->
	`døwRoundedRe˘
(
SysP¨amPageRe˘
[
YES_RECT
],5,5);

197 
pPaöãr
->
	`døwRoundedRe˘
(
SysP¨amPageRe˘
[
NO_RECT
],5,5);

200 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0xCD,0x66,0x00,255));

201 
pPaöãr
->
	`£tPí
(
≥n
);

202 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
YES_RECT
] ,
Qt
::
AlignCíãr
,
	`UTF8
("Á°ÆÂÆö"));

203 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
NO_RECT
] ,
Qt
::
AlignCíãr
,
	`UTF8
("ÂèñÊ∂à"));

205 if–
NumBﬂrdFocusRe˘
 != -1 )

207 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

208 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,0,0,255));

209 
≥n
.
	`£tWidth
(3);

210 
pPaöãr
->
	`£tPí
(
≥n
);

211 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
NumBﬂrdFocusRe˘
]);

212 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
NumBﬂrdFocusRe˘
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[NumBoardFocusRect]);

214 if–
La°NumBﬂrdFocusRe˘
 != -1 )

216 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

217 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0x3c,0xb3,0x71,255));

218 
≥n
.
	`£tWidth
(3);

219 
pPaöãr
->
	`£tPí
(
≥n
);

220 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
La°NumBﬂrdFocusRe˘
]);

221 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
La°NumBﬂrdFocusRe˘
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[LastNumBoardFocusRect]);

223 
pPaöãr
->
	`ª°‹e
();

224  
TRUE
;

225 
	}
}

227 
BOOL
 
	gCPage_SysP¨amëî
::
	$DøwSysTime
–
QPaöãr
 * 
pPaöãr
 )

229 
pPaöãr
->
	`ßve
();

231 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

232 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,255,255,255));

233 
pPaöãr
->
	`£tPí
(
≥n
);

234 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

235 
f⁄t
.
	`£tPixñSize
(22);

236 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

237 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
] ,
	`UTF8
("Á≥ªÁªüÊó∂Èó¥"));

239 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
NET_PARAM_RECT
] , 
	`UTF8
(
NëP¨amRñó£P©h
) );

240 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
SYS_TIME_RECT
] , 
	`UTF8
(
SysTimePªssP©h
) );

241 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
] , 
	`UTF8
(
LogöPwdRñó£P©h
) );

243 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0x3c,0xb3,0x71,255));

244 
≥n
.
	`£tWidth
(3);

245 
pPaöãr
->
	`£tPí
(
≥n
);

247 
pPaöãr
->
	`døwText
(
	`QRe˘
(230 , 145 , 130 , 45Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Âπ¥"));

248 
pPaöãr
->
	`døwText
(
	`QRe˘
(390 , 145 , 130 , 45Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Êúà"));

249 
pPaöãr
->
	`døwText
(
	`QRe˘
(550 , 145 , 130 , 45Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Êó•"));

250 
pPaöãr
->
	`døwText
(
	`QRe˘
(230 , 255 , 130 , 45Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Êó∂"));

251 
pPaöãr
->
	`døwText
(
	`QRe˘
(390 , 255 , 130 , 45Ë,
Qt
::
AlignCíãr
,
	`UTF8
("ÂàÜ"));

252 
pPaöãr
->
	`døwText
(
	`QRe˘
(550 , 255 , 130 , 45Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Áßí"));

254 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

255 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
YEAR_INPUT_RECT
]);

256 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
YEAR_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[YEAR_INPUT_RECT]);

257 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
MONTH_INPUT_RECT
]);

258 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
MONTH_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[MONTH_INPUT_RECT]);

259 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
DAY_INPUT_RECT
]);

260 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
DAY_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[DAY_INPUT_RECT]);

261 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
HOUR_INPUT_RECT
]);

262 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
HOUR_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[HOUR_INPUT_RECT]);

263 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
MINUTE_INPUT_RECT
]);

264 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
MINUTE_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[MINUTE_INPUT_RECT]);

265 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
SECOND_INPUT_RECT
]);

266 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
SECOND_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[SECOND_INPUT_RECT]);

268 
pPaöãr
->
	`£tBrush
(
Qt
::
bœck
);

269 
pPaöãr
->
	`døwRoundedRe˘
(
SysP¨amPageRe˘
[
YES_RECT
],5,5);

270 
pPaöãr
->
	`døwRoundedRe˘
(
SysP¨amPageRe˘
[
NO_RECT
],5,5);

273 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0xCD,0x66,0x00,255));

274 
pPaöãr
->
	`£tPí
(
≥n
);

275 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
YES_RECT
] ,
Qt
::
AlignCíãr
,
	`UTF8
("Á°ÆÂÆö"));

276 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
NO_RECT
] ,
Qt
::
AlignCíãr
,
	`UTF8
("ÂèñÊ∂à"));

278 if–
NumBﬂrdFocusRe˘
 != -1 )

280 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

281 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,0,0,255));

282 
≥n
.
	`£tWidth
(3);

283 
pPaöãr
->
	`£tPí
(
≥n
);

284 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
NumBﬂrdFocusRe˘
]);

285 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
NumBﬂrdFocusRe˘
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[NumBoardFocusRect]);

287 if–
La°NumBﬂrdFocusRe˘
 != -1 )

289 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

290 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0x3c,0xb3,0x71,255));

291 
≥n
.
	`£tWidth
(3);

292 
pPaöãr
->
	`£tPí
(
≥n
);

293 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
La°NumBﬂrdFocusRe˘
]);

294 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
La°NumBﬂrdFocusRe˘
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[LastNumBoardFocusRect]);

296 
pPaöãr
->
	`ª°‹e
();

297  
TRUE
;

298 
	}
}

300 
BOOL
 
	gCPage_SysP¨amëî
::
	$DøwLogöPwd
–
QPaöãr
 * 
pPaöãr
 )

302 
pPaöãr
->
	`ßve
();

303 
QSåög
 
tmpPassW‹d
;

304 
i
 = 0;

306 
QPí
 
≥n
 = 
pPaöãr
->
	`≥n
();

307 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,255,255,255));

308 
pPaöãr
->
	`£tPí
(
≥n
);

309 
QF⁄t
 
f⁄t
 = 
pPaöãr
->
	`f⁄t
();

310 
f⁄t
.
	`£tPixñSize
(22);

311 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

312 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CURRENT_PAGENAME_RECT
] ,
	`UTF8
("ÁôªÂΩïÂØÜÁ†Å"));

314 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
NET_PARAM_RECT
] , 
	`UTF8
(
NëP¨amRñó£P©h
) );

315 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
SYS_TIME_RECT
] , 
	`UTF8
(
SysTimeRñó£P©h
) );

316 
pPaöãr
->
	`døwPixm≠
–
SysP¨amPageRe˘
[
LOGIN_PWD_RECT
] , 
	`UTF8
(
LogöPwdPªssP©h
) );

318 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,170, 108, 40Ë,
Qt
::
AlignCíãr
,
	`UTF8
("ÂéüÂØÜÁ†ÅÔºö"));

319 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,250, 108, 40Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Êñ∞ÂØÜÁ†ÅÔºö"));

320 
pPaöãr
->
	`døwText
(
	`QRe˘
(250,330, 108, 40Ë,
Qt
::
AlignCíãr
,
	`UTF8
("Á°ÆËÆ§ÂØÜÁ†ÅÔºö"));

322 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0x3c,0xb3,0x71,255));

323 
≥n
.
	`£tWidth
(3);

324 
pPaöãr
->
	`£tPí
(
≥n
);

326 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

327 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
OLD_PWD_INPUT_RECT
]);

328 if–
SysP¨amPageRe˘Text
[
OLD_PWD_INPUT_RECT
].
	`Àngth
() > 0 )

330 
tmpPassW‹d
 = "";

331  
i
=0; i<
SysP¨amPageRe˘Text
[
OLD_PWD_INPUT_RECT
].
	`Àngth
(); i++ )

332 
tmpPassW‹d
 += '*';

333 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
OLD_PWD_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
tmpPassW‹d
);

335 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
NEW_PWD_INPUT_RECT
]);

336 if–
SysP¨amPageRe˘Text
[
NEW_PWD_INPUT_RECT
].
	`Àngth
() > 0 )

338 
tmpPassW‹d
 = "";

339  
i
=0; i<
SysP¨amPageRe˘Text
[
NEW_PWD_INPUT_RECT
].
	`Àngth
(); i++ )

340 
tmpPassW‹d
 += '*';

341 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
NEW_PWD_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
tmpPassW‹d
);

343 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
CONFIRM_PWD_INPUT_RECT
]);

344 if–
SysP¨amPageRe˘Text
[
CONFIRM_PWD_INPUT_RECT
].
	`Àngth
() > 0 )

346 
tmpPassW‹d
 = "";

347  
i
=0; i<
SysP¨amPageRe˘Text
[
CONFIRM_PWD_INPUT_RECT
].
	`Àngth
(); i++ )

348 
tmpPassW‹d
 += '*';

349 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
CONFIRM_PWD_INPUT_RECT
] ,
Qt
::
AlignCíãr
,
tmpPassW‹d
);

352 
pPaöãr
->
	`£tBrush
(
Qt
::
bœck
);

353 
pPaöãr
->
	`døwRoundedRe˘
(
SysP¨amPageRe˘
[
YES_RECT
],5,5);

354 
pPaöãr
->
	`døwRoundedRe˘
(
SysP¨amPageRe˘
[
NO_RECT
],5,5);

356 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0xCD,0x66,0x00,255));

357 
pPaöãr
->
	`£tPí
(
≥n
);

358 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
YES_RECT
] ,
Qt
::
AlignCíãr
,
	`UTF8
("Á°ÆÂÆö"));

359 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
NO_RECT
] ,
Qt
::
AlignCíãr
,
	`UTF8
("ÂèñÊ∂à"));

361 if–
NumBﬂrdFocusRe˘
 != -1 )

363 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

364 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(255,0,0,255));

365 
≥n
.
	`£tWidth
(3);

366 
pPaöãr
->
	`£tPí
(
≥n
);

367 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
NumBﬂrdFocusRe˘
]);

368 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
NumBﬂrdFocusRe˘
] ,
Qt
::
AlignCíãr
,
SysP¨amPageRe˘Text
[NumBoardFocusRect]);

370 if–
La°NumBﬂrdFocusRe˘
 != -1 )

372 
pPaöãr
->
	`£tBrush
(
Qt
::
whôe
);

373 
≥n
.
	`£tCﬁ‹
(
	`QCﬁ‹
(0x3c,0xb3,0x71,255));

374 
≥n
.
	`£tWidth
(3);

375 
pPaöãr
->
	`£tPí
(
≥n
);

376 
pPaöãr
->
	`døwRe˘
(
SysP¨amPageRe˘
[
La°NumBﬂrdFocusRe˘
]);

377 if–
SysP¨amPageRe˘Text
[
La°NumBﬂrdFocusRe˘
].
	`Àngth
() > 0 )

379 
tmpPassW‹d
 = "";

380  
i
=0; i<
SysP¨amPageRe˘Text
[
La°NumBﬂrdFocusRe˘
].
	`Àngth
(); i++ )

381 
tmpPassW‹d
 += '*';

382 
pPaöãr
->
	`døwText
(
SysP¨amPageRe˘
[
La°NumBﬂrdFocusRe˘
] ,
Qt
::
AlignCíãr
,
tmpPassW‹d
);

385 
pPaöãr
->
	`ª°‹e
();

386  
TRUE
;

387 
	}
}

389 
BOOL
 
	gCPage_SysP¨amëî
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

391 if–
CPage
::
	`mou£PªssEvít
–
pEvít
 ) )

393 if–
Widgë
::
PAGE_SYS_PARA
 !
	`AfxGëCurPageIndex
() )

395 
SysP¨amO±i⁄
 = 
NET_PARAM
;

396 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

397 
NumBﬂrdFocusRe˘
 = -1;

398 
La°NumBﬂrdFocusRe˘
 = -1;

399 
Is_Re‰esh_SysP¨amTime
 = 
TRUE
;

400 
SysP¨amPageRe˘Text
[
IP_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[IP_INPUT_RECT];

401 
SysP¨amPageRe˘Text
[
MASK_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[MASK_INPUT_RECT];

402 
SysP¨amPageRe˘Text
[
GATEWAY_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[GATEWAY_INPUT_RECT];

403 
SysP¨amPageRe˘Text
[
DNS_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[DNS_INPUT_RECT];

404 
SysP¨amPageRe˘Text
[
OLD_PWD_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[OLD_PWD_INPUT_RECT];

405 
SysP¨amPageRe˘Text
[
NEW_PWD_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[NEW_PWD_INPUT_RECT];

406 
SysP¨amPageRe˘Text
[
CONFIRM_PWD_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[CONFIRM_PWD_INPUT_RECT];

408 
	`AfxRe‰eshS¸ìn
();

409  
TRUE
 ;

412 if(
pEvít
->
	`buâ⁄
(Ë=
Qt
::
Le·Buâ⁄
)

414 
BOOL
 
Rë
 = 
FALSE
;

416 if–
	`Mou£PªssChoi˚Page
(
pEvít
) )

417  
TRUE
;

418 if–
LogöSèã_SysP¨am
 =
CPage
::
LOGIN
 )

420  
SysP¨amO±i⁄
 )

422 
NET_PARAM
:

423 
Rë
 = 
	`Mou£PªssNëP¨am
(
pEvít
);

425 
SYS_TIME
:

426 
Rë
 = 
	`Mou£PªssSysTime
(
pEvít
);

428 
LOGIN_PWD
:

429 
Rë
 = 
	`Mou£PªssLogöPwd
(
pEvít
);

432 
Rë
 = 
	`Mou£PªssNëP¨am
(
pEvít
);

435  
Rë
;

439 
	`AfxRe‰eshS¸ìn
( );

440  
FALSE
 ;

441 
	}
}

443 
BOOL
 
	gCPage_SysP¨amëî
::
	$Mou£PªssChoi˚Page
–
QMou£Evít
 *
pEvít
 )

445 if–
SysP¨amPageRe˘
[ 
NET_PARAM_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

447 if–
SysP¨amO±i⁄
 !
NET_PARAM
 )

449 
Is_Re‰esh_SysP¨amTime
 = 
TRUE
;

450 
SysP¨amO±i⁄
 = 
NET_PARAM
;

453 if–
SysP¨amPageRe˘
[ 
SYS_TIME_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

455 if–
SysP¨amO±i⁄
 !
SYS_TIME
 )

457 
SysP¨amO±i⁄
 = 
SYS_TIME
;

460 if–
SysP¨amPageRe˘
[ 
LOGIN_PWD_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

462 if–
SysP¨amO±i⁄
 !
LOGIN_PWD
 )

464 
Is_Re‰esh_SysP¨amTime
 = 
TRUE
;

465 
SysP¨amO±i⁄
 = 
LOGIN_PWD
;

470  
FALSE
;

473 
SysP¨amPageRe˘Text
[
IP_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[IP_INPUT_RECT];

474 
SysP¨amPageRe˘Text
[
MASK_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[MASK_INPUT_RECT];

475 
SysP¨amPageRe˘Text
[
GATEWAY_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[GATEWAY_INPUT_RECT];

476 
SysP¨amPageRe˘Text
[
DNS_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[DNS_INPUT_RECT];

477 
SysP¨amPageRe˘Text
[
YEAR_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[YEAR_INPUT_RECT];

478 
SysP¨amPageRe˘Text
[
MONTH_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[MONTH_INPUT_RECT];

479 
SysP¨amPageRe˘Text
[
DAY_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[DAY_INPUT_RECT];

480 
SysP¨amPageRe˘Text
[
HOUR_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[HOUR_INPUT_RECT];

481 
SysP¨amPageRe˘Text
[
MINUTE_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[MINUTE_INPUT_RECT];

482 
SysP¨amPageRe˘Text
[
SECOND_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[SECOND_INPUT_RECT];

483 
SysP¨amPageRe˘Text
[
OLD_PWD_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[OLD_PWD_INPUT_RECT];

484 
SysP¨amPageRe˘Text
[
NEW_PWD_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[NEW_PWD_INPUT_RECT];

485 
SysP¨amPageRe˘Text
[
CONFIRM_PWD_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[CONFIRM_PWD_INPUT_RECT];

487 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

488 
NumBﬂrdFocusRe˘
 = -1;

489 
La°NumBﬂrdFocusRe˘
 = -1;

490 
	`AfxGëWidgë
()->
	`upd©e
();

492  
TRUE
;

493 
	}
}

495 
BOOL
 
	gCPage_SysP¨amëî
::
	$Mou£PªssNëP¨am
–
QMou£Evít
 *
pEvít
 )

497 if–
SysP¨amPageRe˘
[ 
IP_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

499 if–
NumBﬂrdFocusRe˘
 =
IP_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

500 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

502 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

506 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

507 
NumBﬂrdFocusRe˘
 = 
IP_INPUT_RECT
;

508 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );;

511 if(
SysP¨amPageRe˘
[ 
MASK_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

513 if–
NumBﬂrdFocusRe˘
 =
MASK_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

514 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

516 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

520 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

521 
NumBﬂrdFocusRe˘
 = 
MASK_INPUT_RECT
;

522 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

525 if(
SysP¨amPageRe˘
[ 
GATEWAY_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

527 if–
NumBﬂrdFocusRe˘
 =
GATEWAY_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

528 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

530 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

534 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

535 
NumBﬂrdFocusRe˘
 = 
GATEWAY_INPUT_RECT
;

536 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

539 if(
SysP¨amPageRe˘
[ 
DNS_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

541 if–
NumBﬂrdFocusRe˘
 =
DNS_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

542 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

544 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

548 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

549 
NumBﬂrdFocusRe˘
 = 
DNS_INPUT_RECT
;

550 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

553 if(
SysP¨amPageRe˘
[ 
YES_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

555 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

556 if–
FALSE
 =
	`Is_vÆid_NëP¨am
(
SysP¨amPageRe˘Text
[
IP_INPUT_RECT
],

557 
SysP¨amPageRe˘Text
[
GATEWAY_INPUT_RECT
],

558 
SysP¨amPageRe˘Text
[
MASK_INPUT_RECT
],

559 
SysP¨amPageRe˘Text
[
DNS_INPUT_RECT
]) )

561  
FALSE
;

563 
QMesßgeBox
::
	`öf‹m©i⁄
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Á°ÆÂÆö") , UTF8("‰øÆÊîπÊàêÂäü!!!") ,

564 
QObje˘
::
	`å
("Á°ÆÂÆö"));

565 
NETPARAM
 
tmpNëP¨am
 ;

566 
	`mem˝y
(
tmpNëP¨am
.
ù
 , 
SysP¨amPageRe˘Text
[
IP_INPUT_RECT
].
	`toStdSåög
().
	`c_°r
() , (tmpNetParam.ip));

567 
	`mem˝y
(
tmpNëP¨am
.
mask
 , 
SysP¨amPageRe˘Text
[
MASK_INPUT_RECT
].
	`toStdSåög
().
	`c_°r
() , (tmpNetParam.mask));

568 
	`mem˝y
(
tmpNëP¨am
.
g©eway
 , 
SysP¨amPageRe˘Text
[
GATEWAY_INPUT_RECT
].
	`toStdSåög
().
	`c_°r
() , (tmpNetParam.gateway));

569 
	`mem˝y
(
tmpNëP¨am
.
dns
 , 
SysP¨amPageRe˘Text
[
DNS_INPUT_RECT
].
	`toStdSåög
().
	`c_°r
(Ë, —mpNëP¨am.
g©eway
));

570 
	`AfxWrôeNëP¨amFûe
(&
tmpNëP¨am
);

571 
	`AfxSëNëP¨am
(&
tmpNëP¨am
);

572 
SysP¨amPageRe˘PªviousText
[
IP_INPUT_RECT
] = 
SysP¨amPageRe˘Text
[IP_INPUT_RECT];

573 
SysP¨amPageRe˘PªviousText
[
MASK_INPUT_RECT
] = 
SysP¨amPageRe˘Text
[MASK_INPUT_RECT];

574 
SysP¨amPageRe˘PªviousText
[
GATEWAY_INPUT_RECT
] = 
SysP¨amPageRe˘Text
[GATEWAY_INPUT_RECT];

575 
SysP¨amPageRe˘PªviousText
[
DNS_INPUT_RECT
] = 
SysP¨amPageRe˘Text
[DNS_INPUT_RECT];

576 
	`AfxGëWidgë
()->
	`upd©e
();

578 if(
SysP¨amPageRe˘
[ 
NO_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

580 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

581 
SysP¨amPageRe˘Text
[
IP_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[IP_INPUT_RECT];

582 
SysP¨amPageRe˘Text
[
MASK_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[MASK_INPUT_RECT];

583 
SysP¨amPageRe˘Text
[
GATEWAY_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[GATEWAY_INPUT_RECT];

584 
SysP¨amPageRe˘Text
[
DNS_INPUT_RECT
] = 
SysP¨amPageRe˘PªviousText
[DNS_INPUT_RECT];

585 
	`AfxGëWidgë
()->
	`upd©e
();

587  
TRUE
;

588 
	}
}

590 
BOOL
 
	gCPage_SysP¨amëî
::
	$Mou£PªssSysTime
–
QMou£Evít
 *
pEvít
 )

592 if–
SysP¨amPageRe˘
[ 
YEAR_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

594 if–
NumBﬂrdFocusRe˘
 =
YEAR_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

595 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

597 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

601 
Is_Re‰esh_SysP¨amTime
 = 
FALSE
;

602 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

603 
NumBﬂrdFocusRe˘
 = 
YEAR_INPUT_RECT
;

604 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );;

607 if(
SysP¨amPageRe˘
[ 
MONTH_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

609 if–
NumBﬂrdFocusRe˘
 =
MONTH_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

610 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

612 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

616 
Is_Re‰esh_SysP¨amTime
 = 
FALSE
;

617 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

618 
NumBﬂrdFocusRe˘
 = 
MONTH_INPUT_RECT
;

619 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

622 if(
SysP¨amPageRe˘
[ 
DAY_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

624 if–
NumBﬂrdFocusRe˘
 =
DAY_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

625 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

627 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

631 
Is_Re‰esh_SysP¨amTime
 = 
FALSE
;

632 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

633 
NumBﬂrdFocusRe˘
 = 
DAY_INPUT_RECT
;

634 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

637 if(
SysP¨amPageRe˘
[ 
HOUR_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

639 if–
NumBﬂrdFocusRe˘
 =
HOUR_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

640 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

642 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

646 
Is_Re‰esh_SysP¨amTime
 = 
FALSE
;

647 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

648 
NumBﬂrdFocusRe˘
 = 
HOUR_INPUT_RECT
;

649 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

652 if(
SysP¨amPageRe˘
[ 
MINUTE_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

654 if–
NumBﬂrdFocusRe˘
 =
MINUTE_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

655 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

657 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

661 
Is_Re‰esh_SysP¨amTime
 = 
FALSE
;

662 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

663 
NumBﬂrdFocusRe˘
 = 
MINUTE_INPUT_RECT
;

664 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

667 if(
SysP¨amPageRe˘
[ 
SECOND_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

669 if–
NumBﬂrdFocusRe˘
 =
SECOND_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

670 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

672 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

676 
Is_Re‰esh_SysP¨amTime
 = 
FALSE
;

677 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

678 
NumBﬂrdFocusRe˘
 = 
SECOND_INPUT_RECT
;

679 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

682 if(
SysP¨amPageRe˘
[ 
YES_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

684 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

685 if–
FALSE
 =
	`Is_vÆid_SysTime
(
SysP¨amPageRe˘Text
[
YEAR_INPUT_RECT
],

686 
SysP¨amPageRe˘Text
[
MONTH_INPUT_RECT
],

687 
SysP¨amPageRe˘Text
[
DAY_INPUT_RECT
],

688 
SysP¨amPageRe˘Text
[
HOUR_INPUT_RECT
],

689 
SysP¨amPageRe˘Text
[
MINUTE_INPUT_RECT
],

690 
SysP¨amPageRe˘Text
[
SECOND_INPUT_RECT
]) )

692  
FALSE
;

694 
QMesßgeBox
::
	`öf‹m©i⁄
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Á°ÆÂÆö") , UTF8("‰øÆÊîπÊàêÂäü!!!") ,

695 
QObje˘
::
	`å
("Á°ÆÂÆö"));

696 
Is_Re‰esh_SysP¨amTime
 = 
TRUE
;

704 
	`AfxGëWidgë
()->
	`upd©e
();

706 if(
SysP¨amPageRe˘
[ 
NO_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

708 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

709 
Is_Re‰esh_SysP¨amTime
 = 
TRUE
;

718 
	`AfxGëWidgë
()->
	`upd©e
();

720  
TRUE
;

721 
	}
}

723 
BOOL
 
	gCPage_SysP¨amëî
::
	$Mou£PªssLogöPwd
–
QMou£Evít
 *
pEvít
 )

725 if–
SysP¨amPageRe˘
[ 
OLD_PWD_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

727 if–
NumBﬂrdFocusRe˘
 =
OLD_PWD_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

728 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

730 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

734 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

735 
NumBﬂrdFocusRe˘
 = 
OLD_PWD_INPUT_RECT
;

736 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );;

739 if(
SysP¨amPageRe˘
[ 
NEW_PWD_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

741 if–
NumBﬂrdFocusRe˘
 =
NEW_PWD_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

742 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

744 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

748 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

749 
NumBﬂrdFocusRe˘
 = 
NEW_PWD_INPUT_RECT
;

750 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

753 if(
SysP¨amPageRe˘
[ 
CONFIRM_PWD_INPUT_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

755 if–
NumBﬂrdFocusRe˘
 =
CONFIRM_PWD_INPUT_RECT
 && 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() &&

756 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_WIDGET
 )

758 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

762 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

763 
NumBﬂrdFocusRe˘
 = 
CONFIRM_PWD_INPUT_RECT
;

764 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
–
KeyLöeEdô
 );

767 if(
SysP¨amPageRe˘
[ 
YES_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

769 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

770 if–
FALSE
 =
	`Is_vÆid_LogöPwd
(
SysP¨amPageRe˘Text
[
OLD_PWD_INPUT_RECT
],

771 
SysP¨amPageRe˘Text
[
NEW_PWD_INPUT_RECT
],

772 
SysP¨amPageRe˘Text
[
CONFIRM_PWD_INPUT_RECT
]) )

774  
FALSE
;

778 
SysP¨amPageRe˘PªviousText
[
OLD_PWD_INPUT_RECT
] = "";

779 
SysP¨amPageRe˘PªviousText
[
NEW_PWD_INPUT_RECT
] = "";

780 
SysP¨amPageRe˘PªviousText
[
CONFIRM_PWD_INPUT_RECT
] = "";

781 
SysP¨amPageRe˘PªviousText
[
OLD_PWD_INPUT_RECT
].
	`˛ór
();

782 
SysP¨amPageRe˘PªviousText
[
NEW_PWD_INPUT_RECT
].
	`˛ór
();

783 
SysP¨amPageRe˘PªviousText
[
CONFIRM_PWD_INPUT_RECT
].
	`˛ór
();

784 
SysP¨amPageRe˘Text
[
OLD_PWD_INPUT_RECT
].
	`˛ór
();

785 
SysP¨amPageRe˘Text
[
NEW_PWD_INPUT_RECT
].
	`˛ór
();

786 
SysP¨amPageRe˘Text
[
CONFIRM_PWD_INPUT_RECT
].
	`˛ór
();

789 
	`AfxGëWidgë
()->
	`upd©e
();

791 if(
SysP¨amPageRe˘
[ 
NO_RECT
 ].
	`c⁄èös
(
pEvít
->
	`pos
()) )

793 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
KeyLöeEdô
);

794 
SysP¨amPageRe˘Text
[
OLD_PWD_INPUT_RECT
] = "";

795 
SysP¨amPageRe˘Text
[
NEW_PWD_INPUT_RECT
] = "";

796 
SysP¨amPageRe˘Text
[
CONFIRM_PWD_INPUT_RECT
] = "";

797 
	`AfxGëWidgë
()->
	`upd©e
();

799  
TRUE
;

800 
	}
}

802 
	gCPage_SysP¨amëî
::
	$TextCh™geFocusRe˘
(
QSåög
 
ãxt
)

804 
SysP¨amPageRe˘Text
[
NumBﬂrdFocusRe˘
] = 
ãxt
;

805 
	`AfxGëWidgë
()->
	`upd©e
–
SysP¨amPageRe˘
[ 
NumBﬂrdFocusRe˘
 ] );

806 
	}
}

808 
BOOL
 
	gCPage_SysP¨amëî
::
	$is_vÆid_ù
(c⁄° *
ù
)

810 
£˘i⁄
 = 0;

811 
dŸ
 = 0;

812 
œ°
 = -1;

813 *
ù
)

815 if(*
ù
 == '.')

817 
dŸ
++;

818 if(
dŸ
 > 3)

820  
FALSE
;

822 if(
£˘i⁄
 >= 0 && section <=255)

824 if–
dŸ
 =1 && 
£˘i⁄
 == 0 )

825  
FALSE
;

826 
£˘i⁄
 = -1;

830  
FALSE
;

833 if(*
ù
 >= '0' && *ip <= '9')

835 if–
£˘i⁄
 == -1 )

836 
£˘i⁄
 = 0;

837 
£˘i⁄
 = se˘i⁄ * 10 + *
ù
 - '0';

841  
FALSE
;

843 
œ°
 = *
ù
;

844 
ù
++;

847 if(
£˘i⁄
 >= 0 && section <=255)

849 if(3 =
dŸ
)

851 
£˘i⁄
 = 0;

854  
TRUE
;

857  
FALSE
;

858 
	}
}

863 
BOOL
 
	gCPage_SysP¨amëî
::
	$√tMaskIsVÆid
(
DWORD
 
mask
)

865 
ii
;

866 
ii
 = 
	`¡ohl
(
mask
);

867 if((
ii
|(ii-1))==0xffffffff)

869  
TRUE
;

872  
FALSE
;

873 
	}
}

876 
BOOL
 
	gCPage_SysP¨amëî
::
	$√tMaskAndIpIsVÆid
(
DWORD
 
IP
, DWORD 
mask
)

878 
DWORD
 
a
, 
b
=0, 
c
;

879 
a
 = 
IP
&0x000000ff;

880 
b
 = 
	`¡ohl
(
mask
);

883 if(
a
>0&&a<127)

885 if(
mask
<0x000000ff)

886  
FALSE
;

887 if(
mask
>0x000000ff)

888 
b
-=0xff000000;

890 if(
a
>=128&&a<=191)

892 if(
mask
<0x0000ffff)

893  
FALSE
;

894 if(
mask
>0x0000ffff)

895 
b
-=0xffff0000;

897 if(
a
>=192&&a<=223)

899 if(
mask
<0x00ffffff)

900  
FALSE
;

901 if(
mask
>0x00ffffff)

902 
b
-=0xffffff00;

906 
c
 = ~
	`¡ohl
(
mask
)&¡ohl(
IP
);

907 if(
c
==0||c==~
	`¡ohl
(
mask
))

908  
FALSE
;

911 if(
b
>0)

913 
c
 = 
b
&(
	`¡ohl
(
IP
));

914 if(
c
==0||c==
b
)

915  
FALSE
;

918  
TRUE
;

919 
	}
}

922 
BOOL
 
	gCPage_SysP¨amëî
::
	$Is_vÆid_NëP¨am
(
QSåög
 
ù
, QSåög 
subIP
, QSåög 
mask
, QSåög 
dns
)

924 
i
;

925 
addr1
, 
addr2
;

927 
°d
::
°rög
 
°rù
 = 
ù
.
	`toStdSåög
();

928 c⁄° * 
chIp
 = 
°rù
.
	`c_°r
();

929 
°d
::
°rög
 
°rSubIP
 = 
subIP
.
	`toStdSåög
();

930 c⁄° * 
chSubIP
 = 
°rSubIP
.
	`c_°r
();

931 
°d
::
°rög
 
°rMask
 = 
mask
.
	`toStdSåög
();

932 c⁄° * 
chMask
 = 
°rMask
.
	`c_°r
();

933 
°d
::
°rög
 
°rDns
 = 
dns
.
	`toStdSåög
();

934 c⁄° * 
chDns
 = 
°rDns
.
	`c_°r
();

936 
tmpDw‹d
[4] = {};

937 
DWORD
 
DwIp
,
DwSubIP
,
DwMask
;

938 
DWORD
 * 
PDwIp
;

939 
DWORD
 * 
PDwSubIP
;

940 
DWORD
 * 
PDwMask
;

941 
boﬁ
 
ok
;

942 
tmpDw‹d
[0] = 
ù
.
	`£˘i⁄
('.',0,0).
	`toI¡
(&
ok
,10);

943 
tmpDw‹d
[1] = 
ù
.
	`£˘i⁄
('.',1,1).
	`toI¡
(&
ok
,10);

944 
tmpDw‹d
[2] = 
ù
.
	`£˘i⁄
('.',2,2).
	`toI¡
(&
ok
,10);

945 
tmpDw‹d
[3] = 
ù
.
	`£˘i⁄
('.',3,3).
	`toI¡
(&
ok
,10);

947 
PDwIp
 = (
DWORD
 *)(
tmpDw‹d
);

948 
DwIp
 = *
PDwIp
;

949 
tmpDw‹d
[0] = 
subIP
.
	`£˘i⁄
('.',0,0).
	`toI¡
(&
ok
,10);

950 
tmpDw‹d
[1] = 
subIP
.
	`£˘i⁄
('.',1,1).
	`toI¡
(&
ok
,10);

951 
tmpDw‹d
[2] = 
subIP
.
	`£˘i⁄
('.',2,2).
	`toI¡
(&
ok
,10);

952 
tmpDw‹d
[3] = 
subIP
.
	`£˘i⁄
('.',3,3).
	`toI¡
(&
ok
,10);

954 
PDwSubIP
 = (
DWORD
 *)(
tmpDw‹d
);

955 
DwSubIP
 = *
PDwSubIP
;

956 
tmpDw‹d
[0] = 
mask
.
	`£˘i⁄
('.',0,0).
	`toI¡
(&
ok
,10);

957 
tmpDw‹d
[1] = 
mask
.
	`£˘i⁄
('.',1,1).
	`toI¡
(&
ok
,10);

958 
tmpDw‹d
[2] = 
mask
.
	`£˘i⁄
('.',2,2).
	`toI¡
(&
ok
,10);

959 
tmpDw‹d
[3] = 
mask
.
	`£˘i⁄
('.',3,3).
	`toI¡
(&
ok
,10);

961 
PDwMask
 = (
DWORD
 *)(
tmpDw‹d
);

962 
DwMask
 = *
PDwMask
;

965 if(!
	`is_vÆid_ù
(
chIp
))

967 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("IPÈîôËØØ!!!") ,

968 
QObje˘
::
	`å
("Á°ÆÂÆö"));

969  
FALSE
;

971 if(!
	`is_vÆid_ù
(
chSubIP
))

973 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("ÁΩëÂÖ≥ÈîôËØØ!!!") ,

974 
QObje˘
::
	`å
("Á°ÆÂÆö"));

975  
FALSE
;

977 if(!
	`is_vÆid_ù
(
chMask
Ë|| !
	`√tMaskIsVÆid
(
DwMask
))

979 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("Â≠êÁΩëÊé©Á†ÅÈîôËØØ!!!") ,

980 
QObje˘
::
	`å
("Á°ÆÂÆö"));

981  
FALSE
;

983 if(!
	`is_vÆid_ù
(
chDns
))

985 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("DnsÈîôËØØ!!!") ,

986 
QObje˘
::
	`å
("Á°ÆÂÆö"));

987  
FALSE
;

990 
i
 = 
	`√tMaskAndIpIsVÆid
(
DwIp
, 
DwMask
);

991 if(
i
!=
TRUE
)

993 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("IPÂíåÂ≠êÁΩëÊé©Á†ÅÂØπÂ∫îÈîôËØØ!!!") ,

994 
QObje˘
::
	`å
("Á°ÆÂÆö"));

995  
FALSE
;

997 
i
 = 
	`√tMaskAndIpIsVÆid
(
DwSubIP
, 
DwMask
);

998 if(
i
!=
TRUE
)

1000 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("ÁΩëÂÖ≥ÂíåÂ≠êÁΩëÊé©Á†ÅÂØπÂ∫îÈîôËØØ!!!") ,

1001 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1002  
FALSE
;

1005 
addr1
 = 
DwIp
&
DwMask
;

1006 
addr2
 = 
DwSubIP
&
DwMask
;

1008 if(
addr1
!=
addr2
)

1010 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("IPÂíåÁΩëÂÖ≥‰∏çÂú®Âêå‰∏ÄÁΩëÊÆµ!!!") ,

1011 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1012  
FALSE
;

1015  
TRUE
;

1016 
	}
}

1018 
BOOL
 
	gCPage_SysP¨amëî
::
	$Is_vÆid_SysTime
(
QSåög
 
Yór
, QSåög 
M⁄th
,

1019 
QSåög
 
Day
, QSåög 
Hour
, QSåög 
Möuã
, QSåög 
Sec⁄d
)

1021 
QSåög
 
tmp°r
 = ".";

1023 if–
Yór
.
	`isEm±y
(Ë> 0 || 
M⁄th
.isEm±y(Ë> 0 || 
Day
.isEmpty() > 0 ||

1024 
Hour
.
	`isEm±y
(Ë> 0 || 
Möuã
.isEm±y(Ë> 0 || 
Sec⁄d
.isEmpty() > 0 )

1026 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("Êó∂Èó¥‰∏çËÉΩ‰∏∫Á©∫!!!") ,

1027 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1028  
FALSE
;

1030 if–
Yór
.
	`ödexOf
(
tmp°r
Ë> 0 || 
M⁄th
.ödexOf—mp°rË> 0 || 
Day
.indexOf(tmpstr) > 0 ||

1031 
Hour
.
	`ödexOf
(
tmp°r
Ë> 0 || 
Möuã
.ödexOf—mp°rË> 0 || 
Sec⁄d
.indexOf(tmpstr) > 0 )

1033 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("Êó∂Èó¥‰∏çËÉΩÂê´ÊúâÁ¨¶Âè∑‚Äú.‚Äù!!!") ,

1034 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1035  
FALSE
;

1038 
iYór
,
iM⁄th
,
iDay
,
iHour
,
iMöuã
,
iSec⁄d
;

1039 
iYór
 = 
Yór
.
	`toI¡
();

1040 
iM⁄th
 = 
M⁄th
.
	`toI¡
();

1041 
iDay
 = 
Day
.
	`toI¡
();

1042 
iHour
 = 
Hour
.
	`toI¡
();

1043 
iMöuã
 = 
Möuã
.
	`toI¡
();

1044 
iSec⁄d
 = 
Sec⁄d
.
	`toI¡
();

1046 if–
iYór
<1970 || iYear>2037 )

1048 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("YearÂè™ËÉΩËÆæÂÆöÂú®1970ÔΩû2037‰πãÈó¥!!!") ,

1049 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1050  
FALSE
;

1054  
iM⁄th
 )

1063 if–
iDay
<1 || iDay > 31 )

1065 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("DayË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1066 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1067  
FALSE
;

1071 if((
iYór
%4==0&&iYear%100!=0)||(iYear%400==0))

1073 if–
iDay
<1 || iDay > 29 )

1075 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("DayË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1076 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1077  
FALSE
;

1082 if–
iDay
<1 || iDay > 28 )

1084 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("DayË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1085 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1086  
FALSE
;

1094 if–
iDay
<1 || iDay > 30 )

1096 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("DayË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1097 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1098  
FALSE
;

1102 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("MonthË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1103 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1104  
FALSE
;

1106 if–
iHour
<0 || iHour > 23 )

1108 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("HourË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1109 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1110  
FALSE
;

1114 if–
iMöuã
<0 || iMinute > 59 )

1116 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("MinuteË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1117 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1118  
FALSE
;

1122 if–
iSec⁄d
<0 || iSecond > 59 )

1124 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("SecondË∂ÖÂá∫ËåÉÂõ¥!!!") ,

1125 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1126  
FALSE
;

1131 
REALTIME
 
SëTime
;

1132 
	`mem£t
–&
SëTime
 , 0 , ( SetTime ) );

1133 
SëTime
.
wYór
 = 
iYór
;

1134 
SëTime
.
wM⁄th
 = 
iM⁄th
;

1135 
SëTime
.
wDay
 = 
iDay
;

1136 
SëTime
.
wHour
 = 
iHour
;

1137 
SëTime
.
wMöuã
 = 
iMöuã
;

1138 
SëTime
.
wSec⁄d
 = 
iSec⁄d
;

1139 
	`AfxSëSysTime
(&
SëTime
);

1140  
TRUE
;

1141 
	}
}

1143 
BOOL
 
	gCPage_SysP¨amëî
::
	$Is_vÆid_LogöPwd
(
QSåög
 
OldPwd
, QSåög 
NewPwd
, QSåög 
C⁄fúmPwd
)

1145 if–0 !
QSåög
::
	`com∑ª
(
	`QSåög
(
	`AfxGëGlobÆ
()->
CuºítU§Pwd
.
Pwd
Ë, 
OldPwd
) )

1147 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("ÂéüÂØÜÁ†Å‰∏çÊ≠£Á°Æ!!!") ,

1148 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1149  
FALSE
;

1153 if–
NewPwd
.
	`Àngth
() != 6 )

1155 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("ËØ∑ËæìÂÖ•6‰ΩçÂ≠óÁ¨¶ÁöÑÊñ∞ÂØÜÁ†Å!!!") ,

1156 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1157  
FALSE
;

1161 if–0 !
QSåög
::
	`com∑ª
(
NewPwd
 , 
C⁄fúmPwd
) )

1163 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("Ë≠¶Âëä") , UTF8("Á°ÆËÆ§ÂØÜÁ†Å‰∏éÊñ∞ÂØÜÁ†Å‰∏ç‰∏ÄËá¥!!!") ,

1164 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1165  
FALSE
;

1169 
°d
::
°rög
 
°rNewPwd
 = 
C⁄fúmPwd
.
	`toStdSåög
();

1170 c⁄° * 
chNewPwd
 = 
°rNewPwd
.
	`c_°r
();

1172 
USRPWD
 
SëNewU§Pwd
;

1173 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

1174 
	`mem£t
–&
SëNewU§Pwd
 , 0 , (
USRPWD
) );

1175 
	`mem˝y
–
SëNewU§Pwd
.
U§
 , 
tmpGlobÆ
->
CuºítU§Pwd
.Usr , (SetNewUsrPwd.Usr) );

1176 
	`mem˝y
–
SëNewU§Pwd
.
Pwd
 , 
chNewPwd
 , 
C⁄fúmPwd
.
	`Àngth
() );

1177 
	`AfxWrôePwd
–&
SëNewU§Pwd
 );

1178 
QMesßgeBox
::
	`w¨nög
(
	`AfxGëWidgë
(Ë, 
	`UTF8
("ÊèêÁ§∫") , UTF8("Êñ∞ÂØÜÁ†ÅËÆæÁΩÆÊàêÂäü!!!") ,

1179 
QObje˘
::
	`å
("Á°ÆÂÆö"));

1184  
TRUE
;

1185 
	}
}

1187 
	gCPage_SysP¨amëî
::
	$NumBﬂrdShow
()

1189 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 = 
Widgë
::
BOARD_WIDGET
;

1190 
KeyLöeEdô
->
	`£tText
(
SysP¨amPageRe˘Text
[
NumBﬂrdFocusRe˘
]);

1191 
	`AfxGëWidgë
()->
	`upd©e
(
SysP¨amPageRe˘
[ 
NumBﬂrdFocusRe˘
 ]);

1192 
	`AfxGëWidgë
()->
	`upd©e
(
SysP¨amPageRe˘
[ 
La°NumBﬂrdFocusRe˘
 ]);

1193 
	}
}

1195 
	gCPage_SysP¨amëî
::
	$NumBﬂrdHide
()

1197 
La°NumBﬂrdFocusRe˘
 = 
NumBﬂrdFocusRe˘
;

1198 
NumBﬂrdFocusRe˘
 = -1;

1199 
	`AfxGëWidgë
()->
	`upd©e
(
SysP¨amPageRe˘
[ 
La°NumBﬂrdFocusRe˘
 ]);

1200 
	}
}

1202 
	gCPage_SysP¨amëî
::
	$LogöSèãCh™ge_SysP¨am
(
BYTE
 
bySèã
)

1204 
LogöSèã_SysP¨am
 = 
bySèã
;

1205 
	`AfxGëWidgë
()->
	`upd©e
();

1206 
	}
}

	@Pages/cpage_sysparameter.h

1 #i‚de‡
CPAGE_SYSPARAMETER_H


2 
	#CPAGE_SYSPARAMETER_H


	)

3 
	~"˝age.h
"

5 ˛as†
	cCPage_SysP¨amëî
 : 
public
 
CPage


7 
Q_OBJECT


8 
public
:

9 
CPage_SysP¨amëî
(
BYTE
 
byTy≥
 );

10 
vútuÆ
 
BOOL
 
AddD©a
–
LPVOID
 
pVoid
 ) ;

11 
vútuÆ
 
BOOL
 
DøwPage
–
QPaöãr
 * 
pPaöãr
 );

12 
vútuÆ
 
BOOL
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

14 íum{
	mCURRENT_PAGENAME_RECT
,
	mNET_PARAM_RECT
,
	mSYS_TIME_RECT
,
	mLOGIN_PWD_RECT
,

15 
	mIP_INPUT_RECT
,
	mMASK_INPUT_RECT
,
	mGATEWAY_INPUT_RECT
,
	mDNS_INPUT_RECT
,

16 
	mYEAR_INPUT_RECT
,
	mMONTH_INPUT_RECT
,
	mDAY_INPUT_RECT
,
	mHOUR_INPUT_RECT
,

17 
	mMINUTE_INPUT_RECT
,
	mSECOND_INPUT_RECT
,
	mOLD_PWD_INPUT_RECT
,
	mNEW_PWD_INPUT_RECT
,

18 
	mCONFIRM_PWD_INPUT_RECT
,
	mYES_RECT
,
	mNO_RECT
};

19 íum{
	gNET_PARAM
,
	gSYS_TIME
,
	gLOGIN_PWD
};

21 
BYTE
 
	gSysP¨amO±i⁄
;

22 
BYTE
 
	gIs_Re‰esh_SysP¨amTime
;

23 
QRe˘
 
	gSysP¨amPageRe˘
[19];

24 
QSåög
 
	gSysP¨amPageRe˘Text
[19];

26 
	g¥iv©e
:

29 
QLöeEdô
 * 
KeyLöeEdô
;

31 
BOOL
 
DøwSysP¨amPage
–
QPaöãr
 * 
pPaöãr
 );

32 
BOOL
 
DøwSysP¨amO±i⁄
–
QPaöãr
 * 
pPaöãr
 );

33 
BOOL
 
DøwNëP¨am
–
QPaöãr
 * 
pPaöãr
 );

34 
BOOL
 
DøwSysTime
–
QPaöãr
 * 
pPaöãr
 );

35 
BOOL
 
DøwLogöPwd
–
QPaöãr
 * 
pPaöãr
 );

37 
BOOL
 
Mou£PªssChoi˚Page
–
QMou£Evít
 *
pEvít
 );

38 
BOOL
 
Mou£PªssNëP¨am
–
QMou£Evít
 *
pEvít
 );

39 
BOOL
 
Mou£PªssSysTime
–
QMou£Evít
 *
pEvít
 );

40 
BOOL
 
Mou£PªssLogöPwd
–
QMou£Evít
 *
pEvít
 );

42 
BOOL
 
is_vÆid_ù
(c⁄° *
ù
);

43 
BOOL
 
√tIpIsVÆid
(
DWORD
 
IP
);

44 
BOOL
 
√tMaskIsVÆid
(
DWORD
 
mask
);

45 
BOOL
 
√tMaskAndIpIsVÆid
(
DWORD
 
IP
, DWORD 
mask
);

46 
BOOL
 
Is_vÆid_NëP¨am
(
QSåög
 
ù
, QSåög 
subIP
, QSåög 
mask
 , QSåög 
dns
);

47 
BOOL
 
Is_vÆid_SysTime
(
QSåög
 
Yór
, QSåög 
M⁄th
, QSåög 
Day
 ,

48 
QSåög
 
Hour
, QSåög 
Möuã
, QSåög 
Sec⁄d
);

49 
BOOL
 
Is_vÆid_LogöPwd
(
QSåög
 
OldPwd
, QSåög 
NewPwd
, QSåög 
C⁄fúmPwd
);

51 
	gNumBﬂrdFocusRe˘
;

52 
	gLa°NumBﬂrdFocusRe˘
;

54 
QSåög
 
	gSysP¨amPageRe˘PªviousText
[19];

55 
	gNëP¨amRñó£P©h
[64];

56 
	gNëP¨amPªssP©h
[64];

57 
	gSysTimeRñó£P©h
[64];

58 
	gSysTimePªssP©h
[64];

59 
	gLogöPwdRñó£P©h
[64];

60 
	gLogöPwdPªssP©h
[64];

62 
BYTE
 
	gLogöSèã_SysP¨am
;

63 
public
 
	g¶Ÿs
:

64 
TextCh™geFocusRe˘
–
QSåög
 
ãxt
 );

65 
LogöSèãCh™ge_SysP¨am
–
BYTE
 
bySèã
 );

66 
NumBﬂrdHide
();

67 
NumBﬂrdShow
();

	@Pages/cpage_syspic.cpp

1 
	~"˝age_sy•ic.h
"

2 
	~"°ru˘uª.h
"

3 
	~"../EÀmít/˚ñmít.h
"

5 c⁄° 
QSåög
 
	gP©h
="/usr/share/ePut800/Pics/";

7 
	gCPage_SysPic
::
	$CPage_SysPic
–
BYTE
 
byTy≥
 ):
	`CPage
–byTy≥ ),
	$m_MAX_PAGE
( 20 )

9 
m_°rPic
 += "ePut800-SysPic.jpg";

10 
m_TŸÆPage
 = 0 ;

11 
m_CurPage
 = 0 ;

16 
byPªPage
 = 
	`GëCurPage
();

17 
bg_Êag
 = 0;

19 
m_°rBackground∑°e
 = 
m_°rBackground
;

20 
i
 = 0; i < 10; i++){

21 
m_°rBackground∑°e
 += "time"

22 
QPIXMAP_MAP
[
i
].
	`lﬂd
()

26 
	}
}

28 
	gCPage_SysPic
::~
	$CPage_SysPic
()

30 
pixm≠
.
	`dëach
();

31 
	}
}

33 
BOOL
 
	gCPage_SysPic
::
	$AddD©a
–
LPVOID
 
pVoid
 )

40 if–!
pVoid
 )

42 
	`Q_ASSERT
–
FALSE
 );

43  
FALSE
 ;

46 
QPAGE_FILEST_ARRAY
 * 
pPageEÀAºay
 = 
NULL
 ;

47 
pPageEÀAºay
 = ( 
QPAGE_FILEST_ARRAY
 * )
pVoid
 ;

48 
	`AddTe°D©a
–
pPageEÀAºay
 );

49 
	`AddTe°D©aAâribuã
();

50 
	`SëCurPage
( 0 ) ;

51  
FALSE
 ;

52 
	}
}

54 
	gCPage_SysPic
::
	$AddTe°D©aAâribuã
()

56 
Widgë
 * 
tmpWidgë
 = 
	`AfxGëWidgë
();

57 
AŒEÀmítSize
 = 
tmpWidgë
->
m_objAŒEÀmít
.
	`size
();

58 if–!
AŒEÀmítSize
 )

64 
QELEMENT_PICOBJ_MAP
::
ôî©‹
 
Begö_ô‹
 = 
tmpWidgë
->
m_objAŒEÀmít
.
	`begö
() ;

65 
QELEMENT_PICOBJ_MAP
::
ôî©‹
 
End_ô‹
 = 
tmpWidgë
->
m_objAŒEÀmít
.
	`íd
() ;

67  ;
Begö_ô‹
 !
End_ô‹
 ; Begin_itor++ )

69 
CEÀmít
 * 
tmpEÀmít
 = 
Begö_ô‹
.
	`vÆue
() ;

70 if–!
tmpEÀmít
 ||ÅmpEÀmít->
m_wObje˘ID
 !
Begö_ô‹
.
	`key
( ) )

73 if–
tmpEÀmít
->
m_wLökObje˘Id
 == 0 )

75 
tmpEÀmít
->
	`InôD©a
();

78 
PST_SYSPAGE
 
tmpSysPage
 = 
	`GëSysPage_Såcut
(
tmpEÀmít
->
m_wPageNo
);

79  
tmpEÀmít
->
	`GëObje˘Ty≥
() )

81 
CEÀmít
::
LINKER
:

82 
CEÀmít
::
TRANSFORMER
 :

83 
CEÀmít
::
CT_SIGN
 :

84 
CEÀmít
::
PT_SIGN
 :

85 
CEÀmít
::
LIGHTNING_PROTECTOR
 :

92 if–
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`föd
(
tmpEÀmít
->
m_wLökObje˘Id
)

93 =
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`íd
() )

95 
PPICNODE
 
tmpNewPicNode
 = 
√w
 
PICNODE
;

96 
tmpNewPicNode
->
PicNode
 = 
tmpEÀmít
->
m_wLökObje˘Id
;

97 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpEÀmít
->
m_wLökObje˘Id
]=
tmpNewPicNode
;

99 
PPICNODE
 
tmpPicNode
 = 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpEÀmít
->
m_wLökObje˘Id
];

100 
tmpPicNode
->
	`AddTheNodePicId
(
tmpEÀmít
->
m_wObje˘ID
);

101 
tmpEÀmít
->
m_wObje˘NodeL
 =ÅmpEÀmít->
m_wLökObje˘Id
;

102 
tmpEÀmít
->
	`InôD©a
();

109 
PPIC_ATTRIBUT_FST
 
tmpAâributF°
 = 
tmpWidgë
->
m_objAŒEÀmítAâribuã_M≠
[
tmpEÀmít
->
m_wLökObje˘Id
];

110 if–
tmpAâributF°
 =
NULL
 )

112 
	`¥ötf
("ÂõæÂÖÉId=%d,Êâæ‰∏çÂà∞ÂÖ∂ÂÖ≥ËÅîÂØπË±°Id=%d\n",
tmpEÀmít
->
m_wObje˘ID
,tmpEÀmít->
m_wLökObje˘Id
);

113 
tmpEÀmít
->
	`InôD©a
();

116  
tmpEÀmít
->
	`GëObje˘Ty≥
() )

118 
CEÀmít
::
GENERATRIX
 :

119 
CEÀmít
::
POWER
 :

121 if–
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`föd
(
tmpAâributF°
->
wObje˘NodeL
)

122 =
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`íd
() )

124 
PPICNODE
 
tmpNewPicNode
 = 
√w
 
PICNODE
;

125 
tmpNewPicNode
->
PicNode
 = 
tmpAâributF°
->
wObje˘NodeL
;

126 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpAâributF°
->
wObje˘NodeL
]=
tmpNewPicNode
;

128 
PPICNODE
 
tmpPicNode
 = 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpAâributF°
->
wObje˘NodeL
];

129 
tmpPicNode
->
	`AddTheNodePicId
(
tmpEÀmít
->
m_wObje˘ID
);

130 
tmpEÀmít
->
m_wObje˘NodeL
 = 
tmpAâributF°
->
wObje˘NodeL
;

131 if–
CEÀmít
::
POWER
 =
tmpEÀmít
->
	`GëObje˘Ty≥
() )

132 
tmpSysPage
->
m_PowîEÀmítNodeToPicId_Aºay
.
	`push_back
(
tmpPicNode
);

135 
CEÀmít
::
BREAKER
:

136 
CEÀmít
::
CONTACTOR
:

137 
CEÀmít
::
LOAD_BREAKER_2POS
:

138 
CEÀmít
::
LOAD_BREAKER_3POS
:

139 
CEÀmít
::
SWITCH_2POS
:

140 
CEÀmít
::
SWITCH_3POS
:

141 
CEÀmít
::
SWITCH_CONNECT_EARTH
:

143 if–
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`föd
(
tmpAâributF°
->
wObje˘NodeL
)

144 =
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`íd
() )

146 
PPICNODE
 
tmpNewPicNodeL
 = 
√w
 
PICNODE
;

147 
tmpNewPicNodeL
->
PicNode
 = 
tmpAâributF°
->
wObje˘NodeL
;

148 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpAâributF°
->
wObje˘NodeL
]=
tmpNewPicNodeL
;

150 
PPICNODE
 
tmpPicNodeL
 = 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpAâributF°
->
wObje˘NodeL
];

151 
tmpPicNodeL
->
	`AddTheNodePicId
(
tmpEÀmít
->
m_wObje˘ID
);

152 
tmpEÀmít
->
m_wObje˘NodeL
 = 
tmpAâributF°
->
wObje˘NodeL
;

154 if–
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`föd
(
tmpAâributF°
->
wObje˘NodeR
)

155 =
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
.
	`íd
() )

157 
PPICNODE
 
tmpNewPicNodeR
 = 
√w
 
PICNODE
;

158 
tmpNewPicNodeR
->
PicNode
 = 
tmpAâributF°
->
wObje˘NodeR
;

159 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpAâributF°
->
wObje˘NodeR
]=
tmpNewPicNodeR
;

161 
PPICNODE
 
tmpPicNodeR
 = 
tmpSysPage
->
m_AŒEÀmítNodeToPicId_M≠
[
tmpAâributF°
->
wObje˘NodeR
];

162 
tmpPicNodeR
->
	`AddTheNodePicId
(
tmpEÀmít
->
m_wObje˘ID
);

163 
tmpEÀmít
->
m_wObje˘NodeR
 = 
tmpAâributF°
->
wObje˘NodeR
;

170 
AâribuãSize
 = 
tmpAâributF°
->
D©aAºay
.
	`size
();

171 
	`¥ötf
("%†%d AâribuãSizê%d\n", 
__func__
, 
__LINE__
, 
AâribuãSize
);

172 
AâribuãNo
=0;

175 
AâribuãNo
 = 0; AâribuãNÿ< 
AâribuãSize
; AttributeNo++)

177 
PPIC_ATTRIBUTE_DATA_FST
 
tmpAâribuãF°
 = 
tmpAâributF°
->
D©aAºay
.
	`©
(
AâribuãNo
);

178 if–
tmpEÀmít
->
	`GëObje˘Ty≥
()==
CEÀmít
::
ANALOG_DATA_SIGN
 ||

179 
tmpEÀmít
->
	`GëObje˘Ty≥
()==
CEÀmít
::
RECT_INDICATOR_SIGN
 ||

180 
tmpEÀmít
->
	`GëObje˘Ty≥
()==
CEÀmít
::
CIRCLE_INDICATOR_SIGN
)

184 if–
tmpEÀmít
->
m_wDúe˘
 !
tmpAâribuãF°
->
byAâribuãD©aByã
 )

187 
PPIC_ATTRIBUTE_DATA_ELEMENT
 
tmpEÀmítAâribuã
 = 
√w
 
PIC_ATTRIBUTE_DATA_ELEMENT
;

188 
tmpEÀmítAâribuã
->
wBusNo
 = 
tmpAâribuãF°
->wBusNo;

189 
tmpEÀmítAâribuã
->
wAddr
 = 
tmpAâribuãF°
->wAddr;

190 
tmpEÀmítAâribuã
->
wP¡No
 = 
tmpAâribuãF°
->wPntNo;

191 
tmpEÀmítAâribuã
->
byAâribuãD©aByã
 = 
tmpAâribuãF°
->byAttributeDataByte;

192 
tmpEÀmítAâribuã
->
byD©aTy≥
 = 
tmpAâribuãF°
->byDataType;

193 
i
 = 0;

195 if(
tmpEÀmít
->
	`GëObje˘Ty≥
(Ë=
CEÀmít
::
IMAGE_FOR_AI
){

196 
ªœnum
 = 
tmpEÀmít
->relanum - 1;

197 
WORD
 
∑gío
 = 
tmpEÀmít
->
m_wPageNo
;

198 
QM≠
<
BYTE
, 
QVe˘‹
<
Aœrm
> > 
Æ¨mobj
 = 
tmpWidgë
->alarmobj;

200 if(
Æ¨mobj
[
∑gío
].
	`size
() > 0){

202 
tmpEÀmítAâribuã
->
RñaYk
.
id
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).id;

203 
tmpEÀmítAâribuã
->
RñaYk
.
t›pﬁe
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).toppole;

204 
tmpEÀmítAâribuã
->
RñaYk
.
t›
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).top;

205 
tmpEÀmítAâribuã
->
RñaYk
.
vÆuë›
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).valuetop;

206 
tmpEÀmítAâribuã
->
RñaYk
.
vÆuebŸtom
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).valuebottom;

207 
tmpEÀmítAâribuã
->
RñaYk
.
bŸtom
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).bottom;

208 
tmpEÀmítAâribuã
->
RñaYk
.
bŸtompﬁe
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).bottompole;

209 
tmpEÀmítAâribuã
->
RñaYk
.
bu¢o
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).busno;

210 
tmpEÀmítAâribuã
->
RñaYk
.
devaddr
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).devaddr;

211 
tmpEÀmítAâribuã
->
RñaYk
.
poöt
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).point;

212 
tmpEÀmítAâribuã
->
RñaYk
.
ª£rv©i⁄
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).reservation;

213 
	`¥ötf
("%†%dÑe£rv©i⁄ = %d id = %d\n", 
__func__
, 
__LINE__
, 
tmpEÀmítAâribuã
->
RñaYk
.
ª£rv©i⁄
,ÅmpEÀmítAâribuã->RñaYk.
id
);

216 if(
tmpEÀmítAâribuã
->
RñaYk
.
ª£rv©i⁄
 == 2){

217 
	`¥ötf
("%†%d ########\n", 
__func__
, 
__LINE__
);

218 
tmpEÀmítAâribuã
->
RñaYk1
.
id
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).id;

219 
tmpEÀmítAâribuã
->
RñaYk1
.
t›pﬁe
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).toppole;

220 
tmpEÀmítAâribuã
->
RñaYk1
.
t›
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).top;

221 
tmpEÀmítAâribuã
->
RñaYk1
.
vÆuë›
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).valuetop;

222 
tmpEÀmítAâribuã
->
RñaYk1
.
vÆuebŸtom
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).valuebottom;

223 
tmpEÀmítAâribuã
->
RñaYk1
.
bŸtom
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).bottom;

224 
tmpEÀmítAâribuã
->
RñaYk1
.
bŸtompﬁe
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).bottompole;

225 
tmpEÀmítAâribuã
->
RñaYk1
.
bu¢o
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).busno;

226 
tmpEÀmítAâribuã
->
RñaYk1
.
devaddr
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).devaddr;

227 
tmpEÀmítAâribuã
->
RñaYk1
.
poöt
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).point;

228 
tmpEÀmítAâribuã
->
RñaYk1
.
ª£rv©i⁄
 = 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
 + 1).reservation;

234 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
id
);

235 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
t›pﬁe
);

236 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
t›
);

237 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
vÆuë›
);

238 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
vÆuebŸtom
);

239 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
bŸtom
);

240 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
bŸtompﬁe
);

241 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
bu¢o
);

242 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
devaddr
);

243 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
poöt
);

244 
	`¥ötf
("**** %d ****\n", 
Æ¨mobj
[
∑gío
].
	`©
(
ªœnum
).
ª£rv©i⁄
);

250 
tmpEÀmítAâribuã
->
RñaYk
.
id
 = 0;

251 
tmpEÀmítAâribuã
->
RñaYk
.
t›pﬁe
 = (
WORD
)-1;

252 
tmpEÀmítAâribuã
->
RñaYk
.
t›
 = ((
WORD
)-1) * 5 / 4;

253 
tmpEÀmítAâribuã
->
RñaYk
.
vÆuë›
 = ((
WORD
)-1) / 2;

254 
tmpEÀmítAâribuã
->
RñaYk
.
vÆuebŸtom
 = -((
WORD
)-1) / 2;

255 
tmpEÀmítAâribuã
->
RñaYk
.
bŸtom
 = -((
WORD
)-1) * 5 / 4;

256 
tmpEÀmítAâribuã
->
RñaYk
.
bŸtompﬁe
 = -65536;

257 
tmpEÀmítAâribuã
->
RñaYk
.
bu¢o
 = 254;

258 
tmpEÀmítAâribuã
->
RñaYk
.
devaddr
 = 254;

259 
tmpEÀmítAâribuã
->
RñaYk
.
poöt
 = 254;

260 
tmpEÀmítAâribuã
->
RñaYk
.
ª£rv©i⁄
 = 0;

264 
PD©aTy≥
 
tmpD©a
 = 
	`AfxGëD©a
–
tmpEÀmítAâribuã
->
byD©aTy≥
 ,ÅmpEÀmítAâribuã->
wBusNo
 ,

265 
tmpEÀmítAâribuã
->
wAddr
 ,ÅmpEÀmítAâribuã->
wP¡No
 ) ;

266 if–
tmpD©a
 =
NULL
 )

268 
	`¥ötf
("Êâæ‰∏çÂà∞Á±ªÂûã=%d P%d,%d,%d(Á±ªÂûãÔºö1-Yc,2-Yx,3-Ym,4-Yk)\n",

269 
tmpEÀmítAâribuã
->
byD©aTy≥
 ,ÅmpEÀmítAâribuã->
wBusNo
 ,

270 
tmpEÀmítAâribuã
->
wAddr
 ,ÅmpEÀmítAâribuã->
wP¡No
);

274 
	`°r˝y
(
tmpAâribuãF°
->
«me
,
tmpD©a
->
chName
);

275 
	`°r˝y
(
tmpEÀmítAâribuã
->
«me
,
tmpD©a
->
chName
);

277  
tmpEÀmítAâribuã
->
byD©aTy≥
 )

279 
PIC_ATTRIBUTE_DATA_FST
::
YX_DTYPE
:

280 
tmpEÀmít
->
Yx_EÀmítAâribuãAºay
.
	`push_back
(
tmpEÀmítAâribuã
);

282 
PIC_ATTRIBUTE_DATA_FST
::
YC_DTYPE
:

287 
tmpEÀmít
->
Yc_EÀmítAâribuãAºay
.
	`push_back
(
tmpEÀmítAâribuã
);

291 
tmpEÀmít
->
Yc_EÀmítAâribuãAºay
.
	`push_back
(
tmpEÀmítAâribuã
);

295 
PIC_ATTRIBUTE_DATA_FST
::
YM_DTYPE
:

296 
tmpEÀmít
->
Ym_EÀmítAâribuãAºay
.
	`push_back
(
tmpEÀmítAâribuã
);

298 
PIC_ATTRIBUTE_DATA_FST
::
YK_DTYPE
:

299 
tmpEÀmít
->
Yk_EÀmítAâribuãAºay
.
	`push_back
(
tmpEÀmítAâribuã
);

305 
tmpEÀmít
->
	`InôD©a
();

307 
	}
}

309 
	gCPage_SysPic
::
	$AddTe°D©a
–
QPAGE_FILEST_ARRAY
 * 
pAºay
 )

311 if–!
pAºay
 )

313 
	`Q_ASSERT
–
FALSE
 );

317 
size
 = 
pAºay
->
	`size
() ;

318 
WORD
 
wCurPage
 = (WORD)-1 ;

319  
BYTE
 
i
 = 0 ; i < 
size
 ; i++ )

321 
PPAGE_FST
 
pPageF°
 = (*
pAºay
)[ 
i
 ] ;

322 if–!
pPageF°
 )

324 
	`Q_ASSERT
–
FALSE
 ) ;

328 
WORD
 
wPageNo
 = 
pPageF°
->wPageNo ;

329 
WORD
 
wEÀNum
 = 
pPageF°
->
wEÀNumbî
 ;

330 
WORD
 
wSizeEÀ
 = 
pPageF°
->
EÀmítAºay
.
	`size
( ) ;

331 if–
wCurPage
 =–
WORD
 )-1 )

332 
wCurPage
 = 
wPageNo
 ;

334 if–
wSizeEÀ
 == 0 )

337 if–
wSizeEÀ
 !
wEÀNum
 )

340 
ST_SYSPAGE
 * 
pSysPage
 = 
√w
 ST_SYSPAGE ;

341 
pSysPage
->
byPageNo
 = 
wPageNo
 ;

342 
°rLí
 = 
	`°æí
–
pPageF°
->
pPageTôÀ
 ) ;

343 
	`mem˝y
–
pSysPage
->
°rPicTôÀ
 , 
pPageF°
->
pPageTôÀ
 ,
°rLí
 ) ;

345 
°rLí
 = 
	`°æí
(
pPageF°
->
pWÆlName
);

346 
	`mem˝y
(
pSysPage
->
pWÆl_SysPage
, 
pPageF°
->
pWÆlName
, 
°rLí
);

349 
pSysPage
->
pW¨eHome
 = 
pPageF°
->pWareHome;

352  
BYTE
 
m
 = 0 ; m < 
wEÀNum
 ; m++ )

354 
PELE_FST
 
pEÀ_f°
 = 
pPageF°
->
EÀmítAºay
[ 
m
 ] ;

355 if–!
pEÀ_f°
 )

357 
	`Q_ASSERT
–
FALSE
 );

360 
CEÀmít
 *
pEÀmít
 = 
NULL
 ;

362 
pEÀmít
 = 
CEÀmít
::
	`Cª©eEÀmít
–
pEÀ_f°
) ;

363 if–!
pEÀmít
 )

366 if(
pEÀ_f°
->
wEÀmítTy≥
 == 4114)

367 
	`AfxGëWidgë
()->
yc_ykvec
.
	`push_back
(
pEÀmít
);

368 if(
pEÀ_f°
->
wEÀmítTy≥
 == 4115)

369 
	`AfxGëWidgë
()->
yx_ykvec
.
	`push_back
(
pEÀmít
);

372 
width
 = 
pEÀ_f°
->
wRight
 -ÖEÀ_f°->
wLe·
 ;

373 
height
 = 
pEÀ_f°
->
wBŸtom
 -ÖEÀ_f°->
wT›
 ;

374 
QRe˘
 
	`rc
–
pEÀ_f°
->
wLe·
 ,ÖEÀ_f°->
wT›
 , 
width
 , 
height
 ) ;

375 
pEÀmít
->
	`Cª©e
–
rc
 ) ;

376 
pEÀmít
->
m_wObje˘ID
 = 
pEÀ_f°
->
wObje˘ID
 ;

377 
pEÀmít
->
m_wLökObje˘Id
 = 
pEÀ_f°
->
wLökObje˘Id
 ;

378 
pEÀmít
->
m_wPageNo
 = 
pEÀ_f°
->
wPageNo
 ;

379 
pEÀmít
->
m_wDúe˘
 = 
pEÀ_f°
->
wDúe˘
 ;

380 
pEÀmít
->
w_t›
 = 
pEÀ_f°
->
wT›
;

381 
pEÀmít
->
w_bŸtom
 = 
pEÀ_f°
->
wBŸtom
;

382 
pEÀmít
->
w_À·
 = 
pEÀ_f°
->
wLe·
;

383 
pEÀmít
->
w_right
 = 
pEÀ_f°
->
wRight
;

384 
	`°r˝y
(
pEÀmít
->
m_ãxt
, 
pEÀ_f°
->
ãxt
);

385 
	`°r˝y
(
pEÀmít
->
m_pi˙ame
, 
pEÀ_f°
->
pi˙ame
);

386 
	`°r˝y
(
pEÀmít
->
m_picöåodu˚
, 
pEÀ_f°
->
picöåodu˚
);

387 
pEÀmít
->
	`SëObje˘Ty≥
–
pEÀ_f°
->
wEÀmítTy≥
 );

389 
pEÀmít
->
ªœnum
 = 
pEÀ_f°
->relanum;

391 
pSysPage
->
m_EÀAºay
.
	`push_back
–
pEÀmít
 );

392 
	`AfxGëWidgë
()->
m_objAŒEÀmít
[ 
pEÀmít
->
m_wObje˘ID
 ] =ÖElement;

396 
m_sysPageAºay
[ 
pSysPage
->
byPageNo
 ] =ÖSysPage ;

398 if–
m_TŸÆPage
 <
m_MAX_PAGE
 )

399 
m_TŸÆPage
++ ;

401 
	}
}

403 
BYTE
 
	gCPage_SysPic
::
	$GëTŸÆPageNum
( )

405 if–
m_TŸÆPage
 == 0 )

406 
m_TŸÆPage
 = 1;

407  
m_TŸÆPage
 ;

408 
	}
}

410 
	gCPage_SysPic
::
	$AddTe°D©a
( )

413 
ST_SYSPAGE
 * 
pSysPage
 = 
√w
 ST_SYSPAGE ;

414 
pSysPage
->
byPageNo
 = 1 ;

416  
BYTE
 
i
 = 0 ; i < 11 + 7 ; i++ )

418 
CEÀmít
 * 
pEÀ
 = 
NULL
 ;

420 if–0 =
i
 )

421 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
GENERATRIX
 );

422 if–1 =
i
 )

423 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
LINKER
 ) ;

424 if–2 =
i
 )

425 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
POWER
 );

426 if–3 =
i
 )

427 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
TRANSFORMER
 );

428 if–4 =
i
 )

429 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
CT_SIGN
 );

430 if–5 =
i
 )

431 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
PT_SIGN
 ) ;

432 if–6 =
i
 )

433 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
ANALOG_DATA_SIGN
 );

434 if–7 =
i
 )

435 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
TEXT_SIGN
 );

436 if–8 =
i
 )

437 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
CIRCLE_INDICATOR_SIGN
 );

438 if–9 =
i
 )

439 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
RECT_INDICATOR_SIGN
 );

440 if–10 =
i
 )

441 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
LIGHTNING_PROTECTOR
 );

442 if–11 =
i
 )

443 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
BREAKER
 ) ;

444 if–12 =
i
 )

445 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
CONTACTOR
 );

446 i‡–13 =
i
 )

447 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
LOAD_BREAKER_2POS
 );

448 i‡–14 =
i
 )

449 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
LOAD_BREAKER_3POS
 );

450 i‡–15 =
i
 )

451 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
SWITCH_2POS
 );

452 i‡–16 =
i
 )

453 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
SWITCH_3POS
 ) ;

454 i‡–17 =
i
 )

455 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
–CEÀmít::
SWITCH_CONNECT_EARTH
 );

458 if(
i
 == 18)

459 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
(CEÀmít::
IMAGE_FOR_AI
);

460 if(
i
 == 19)

461 
pEÀ
 = 
CEÀmít
::
	`Cª©eEÀmít
(CEÀmít::
ALARM_FOR_AI
);

464 
	`Q_ASSERT
–
FALSE
 ) ;

466 if–
pEÀ
 )

468 
WORD
 
wHigh
 = 
i
 / 5 ;

469 
WORD
 
wWidh
 = 
i
 % 5 ;

470 
WORD
 
wWidth
 = 100 ;

471 
WORD
 
wHeight
 = 120 ;

473 
pEÀ
->
	`Cª©e
–
	`QRe˘
–10 + 
wWidth
 * 
wWidh
,79 + 
wHigh
 * 
wHeight
 , wWidth ,wHeight ) ) ;

474 
pSysPage
->
m_EÀAºay
.
	`push_back
–
pEÀ
 );

478 
m_sysPageAºay
[ 
pSysPage
->
byPageNo
 ] =ÖSysPage ;

479 
	`SëCurPage
–
pSysPage
->
byPageNo
 ) ;

485 
	}
}

487 
BOOL
 
	gCPage_SysPic
::
	$DøwPage
–
QPaöãr
 * 
pPaöãr
 )

489 
CPage
::
	`DøwPage
–
pPaöãr
 ) ;

490 
	`DøwCurPageNumbî
–
pPaöãr
 ) ;

491 
	`DøwPageTôÀ
–
pPaöãr
 ) ;

493 
BYTE
 
byCurPage
 = 
	`GëCurPage
() ;

494 
PST_SYSPAGE
 
pSysPage
 = 
	`GëSysPage_Såcut
–
byCurPage
 ) ;

496 if–!
pSysPage
 )

500  
FALSE
 ;

503 if–
pSysPage
->
byPageNo
 !
byCurPage
 )

506 
	`Q_ASSERT
–
FALSE
 );

507  
FALSE
 ;

513 
QSåög
 
backGroundPage
 = 
P©h
 + (QSåög)(
pSysPage
->
pWÆl_SysPage
);

516 if(
byPªPage
 !
pSysPage
->
byPageNo
){

517 
byPªPage
 = 
pSysPage
->
byPageNo
;

518 
bg_Êag
 = 0;

520 if(
bg_Êag
 == 0){

522 
pSysPage
->
byPageNo
){

524 
pixm≠
.
	`lﬂd
(
backGroundPage
);

527 
pixm≠
.
	`lﬂd
(
backGroundPage
);

530 
pixm≠
.
	`lﬂd
(
backGroundPage
);

533 
pixm≠
.
	`lﬂd
(
backGroundPage
);

536 
pixm≠
.
	`lﬂd
(
backGroundPage
);

539 
pixm≠
.
	`lﬂd
(
backGroundPage
);

542 
pixm≠
.
	`lﬂd
(
backGroundPage
);

545 
pixm≠
.
	`lﬂd
(
backGroundPage
);

548 
pixm≠
.
	`lﬂd
(
backGroundPage
);

551 
pixm≠
.
	`lﬂd
(
backGroundPage
);

554 
pixm≠
.
	`lﬂd
("/usr/share/ePut800/Pics/timg0.jpg");

557 
bg_Êag
 = 1;

562 
pPaöãr
->
	`døwPixm≠
(0, 72, 800, 527, 
pixm≠
);

563 if(
pSysPage
->
pW¨eHome
 == 2){

564 
	`¥ötf
("!!!!!!!!!!!!!!!!!!!\n");

565 
pPaöãr
->
	`£tPí
(
	`QPí
(
Qt
::
gøy
, 5, Qt::
SﬁidLöe
));

566 
pPaöãr
->
	`døwLöe
(0, 333, 800, 338);

568 if(
pSysPage
->
pW¨eHome
 == 3){

569 
	`¥ötf
("###################\n");

570 
pPaöãr
->
	`£tPí
(
	`QPí
(
Qt
::
gøy
, 5, Qt::
SﬁidLöe
));

571 
pPaöãr
->
	`døwLöe
(0, 240, 800, 245);

572 
pPaöãr
->
	`døwLöe
(0, 416, 800, 421);

575 
	`¥ötf
("$$$$$$$$$$$$$$$$$$$\n");

581 
pPaöãr
->
	`døwPixm≠
(0, 67, 800, 490, 
pixm≠
);

584 
size
 = 
pSysPage
->
m_EÀAºay
.
	`size
() ;

585  
i
 = 0 ; i < 
size
 ; i++ )

587 
CEÀmít
 * 
pEÀ
 = 
pSysPage
->
m_EÀAºay
[ 
i
 ] ;

588 if–!
pEÀ
 )

590 
	`Q_ASSERT
–
FALSE
 ) ;

594 
pEÀ
->
	`DøwEÀm¡
–
pPaöãr
 ) ;

596 
QF⁄t
 
f⁄t
;

597 
f⁄t
.
	`£tPixñSize
(10);

598 
pPaöãr
->
	`£tF⁄t
(
f⁄t
);

599 
pPaöãr
->
	`£tPí
(
Qt
::
bœck
);

600 
pPaöãr
->
	`døwText
(
	`QRe˘
(
	`QPoöt
(
pEÀ
->
w_À·
 - 10,ÖEÀ->
w_t›
 + (pEÀ->
w_bŸtom
 -ÖEÀ->w_t›Ë+ 5), QPoöt’EÀ->
w_right
 + 10,ÖEÀ->w_bŸtom + 5 + 15)), 
Qt
::
AlignCíãr
,ÖEÀ->
m_picöåodu˚
);

604  
TRUE
 ;

605 
	}
}

607 
	gCPage_SysPic
::
	$DøwPageTôÀ
–
QPaöãr
 *
pPaöãr
 )

609 if–!
pPaöãr
 )

611 
	`Q_ASSERT
–
FALSE
 );

615 
BYTE
 
byCurPage
 = 
	`GëCurPage
() ;

616 
PST_SYSPAGE
 
pPage
 = 
	`GëSysPage_Såcut
–
byCurPage
 ) ;

617 if–!
pPage
 )

619 
	`Q_ASSERT
–
FALSE
 );

623 
pPaöãr
->
	`ßve
();

625 
QPí
 
≥n
 ;

626 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

627 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 255 , 255 , 255 ));

628 
pPaöãr
->
	`£tPí
–
≥n
 );

630 
QF⁄t
 
f⁄t
 ;

631 
f⁄t
.
	`£tPixñSize
( 30 );

632 
f⁄t
.
	`£tBﬁd
–
TRUE
 );

633 
pPaöãr
->
	`£tF⁄t
–
f⁄t
 );

635 
QRe˘
 
	`rc
–
	`QPoöt
( 124 , 18 ) , QPoint( 419 , 65 )) ;

636 
pPaöãr
->
	`døwText
–
rc
 , 
Qt
::
AlignCíãr
 , 
pPage
->
°rPicTôÀ
 );

638 
pPaöãr
->
	`ª°‹e
();

639 
	}
}

641 
	gCPage_SysPic
::
	$DøwCurPageNumbî
–
QPaöãr
 * 
pPaöãr
 )

643 if–!
pPaöãr
 )

645 
	`Q_ASSERT
–
FALSE
 ) ;

649 
buf
[ 100 ] ;

650 
	`mem£t
–
buf
 , 0 , ( buf ) ) ;

651 
	`•rötf
–
buf
 , "%02d/%02d" , 
	`GëCurPage
(Ë+ 1, 
	`GëTŸÆPageNum
() ) ;

653 
QSåög
 
°rText
 ;

654 
°rText
 = 
buf
 ;

655 
QRe˘
 
	`rc
–
	`QPoöt
( 435 - 10 , 27) ,QPoint( 527 -10 , 62 )) ;

657 
pPaöãr
->
	`ßve
();

659 
QPí
 
≥n
 ;

660 
≥n
.
	`£tStyÀ
–
Qt
::
SﬁidLöe
 );

661 
≥n
.
	`£tCﬁ‹
–
	`QCﬁ‹
( 255 , 0 , 0 , 255 ));

662 
pPaöãr
->
	`£tPí
–
≥n
 );

664 
QF⁄t
 
f⁄t
 ;

665 
f⁄t
.
	`£tPixñSize
( 30 );

666 
f⁄t
.
	`£tBﬁd
–
TRUE
 );

667 
pPaöãr
->
	`£tF⁄t
–
f⁄t
 );

669 
pPaöãr
->
	`døwText
–
rc
 , 
°rText
 );

671 
pPaöãr
->
	`ª°‹e
();

672 
	}
}

674 
PST_SYSPAGE
 
	gCPage_SysPic
::
	$GëSysPage_Såcut
–
BYTE
 
byPageIndex
 )

676 if–
byPageIndex
 > 
m_MAX_PAGE
 ){

678  
NULL
 ;

681 
size
 = 
m_sysPageAºay
.
	`size
() ;

682 if–!
size
 ){

684  
NULL
 ;

687 
PST_SYSPAGE
 
pSt
 = 
m_sysPageAºay
[ 
byPageIndex
 ];

688 if–!
pSt
 )

691 
	`Q_ASSERT
–
FALSE
 ) ;

692  
NULL
 ;

695  
pSt
 ;

696 
	}
}

698 
BOOL
 
	gCPage_SysPic
::
	$SëCurPage
–
BYTE
 
byPageID
 )

700 if–
byPageID
 > 
m_MAX_PAGE
 )

701  
FALSE
 ;

703 
m_CurPage
 = 
byPageID
 ;

705 
PST_SYSPAGE
 
PCurPage
 = 
	`GëSysPage_Såcut
(
m_CurPage
);

706 if–
PCurPage
 =
NULL
 )

707  
FALSE
 ;

708 
PowîNodeNum
 = 
PCurPage
->
m_PowîEÀmítNodeToPicId_Aºay
.
	`size
();

709 
CEÀmít
 * 
tmpEÀmít
 = 
NULL
;

710 
i
=0;i<
PowîNodeNum
;i++)

712 
ThisNodePowîNum
 = 
PCurPage
->
m_PowîEÀmítNodeToPicId_Aºay
.
	`©
(
i
)->
PicId_Aºay
.
	`size
();

713  
j
=0;j<
ThisNodePowîNum
;j++ )

715 
tmpEÀmít
 = 
	`AfxGëWidgë
()->
m_objAŒEÀmít
[
PCurPage
->
m_PowîEÀmítNodeToPicId_Aºay
.
	`©
(
i
)->
PicId_Aºay
.©(
j
)];

716 if–
tmpEÀmít
->
	`GëObje˘Ty≥
(Ë=
CEÀmít
::
POWER
 )

717 
	`AfxRe‰eshPicCﬁ‹
(
PCurPage
,
tmpEÀmít
);

720  
TRUE
 ;

721 
	}
}

723 
BYTE
 
	gCPage
::
	$GëCurPage
( )

725  
m_CurPage
 ;

726 
	}
}

728 
BOOL
 
	gCPage_SysPic
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

730 if–
CPage
::
	`mou£PªssEvít
–
pEvít
 ) )

732 
	`AfxRe‰eshS¸ìn
();

733  
TRUE
 ;

737 
	`Pro˚ssEÀmítO±
–
pEvít
 ) ;

739 
	`AfxRe‰eshS¸ìn
();

740  
TRUE
 ;

741 
	}
}

743 
BOOL
 
	gCPage_SysPic
::
	$Pro˚ssEÀmítO±
–
QMou£Evít
 *
pEvít
 )

745 if–!
pEvít
 )

747 
	`Q_ASSERT
–
FALSE
 ) ;

748  
FALSE
 ;

751 
BYTE
 
byPageIndex
 = 
	`GëCurPage
() ;

752 
PST_SYSPAGE
 
pPage
 = 
	`GëSysPage_Såcut
–
byPageIndex
 ) ;

753 if–!
pPage
 )

755 
	`Q_ASSERT
–
FALSE
 ) ;

756  
FALSE
 ;

759 
QPoöt
 
±
 = 
pEvít
->
	`pos
() ;

760 
size
 = 
pPage
->
m_EÀAºay
.
	`size
() ;

761  
i
 = 0 ; i < 
size
 ; i++ )

763 
CEÀmít
 * 
pEÀmít
 = 
pPage
->
m_EÀAºay
[ 
i
 ] ;

764 if–!
pEÀmít
 )

766 
	`Q_ASSERT
–
FALSE
 ) ;

767  
FALSE
 ;

770 
QRe˘
 
	`rc
–
pEÀmít
->
	`GëQRe˘
() ) ;

771 if–
rc
.
	`c⁄èös
–
±
 ) )

773 
pEÀmít
->
	`Pro˚ssMou£Down
–
pEvít
 ) ;

774  
TRUE
 ;

778  
FALSE
 ;

779 
	}
}

781 
BOOL
 
	gCPage_SysPic
::
	$Pro˚ssPageDown
( )

783 
BYTE
 
byCurPage
 = 
	`GëCurPage
() ;

784 if–
byCurPage
 < 
m_TŸÆPage
 - 1 )

785 
byCurPage
++ ;

787 
byCurPage
 = 0 ;

789 
	`SëCurPage
–
byCurPage
 ) ;

791  
TRUE
 ;

792 
	}
}

794 
BOOL
 
	gCPage_SysPic
::
	$Pro˚ssPageUp
( )

796 
BYTE
 
byCurPage
 = 
	`GëCurPage
() ;

797 if–
byCurPage
 > 0 )

798 
byCurPage
-- ;

800 
byCurPage
 = 0 ;

802 
	`SëCurPage
–
byCurPage
 ) ;

803  
TRUE
 ;

804 
	}
}

	@Pages/cpage_syspic.h

1 #i‚de‡
CPAGE_SYSPIC_H


2 
	#CPAGE_SYSPIC_H


	)

4 
	~<Pages/˝age.h
>

5 ˛as†
	cCPage_SysPic
 : 
public
 
CPage


7 
public
:

8 
CPage_SysPic
–
BYTE
 
byTy≥
 );

9 ~
CPage_SysPic
();

10 
vútuÆ
 
BOOL
 
AddD©a
–
LPVOID
 
pVoid
 ) ;

11 
vútuÆ
 
BOOL
 
DøwPage
–
QPaöãr
 * 
pPaöãr
 );

12 
vútuÆ
 
BOOL
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

13 
vútuÆ
 
BOOL
 
Pro˚ssPageDown
( );

14 
vútuÆ
 
BOOL
 
Pro˚ssPageUp
( );

17 
BYTE
 
GëCurPage
( ) ;

20 
PST_SYSPAGE
 
GëSysPage_Såcut
–
BYTE
 
byPageIndex
 );

21 
	m¥Ÿe˘ed
:

22 
QSYS_PAGE_ARRAY
 
m_sysPageAºay
 ;

23 c⁄° 
BYTE
 
	mm_MAX_PAGE
 ;

26 
BYTE
 
	mm_CurPage
 ;

28 
QPixm≠
 
	mpixm≠
;

29 
BYTE
 
	mbyPªPage
;

30 
BYTE
 
	mbg_Êag
;

32 
BYTE
 
	mm_TŸÆPage
 ;

33 
	m¥Ÿe˘ed
:

34 
AddTe°D©a
( );

35 
AddTe°D©aAâribuã
();

36 
AddTe°D©a
–
QPAGE_FILEST_ARRAY
 * 
pAºay
 );

37 
BOOL
 
SëCurPage
–
BYTE
 
byPageID
 );

38 
BYTE
 
GëTŸÆPageNum
( );

39 
DøwCurPageNumbî
–
QPaöãr
 * 
pPaöãr
 );

40 
DøwPageTôÀ
–
QPaöãr
 *
pPaöãr
 ) ;

41 
BOOL
 
Pro˚ssEÀmítO±
–
QMou£Evít
 *
pEvít
 ) ;

	@Proto/cmethod.cpp

1 
	~"cmëhod.h
"

2 
	~"cglobÆ.h
"

3 
	gCMëhod
::
	$CMëhod
()

5 
	}
}

	@Proto/cmethod.h

1 #i‚de‡
CMETHOD_H


2 
	#CMETHOD_H


	)

5 
	tBYTE
 ;

6 
	tWORD
 ;

7 
	tDWORD
 ;

8 
boﬁ
 
	tBOOL
 ;

9 
	tHANDLE
 ;

10 * 
	tLPVOID
 ;

12 
	#MAKEWORD
(
a
, 
b
Ë((
WORD
)(((
BYTE
)(((
DWORD
)◊)Ë& 0xff)Ë| ((WORD)((BYTE)(((DWORD)(b)Ë& 0xff))Ë<< 8))

	)

13 
	#MAKELONG
(
a
, 
b
Ë((
LONG
)(((
WORD
)(((
DWORD
)◊)Ë& 0xffff)Ë| ((DWORD)((WORD)(((DWORD)(b)Ë& 0xffff))Ë<< 16))

	)

14 
	#LOWORD
(
l
Ë((
WORD
)(((
DWORD
)÷)Ë& 0xffff))

	)

15 
	#HIWORD
(
l
Ë((
WORD
)((((
DWORD
)÷)Ë>> 16Ë& 0xffff))

	)

16 
	#LOBYTE
(
w
Ë((
BYTE
)(((
DWORD
)(w)Ë& 0xff))

	)

17 
	#HIBYTE
(
w
Ë((
BYTE
)((((
DWORD
)(w)Ë>> 8Ë& 0xff))

	)

18 
	#UINT8
 
BYTE


	)

19 
	#UINT16
 
WORD


	)

20 
	#FALSE
 
Ál£


	)

21 
	#TRUE
 
åue


	)

23 ˛as†
	cCMëhod


25 
	mpublic
:

26 
CMëhod
();

27 
vútuÆ
 
BOOL
 
	$SëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
fVÆ
 ){  
FALSE
 ;}

28 
vútuÆ
 
BOOL
 
	$GëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , &
fVÆ
 ){  
FALSE
 ;
	}
}

30 
vútuÆ
 
BOOL
 
	$SëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
bVÆ
 ){  
FALSE
 ;
	}
}

31 
vútuÆ
 
BOOL
 
	$GëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 &
bVÆ
 ){  
FALSE
 ;
	}
}

32 
vútuÆ
 
BOOL
 
	$SëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 
dwVÆ
 ){  
FALSE
 ;
	}
}

33 
vútuÆ
 
BOOL
 
	$GëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 &
dwVÆ
 ){  
FALSE
 ;
	}
}

35 
vútuÆ
 
BOOL
 
	$SëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
, 
BYTE
 
bySèã
 ){  
FALSE
 ;
	}
}

36 
vútuÆ
 
BOOL
 
	$GëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
,
BYTE
 &
bySèã
 ){  
FALSE
 ;
	}
}

37 
vútuÆ
 
BOOL
 
	$SígYK
–
WORD
 
wBusNoDe°
 , WORD 
wAddrDe°
 , WORD 
nP¡De°
 ,

38 
WORD
 
wBusNoSrc
 , WORD 
wAddrSrc
 , WORD 
nP¡Src
 ,

39 
BYTE
 
byA˘i⁄
 , 
WORD
 
wVÆ
 ){  
FALSE
 ;
	}
}

40 
vútuÆ
 
BOOL
 
	$SëS€
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
byVÆ
 ,* 
pRólTime
){  
FALSE
 ;
	}
}

41 
vútuÆ
 
BOOL
 
	$GëSysTime
(*
pRólTime
){  
FALSE
 ;
	}
}

	@Proto/cprotocol.cpp

1 
	~"˝rŸocﬁ.h
"

2 
	~"../Ty≥def.h
"

	@Proto/cprotocol.h

1 #i‚de‡
CPROTOCOL_H


2 
	#CPROTOCOL_H


	)

3 
	~"cmëhod.h
"

4 
	~<QVe˘‹
>

6 
˛ass
 
	gCPrŸocﬁ
 ;

7 
	gQVe˘‹
< 
	tCPrŸocﬁ
 * > 
	tQPROTO_MODULE_ARRAY
 ;

8 
	gQPROTO_MODULE_ARRAY
::
	tôî©‹
 
	tITOR_PROTO
 ;

10 
	#PROTO_NULL
 1

	)

11 
	#PROTO_MODBUS
 2

	)

12 
	#PROTO_MODBUSTCP
 3

	)

15 
	#PROTO_MODULE_MODBUSRTU
 1

	)

18 
	#PROTO_MODULE_MODBUSTCP
 1

	)

21 
	#COMM_NOMAL
 0

	)

22 
	#COMM_ABNORMAL
 1

	)

25 
	#YK_NULL
 0x00

	)

26 
	#YK_OPEN
 0x01

	)

27 
	#YK_CLOSE
 0x02

	)

28 
	#YK_PREPARE
 0x03

	)

29 
	#YK_PREPARE_RTN
 0x04

	)

30 
	#YK_EXEC
 0x05

	)

31 
	#YK_EXEC_RTN
 0x06

	)

32 
	#YK_CANCEL
 0x07

	)

33 
	#YK_CANCEL_RTN
 0x08

	)

35 
	#YK_ERROR_FUN_01
 0xFFFC

	)

36 
	#YK_ERROR_REGISTER_02
 0xFFFD

	)

37 
	#YK_ERROR_DATA_03
 0xFFFE

	)

38 
	#YK_ERROR_DEVSTATE_04
 0xFFFF

	)

40 
	#BUS_GATHER
 0x10

	)

41 
	#BUS_TRANS
 0x11

	)

42 
	#BUS_PAUSE
 0x12

	)

44 ˛as†
	cCPrŸocﬁ


46 
	mpublic
:

47 
CMëhod
 * 
m_pMëhod
 ;

48 
WORD
 
	mm_wPrŸoNo
 ;

49 
BYTE
 
	mm_byPrŸoTy≥
 ;

50 
WORD
 
	mm_cúcuœãCou¡î
 ;

51 
WORD
 
	mm_wAddr
 ;

52 
	mm_sTem∂©eP©h
[64];

53 
QPROTO_MODULE_ARRAY
 
	mm_PrŸoModuÀ
 ;

54 
	mpublic
:

55 
	$CPrŸocﬁ
–
CMëhod
 * 
pMëhod
 )

57 if(!
pMëhod
)

59 
m_pMëhod
 = 
pMëhod
 ;

60 
m_cúcuœãCou¡î
 = 0 ;

63 
vútuÆ
 ~
	$CPrŸocﬁ
(){  ;
	}
}

64 
vútuÆ
 
BOOL
 
	$GëRódBuf
–
BYTE
 *
pBuf
 , &
Àn
 , BYTE &
byTy≥
, 
LPVOID
 
pVoid
 ){  
FALSE
 ;
	}
}

65 
vútuÆ
 
BOOL
 
	$Pro˚ssBuf
–
BYTE
 *
pBuf
 , 
Àn
 , BYTE 
byTy≥
 , 
LPVOID
 
pVoid
 ){  
FALSE
 ;
	}
}

66 
vútuÆ
 
WORD
 
	$GëCRC
(
BYTE
 *
pBuf
,
WORD
 
nLí
){  
FALSE
 ;
	}
}

67 
vútuÆ
 
BOOL
 
	$Inô
–Ë{  
FALSE
 ;
	}
}

68 
vútuÆ
 
	$GëEº‹Msg
–
BYTE
 *
pBuf
 , 
Àn
 ){  0 ;
	}
}

70 
vútuÆ
 
BOOL
 
	$AddModuÀ
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wModuÀ
 , * 
°em∂©e
){  
FALSE
 ;
	}
}

71 
vútuÆ
 
BOOL
 
IsPrŸoVÆid
() = 0 ;

72 
vútuÆ
 
WORD
 
GëPrŸoNo
 () = 0 ;

73 
vútuÆ
 
BYTE
 
GëPrŸoTy≥
() = 0 ;

74 
vútuÆ
 
WORD
 
GëPrŸoAddr
( ) = 0 ;

	@Proto/publicmethod.cpp

1 
	~"publicmëhod.h
"

2 
	~"cglobÆ.h
"

3 
	gCPublicMëhod
::
	$CPublicMëhod
()

5 
	}
}

7 
BOOL
 
CPublicMëhod
::
	$SëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
fVÆ
 )

9  
	`AfxSëYc
–
wBusNo
 , 
wAddr
 , 
wP¡
 , 
fVÆ
 ) ;

10 
	}
}

12 
BOOL
 
	gCPublicMëhod
::
	$GëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , &
fVÆ
 )

14 
PYCST
 
pYc
 = 
	`AfxGëYc
–
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

15 if–!
pYc
 )

16  
FALSE
 ;

18 
fVÆ
 = 
pYc
->
fVÆ_1Time
 ;

19  
TRUE
 ;

20 
	}
}

22 
BOOL
 
	gCPublicMëhod
::
	$SëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
bVÆ
 )

24  
	`AfxSëYx
–
wBusNo
 , 
wAddr
 , 
wP¡
 , 
bVÆ
 ) ;

25 
	}
}

27 
BOOL
 
	gCPublicMëhod
::
	$GëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 &
byVÆ
 )

29 
PYXST
 
pYx
 = 
	`AfxGëYx
–
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

30 if–!
pYx
 )

31  
FALSE
 ;

33 
byVÆ
 = 
pYx
->
byVÆue
 ;

34  
TRUE
 ;

35 
	}
}

37 
BOOL
 
	gCPublicMëhod
::
	$SëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 
dwVÆ
 )

39  
	`AfxSëYm
–
wBusNo
 , 
wAddr
 , 
wP¡
 , 
dwVÆ
 ) ;

40 
	}
}

42 
BOOL
 
	gCPublicMëhod
::
	$GëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 &
dwVÆ
 )

44 
PYMST
 
pYm
 = 
	`AfxGëYm
–
wBusNo
 , 
wAddr
 , 
wP¡
 );

45 if–!
pYm
 )

46  
FALSE
 ;

48 
dwVÆ
 = 
pYm
->
dVÆ_1Time
 ;

50  
TRUE
 ;

51 
	}
}

53 
BOOL
 
	gCPublicMëhod
::
	$SëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
 ,
BYTE
 
bySèã
 )

55 if–
bySèã
 !
COMM_ABNORMAL
 && bySèã !
COMM_NOMAL
 )

57 
	`Q_ASSERT
–
FALSE
 );

58  
FALSE
 ;

61 
PDEVST
 
pDev
 = 
	`AfxGëDev
–
wBusNo
 ,
wAddr
 ) ;

62 if–!
pDev
 )

64 
	`Q_ASSERT
–
FALSE
 ) ;

65  
FALSE
 ;

68 
pDev
->
wDevSèã
 = 
bySèã
 ;

69  
TRUE
 ;

70 
	}
}

73 
BOOL
 
	gCPublicMëhod
::
	$GëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
 , 
BYTE
 &
bySèã
 )

76 
PDEVST
 
pDev
 = 
	`AfxGëDev
–
wBusNo
 ,
wAddr
 ) ;

77 if–!
pDev
 )

79 
	`Q_ASSERT
–
FALSE
 ) ;

80  
FALSE
 ;

83 
bySèã
 = 
pDev
->
wDevSèã
 ;

84  
TRUE
 ;

85 
	}
}

87 
BOOL
 
	gCPublicMëhod
::
	$SígYK
–
WORD
 
wBusNoDe°
 , WORD 
wAddrDe°
 , WORD 
nP¡De°
 ,

88 
WORD
 
wBusNoSrc
 , WORD 
wAddrSrc
 , WORD 
nP¡Src
 ,

89 
BYTE
 
byA˘i⁄
 , 
WORD
 
wVÆ
 )

91  
	`AfxSígYK
–
wBusNoDe°
 , 
wAddrDe°
 , 
nP¡De°
 ,

92 
wBusNoSrc
 , 
wAddrSrc
 , 
nP¡Src
 ,

93 
byA˘i⁄
 , 
wVÆ
 );

94 
	}
}

96 
BOOL
 
	gCPublicMëhod
::
	$SëS€
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
byVÆ
 ,* 
pRólTime
)

98 
REALTIME
 * 
tmpRólTime
 = (REALTIME *)
pRólTime
;

100  
	`AfxSëS€
–
wBusNo
 , 
wAddr
 , 
wP¡
 , 
byVÆ
 , 
tmpRólTime
 );

101 
	}
}

103 
BOOL
 
	gCPublicMëhod
::
	$GëSysTime
(*
pRólTime
)

105 
REALTIME
 * 
tmpRólTime
 = (REALTIME *)
pRólTime
;

107  
	`AfxGëSysTime
(
tmpRólTime
);

108 
	}
}

	@Proto/publicmethod.h

1 #i‚de‡
PUBLICMETHOD_H


2 
	#PUBLICMETHOD_H


	)

4 
	~"cmëhod.h
"

6 ˛as†
	cCPublicMëhod
 : 
public
 
CMëhod


8 
public
:

9 
CPublicMëhod
();

10 
vútuÆ
 
BOOL
 
SëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
fVÆ
 );

11 
vútuÆ
 
BOOL
 
GëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , &
fVÆ
 );

12 
vútuÆ
 
BOOL
 
SëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
bVÆ
 );

13 
vútuÆ
 
BOOL
 
GëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 &
bVÆ
 );

14 
vútuÆ
 
BOOL
 
SëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 
dwVÆ
 );

15 
vútuÆ
 
BOOL
 
GëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 &
dwVÆ
 );

17 
vútuÆ
 
BOOL
 
SëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
, 
BYTE
 
bySèã
 ) ;

18 
vútuÆ
 
BOOL
 
GëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
, 
BYTE
 &
bySèã
 ) ;

19 
vútuÆ
 
BOOL
 
SígYK
–
WORD
 
wBusNoDe°
 , WORD 
wAddrDe°
 , WORD 
nP¡De°
 ,

20 
WORD
 
wBusNoSrc
 , WORD 
wAddrSrc
 , WORD 
nP¡Src
 ,

21 
BYTE
 
byA˘i⁄
 , 
WORD
 
wVÆ
 );

22 
vútuÆ
 
BOOL
 
SëS€
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
byVÆ
 ,* 
pRólTime
);

23 
vútuÆ
 
BOOL
 
GëSysTime
(*
pRólTime
);

	@Typedef.h

1 #i‚de‡
TYPEDEF_H


2 
	#TYPEDEF_H


	)

3 
	~<qglobÆ.h
>

4 
	~<QVe˘‹
>

5 
	~<QM≠
>

6 
	~"°ddef.h
"

7 
	~"m©h.h
"

10 
	tBYTE
 ;

11 
	tWORD
 ;

12 
	tDWORD
 ;

13 
	tUINT
;

14 
boﬁ
 
	tBOOL
 ;

15 
	tHANDLE
 ;

16 * 
	tLPVOID
 ;

18 
	#MAKEWORD
(
a
, 
b
Ë((
WORD
)(((
BYTE
)(((
DWORD
)◊)Ë& 0xff)Ë| ((WORD)((BYTE)(((DWORD)(b)Ë& 0xff))Ë<< 8))

	)

19 
	#MAKELONG
(
a
, 
b
Ë((
LONG
)(((
WORD
)(((
DWORD
)◊)Ë& 0xffff)Ë| ((DWORD)((WORD)(((DWORD)(b)Ë& 0xffff))Ë<< 16))

	)

20 
	#LOWORD
(
l
Ë((
WORD
)(((
DWORD
)÷)Ë& 0xffff))

	)

21 
	#HIWORD
(
l
Ë((
WORD
)((((
DWORD
)÷)Ë>> 16Ë& 0xffff))

	)

22 
	#LOBYTE
(
w
Ë((
BYTE
)(((
DWORD
)(w)Ë& 0xff))

	)

23 
	#HIBYTE
(
w
Ë((
BYTE
)((((
DWORD
)(w)Ë>> 8Ë& 0xff))

	)

24 
	#UINT8
 
BYTE


	)

25 
	#UINT16
 
WORD


	)

26 
	#FALSE
 
Ál£


	)

27 
	#TRUE
 
åue


	)

30 
˛ass
 
	gCEÀmít
 ;

31 
sSYSPAGE
 *
	tPST_SYSPAGE
 ;

32 
˛ass
 
	gCPage
 ;

33 
ègTHREAD_STRUCT
 * 
	tPSTHREAD_PROC
 ;

34 
ègD©aRoŸ
 *
	tPD©aTy≥
 ;

35 
ègDev°
 *
	tPDEVST
 ;

36 
_BUS_LINE
 *
	tPBUS_LINEST
 ;

37 
_CABINET
 *
	tPCABINET
 ;

38 
_SINGALCIRCUIT
 *
	tPSINGALCIRCUIT
 ;

39 
_ELE_FST
 *
	tPELE_FST
 ;

40 
_PAGE_ST
 *
	tPPAGE_FST
 ;

41 
_Pic_Aâribuã_D©a_ST
 *
	tPPIC_ATTRIBUTE_DATA_FST
;

42 
_Pic_Aâribuã_D©a_EÀmít
 *
	tPPIC_ATTRIBUTE_DATA_ELEMENT
;

43 
_Pic_Aâribuã_ST
 *
	tPPIC_ATTRIBUT_FST
;

44 
ègPicNode
 *
	tPPICNODE
;

46 
	gQVe˘‹
< 
	tCEÀmít
 * > 
	tQELEMENT_ARRAY
 ;

47 
	gQM≠
< 
	tWORD
 , 
	tCEÀmít
 * > 
	tQELEMENT_PICOBJ_MAP
;

49 
	gQM≠
< 
	tWORD
 , 
	tPST_SYSPAGE
 > 
	tQSYS_PAGE_ARRAY
 ;

50 
	gQM≠
< 
	tBYTE
 , 
	tCPage
 * > 
	tQPAGE_ARRAY
;

51 *(*
	tTHREAD_PROC
Ë–* 
	t¨g
 );

52 
	gQM≠
< 
	tDWORD
 , 
	tPSTHREAD_PROC
 > 
	tQTHREAD_ARRAY
 ;

53 
	gQVe˘‹
< 
	tPD©aTy≥
 >
	tQDEV_DATA_ARRAY
 ;

55 
	gQM≠
< 
	tWORD
 , 
	tPDEVST
 >
	tQDEV_ARRAY
 ;

56 
	gQDEV_ARRAY
::
	tôî©‹
 
	tQDEV_ARRAY_ITOR
 ;

58 
	gQM≠
< 
	tWORD
 , 
	tPBUS_LINEST
 >
	tQBUS_ARRAY
 ;

59 
	gQBUS_ARRAY
::
	tôî©‹
 
	tQBUS_ARRAY_ITOR
 ;

61 
	gQVe˘‹
< 
	tPCABINET
 > 
	tQCAB_ARRAY
 ;

62 
	gQVe˘‹
< 
	tPSINGALCIRCUIT
 >
	tQSCIRCUIT_ARRAY
 ;

64 
	gQM≠
< 
	tWORD
 , 
	tPSINGALCIRCUIT
 >
	tQSCIRCUIT_MAP
 ;

68 
	gQSCIRCUIT_MAP
::
	tôî©‹
 
	tQSCIRCUIT_MAP_ITOR
 ;

70 
	gQVe˘‹
< 
	tPELE_FST
 > 
	tQELEMENT_FILEST_ARRAY
 ;

71 
	gQVe˘‹
< 
	tPPAGE_FST
 > 
	tQPAGE_FILEST_ARRAY
 ;

73 
	gQVe˘‹
< 
	tPPIC_ATTRIBUTE_DATA_FST
 > 
	tQPIC_ATTRIBUTE_DATA_FST
 ;

74 
	gQVe˘‹
< 
	tPPIC_ATTRIBUTE_DATA_ELEMENT
 > 
	tQPIC_ATTRIBUTE_DATA_ELEMENT
 ;

75 
	gQM≠
< 
	tWORD
 , 
	tPPIC_ATTRIBUT_FST
 > 
	tQPIC_ATTRIBUTE_FST_MAP
 ;

76 
	gQVe˘‹
< 
	tPPIC_ATTRIBUT_FST
 > 
	tQPIC_ATTRIBUTE_FST_ARRAY
 ;

77 
	gQM≠
< 
	tWORD
 , 
	tPPICNODE
 > 
	tQPIC_NODE_TO_ID_MAP
 ;

78 
	gQVe˘‹
< 
	tPPICNODE
 > 
	tQPIC_NODE_TO_ID_ARRAY
 ;

	@calarmdlg.cpp

1 
	~"ˇœrmdlg.h
"

2 
	~"cglobÆ.h
"

3 
	~"Pages/˝age.h
"

4 
	~"EÀmít/˚ñmít.h
"

5 
	gCAœrmDlg
::
	$CAœrmDlg
(
QWidgë
 *
∑ª¡
) :

6 
	$QDülog
(
∑ª¡
)

8 
m_YxAœrmTab
 = 
√w
 
	`QTabÀWidgë
();

9 
m_YxAœrmTab
->
	`£tWödowFœgs
((m_YxAœrmTab->
	`wödowFœgs
()|
Qt
::
WödowSèysOnT›Höt
| Qt::
WödowClo£Buâ⁄Höt
Ë&~Qt::
WödowMöMaxBuâ⁄sHöt
);

10 
m_YxAœrmTab
->
	`£tEdôTriggîs
(
QAb°ø˘IãmVõw
::
NoEdôTriggîs
);

13 
m_YxAœrmTab
->
	`£tCﬁumnCou¡
(3);

14 
m_YxAœrmTab
->
	`£tRowCou¡
(0);

15 
m_YxAœrmTab
->
	`£tCﬁumnWidth
(0,200);

16 
m_YxAœrmTab
->
	`£tCﬁumnWidth
(1,150);

17 
m_YxAœrmTab
->
	`£tCﬁumnWidth
(2,150);

18 
QSåögLi°
 
Yc_hódî
;

19 
Yc_hódî
<<
	`UTF8
("ÂêçÁß∞")<<UTF8("Áä∂ÊÄÅ")<<UTF8("Êó∂Èó¥");

20 
m_YxAœrmTab
->
	`£tH‹iz⁄èlHódîLabñs
(
Yc_hódî
);

22 
YkLabñ
 = 
√w
 
	`QLabñ
(
	`UTF8
("ÈÅ•‰ø°ÂëäË≠¶"));

23 
YkLabñ
->
	`£tAlignmít
–
Qt
::
AlignCíãr
 );

26 
QGridLayout
 *
YkLabñgúdLayout
 = 
√w
 QGridLayout;

27 
YkLabñgúdLayout
->
	`addWidgë
(
YkLabñ
,0,0,1,1);

28 
YkLabñgúdLayout
->
	`addWidgë
(
m_YxAœrmTab
,0,0,5,1);

30 
QVBoxLayout
 * 
dlgLayout
 = 
√w
 QVBoxLayout;

31 
dlgLayout
->
	`£tM¨gö
(20);

32 
dlgLayout
->
	`£tS∑cög
(20);

33 
dlgLayout
->
	`addLayout
(
YkLabñgúdLayout
);

34 
	`£tLayout
(
dlgLayout
);

37 
	`£tFixedSize
(600,300);

38 
	`move
(100,150);

39 
	`£tWödowFœgs
(
Qt
::
WödowClo£Buâ⁄Höt
| Qt::
Wödow
 );

41 
	`c⁄√˘
(
	`AfxGëGlobÆ
(Ë, 
	`SIGNAL
(
	`Sig«l_YxAœrm
(*,)),
this
 , 
	`SLOT
(
	`¶Ÿs_AddYxAœrmIãm
(*,)));

42 
	}
}

45 
	gCAœrmDlg
::
	$¶Ÿs_AddYxAœrmIãm
(*
chName
, 
byVÆue
)

47 
BusAddrP¡
[30] = "";

49 
m_YxAœrmTab
->
	`ö£πRow
( 0 );

51 
m_YxAœrmTab
->
	`£tIãm
(0,0,
√w
 
	`QTabÀWidgëIãm
(
chName
));

52 
	`mem£t
(
BusAddrP¡
,0,(BusAddrPnt));

53 
	`•rötf
(
BusAddrP¡
,"%u",
byVÆue
);

54 
m_YxAœrmTab
->
	`£tIãm
(0,1,
√w
 
	`QTabÀWidgëIãm
(
BusAddrP¡
));

55 
m_YxAœrmTab
->
	`£tIãm
(0,2,
√w
 
	`QTabÀWidgëIãm
(
	`AfxGëSysTimeSå
()));

57 if–
m_YxAœrmTab
->
	`rowCou¡
() > 100 )

59 
m_YxAœrmTab
->
	`ªmoveRow
(100);

61 
	`show
();

62 
	}
}

	@calarmdlg.h

1 #i‚de‡
CALARMDLG_H


2 
	#CALARMDLG_H


	)

3 
	~<QtGui/QtGui
>

4 
	~<QDülog
>

5 
	~"°ru˘uª.h
"

6 ˛as†
	cCAœrmDlg
 : 
public
 
QDülog


8 
Q_OBJECT


9 
public
:

10 
ex∂icô
 
CAœrmDlg
(
QWidgë
 *
∑ª¡
 = 0);

13 
YKST_MSG
 
	mYkDlgD©a
;

14 
QTabÀWidgë
 * 
	mm_YxAœrmTab
;

15 
QLabñ
 * 
	mYkLabñ
;

17 
public
 
	m¶Ÿs
:

18 
¶Ÿs_AddYxAœrmIãm
–* 
chName
, 
byVÆue
 );

	@cglobal.cpp

1 
	~"cglobÆ.h
"

2 
	~"time.h
"

3 
	~<sys/time.h
>

4 
	~<°dio.h
>

5 
	~"q∑öãr.h
"

6 
	~"Pages/˝age.h
"

7 
	~"Pages/˝age_home.h
"

8 
	~"Pages/˝age_sy•¨amëî.h
"

9 
	~"Pages/˝age_dügno°ic.h
"

10 
	~"Pages/˝age_d©aquîy.h
"

11 
	~"Pages/˝age_sy•ic.h
"

12 
	~"EÀmít/˚ñmít.h
"

13 
	~<f˙é.h
>

14 
	~<î∫o.h
>

15 
	~<uni°d.h
>

16 
	~<sys/io˘l.h
>

17 
	~<löux/io˘l.h
>

21 
CGlobÆ
 
	gg_globÆ
 ;

22 
	gCGlobÆ
::
	$CGlobÆ
()

24 
m_pWidgë
 = 
NULL
 ;

25 
m_byCurPage
 = 
Widgë
::
PAGE_HOME
 ;

26 
m_°rRólTime
 = "2016-06-05 11:10:22" ;

27 
m_bThªadRun
 = 
TRUE
 ;

28 
m_byLogSèã
 = 
CPage
::
LOGOUT
 ;

29 
m_wCou¡downTime
 = 0 ;

30 
	`mem£t
–
U§PwdP©h
 , 0 , (UsrPwdPath) );

31 
	`°r˝y
–
U§PwdP©h
 , "./config/UsrPwd" );

32 
	`mem£t
–
NëP¨amP©h
 , 0 , (NetParamPath) );

33 
	`°r˝y
–
NëP¨amP©h
 , "./config/NetParam" );

34 
	`mem£t
–
SysDnsP©h
 , 0 , (SysDnsPath) );

35 
	`°r˝y
–
SysDnsP©h
 , "/etc/resolv.conf" );

37 
	`mem£t
–&
DeÁu…U§Pwd
 , 0 , (
USRPWD
) );

38 
	`mem£t
–&
CuºítU§Pwd
 , 0 , (
USRPWD
) );

39 
	`°r˝y
–
DeÁu…U§Pwd
.
U§
 , "administrator" );

40 
	`°r˝y
–
DeÁu…U§Pwd
.
Pwd
 , "123456" );

41 
	`°r˝y
–
CuºítU§Pwd
.
U§
 , "administrator" );

42 
	`°r˝y
–
CuºítU§Pwd
.
Pwd
 , "123456" );

44 
	`mem£t
–&
DeÁu…NëP¨am
 , 0 , (
NETPARAM
) );

45 
	`mem˝y
(
DeÁu…NëP¨am
.
ù
 , "192.168.1.136" , ("192.168.1.136"));

46 
	`mem˝y
(
DeÁu…NëP¨am
.
mask
 , "255.255.255.0" , ("255.255.255.0"));

47 
	`mem˝y
(
DeÁu…NëP¨am
.
g©eway
 , "192.168.1.1" , ("192.168.1.1"));

48 
	`mem˝y
(
DeÁu…NëP¨am
.
dns
 , "192.168.1.1" , ("192.168.1.1"));

50 
m_GpöFd
 = 
	`›í
(
GPIN
, 
O_WRONLY
);;

51 i‡(
m_GpöFd
 == -1)

53 
	`¥ötf
("ÁûÅÿ›í %s!\n",
GPIN
);

56 
m_GpoutFd
 = 
	`›í
(
GPOUT
, 
O_WRONLY
);;

57 i‡(
m_GpoutFd
 == -1)

59 
	`¥ötf
("ÁûÅÿ›í %s!\n",
GPOUT
);

63 
GpöCmd
[0]=
GPIO_GETMU
;

64 
GpöCmd
[1]=
GPIO_GETOS
;

65 
GpöCmd
[2]=
GPIO_GETBF
;

66 
GpöCmd
[3]=
GPIO_GETBU
;

67 
GpöCmd
[4]=
GPIO_GETMW
;

68 
GpöCmd
[5]=
GPIO_GETBW
;

70 
	`mem£t
(
GpioSèã
,
GPIOOFF
,(GpioState));

72 
s_b°©e
 = 
FALSE
;

73 
gs_uisum_u£c
 = 10 * 60 * 1000 * 1000;

74 
gs_uüdd_u£c
 = 0;

75 
gs_ui¶ìp_u£c
 = 1000 * 1000;

76 
keys_fd
 = 
	`›í
 ("/dev/öput/evít0", 
O_RDONLY
 | 
O_NONBLOCK
);

77 i‡(
keys_fd
 <= 0)

79 
	`¥ötf
 ("open /dev/input/event0 deviceÉrror!\n");

83 
	`¥ötf
 ("open /dev/input/event0 device OK!\n");

86 
YkBegöTime
 = 0;

87 
	}
}

89 
BYTE
 
	gCGlobÆ
::
	$GëLogöSèã
( )

91  
m_byLogSèã
 ;

92 
	}
}

94 
	gCGlobÆ
::
	$SëLogöSèã
–
BYTE
 
bySèã
 )

96 if–
bySèã
 !
CPage
::
LOGIN
 && bySèã !CPage::
LOGOUT
 )

98 
	`Q_ASSERT
–
FALSE
 ) ;

102 
m_byLogSèã
 = 
bySèã
 ;

103 
emô
 
	`LogöSèãCh™ged
(
m_byLogSèã
);

104 
	}
}

107 
QSåög
 
	gCGlobÆ
::
	$GëRólTimeSå
( )

109  
m_°rRólTime
 ;

110 
	}
}

112 
	gCGlobÆ
::
	$SëRólTimeSå
–
QSåög
 
°r
 )

114 if–
°r
.
	`size
() <= 0 )

116 
	`Q_ASSERT
–
FALSE
 ) ;

120 
m_°rRólTime
 = 
°r
 ;

121 
	}
}

123 
BOOL
 
	gCGlobÆ
::
	$GëThªadRunFœg
( )

125  
m_bThªadRun
 ;

126 
	}
}

128 
BOOL
 
	gCGlobÆ
::
	$SëThªadRunFœg
–
BOOL
 
bFœg
 )

130 
m_bThªadRun
 = 
bFœg
 ;

131  
TRUE
 ;

132 
	}
}

134 
time_t
 
	gCGlobÆ
::
	$GëCou¡downTime
( )

136  
m_wCou¡downTime
 ;

137 
	}
}

139 
	gCGlobÆ
::
	$SëCou¡downTime
–
time_t
 
timeCou¡
 )

141 
m_wCou¡downTime
 = 
timeCou¡
 ;

142 
	}
}

144 
	gCGlobÆ
::
	$Re‰eshGpioPowîSèã
()

146 
Àvñ
,
BackPowîLevñ
;

147 
BYTE
 
tmpGpio°©e
;

148 
BYTE
 
YxSèã
 = 0;

150  
i
 = 0 ; i < 4 ; i++ )

151 { 
YxSèã
 = 0;

152 if–
i
 == 1 )

154 if(
	`io˘l
(
m_GpöFd
, 
GpöCmd
[
i
], &
Àvñ
) >= 0)

157 
BYTE
 
tmpIndex
 = 
GPIO_ERROR
;

158 
i
)

161 
tmpIndex
 = 
MAIN_POWER
;

162 if(
Àvñ
 == 1)

163 
tmpGpio°©e
 = 
GPIOON
;

165 
tmpGpio°©e
 = 
GPIOOFF
;

169 
BackPowîLevñ
 = 
Àvñ
;

170 
tmpIndex
 = 
GPIO_ERROR
;

173 
tmpIndex
 = 
BACKUP_POWER
;

174 if–(
BackPowîLevñ
 =1Ë&& (
Àvñ
 == 1) )

175 
tmpGpio°©e
 = 
GPIOON
;

177 
tmpGpio°©e
 = 
GPIOOFF
;

182 if–
tmpIndex
 =
GPIO_ERROR
 )

184 if–
GpioSèã
[
tmpIndex
] =
tmpGpio°©e
 )

187 
	`AfxSëGpioSèã
–
tmpIndex
 , 
tmpGpio°©e
 );

188 if–
tmpGpio°©e
 =
GPIOON
 )

189 
YxSèã
 = 1;

190 if–
tmpGpio°©e
 =
GPIOOFF
 )

191 
YxSèã
 = 0;

192 if–
tmpIndex
 =
MAIN_POWER
 )

193 
	`AfxSëYx
(
TOTAL_BUS
-1,1,0,
YxSèã
);

194 if–
tmpIndex
 =
BACKUP_POWER
 )

195 
	`AfxSëYx
(
TOTAL_BUS
-1,1,1,
YxSèã
);

198 
	}
}

200 
	gCGlobÆ
::
	$Re‰eshGpioFÆutSèã
()

202 if–(
GpioSèã
[
MAIN_POWER
] =
GPIOON
)

203 && (
GpioSèã
[
BACKUP_POWER
] =
GPIOON
) )

206 if(
GpioSèã
[
FAULT
] =
GPIOON
)

207 
	`AfxSëGpioSèã
–
FAULT
 , 
GPIOOFF
 );

211 if(
GpioSèã
[
FAULT
] =
GPIOOFF
)

212 
	`AfxSëGpioSèã
–
FAULT
 , 
GPIOON
 );

214 
	}
}

216 
	gCGlobÆ
::
	$Re‰eshGpioW‹kögSèã
()

218 if(
GpioSèã
[
WORKING
] =
GPIOON
)

219 
	`AfxSëGpioSèã
–
WORKING
 , 
GPIOOFF
 );

220 if(
GpioSèã
[
WORKING
] =
GPIOOFF
)

221 
	`AfxSëGpioSèã
–
WORKING
 , 
GPIOON
 );

222 
	}
}

224 
	gCGlobÆ
::
	$Re‰eshGpioW¨nSèã
()

227 
	}
}

230 
CGlobÆ
::
	$AfxSëGpioSèã
–
BYTE
 
ödex
 , BYTE 
Sèã
)

232 
CGlobÆ
 * 
pGlobÆ
 = 
	`AfxGëGlobÆ
() ;

233 if–!
pGlobÆ
 )

235 
	`Q_ASSERT
–
FALSE
 );

238 
d©a
[2]="";

239 
d©a
[0] = 
ödex
;

240 
d©a
[1] = 
Sèã
;

241 if(
	`wrôe
(
pGlobÆ
->
m_GpoutFd
, 
d©a
, (data)) <= 0)

243 
	`¥ötf
("WrôêFaû :£àgpioöfÿ%dÜevñ %d \n", 
d©a
[0], data[1]);

246 
pGlobÆ
->
GpioSèã
[ 
ödex
 ] = 
Sèã
;

248 
	}
}

250 
	gCGlobÆ
::
	$SëSèndby
–
BOOL
 
b°©e
 )

253 i‡(
b°©e
 =
s_b°©e
 )

258 i‡(
b°©e
)

261 
	`sy°em
( "echo \"4\" > /sys/class/graphics/fb0/blank");

266 
	`sy°em
( "echo \"0\" > /sys/class/graphics/fb0/blank" );

269 
s_b°©e
 = 
b°©e
;

270 
	}
}

272 
	gCGlobÆ
::
	$Re‰eshS¸ìnSèã
()

277 i‡(0xfffffff‡=
gs_uisum_u£c
 )

279 
	`SëSèndby
–
FALSE
 );

280 
	`u¶ìp
–2 * 
gs_ui¶ìp_u£c
 );

284 i‡(
	`ªad
 (
keys_fd
, &
t
,  (t)) ==  (t))

287 i‡(
t
.
ty≥
 =
EV_ABS
 )

289 
gs_uüdd_u£c
 = 0;

290 
	`SëSèndby
–
FALSE
 );

298 i‡(
gs_uüdd_u£c
 >
gs_uisum_u£c
 )

300 
	`SëSèndby
–
TRUE
 );

301 
gs_uüdd_u£c
 = 
gs_uisum_u£c
 + 
gs_ui¶ìp_u£c
;

306 
gs_uüdd_u£c
 +
gs_ui¶ìp_u£c
;

310 
	}
}

312 
	gCGlobÆ
::
	$EmôSig«l_YkRäInRólThªad
(
WORD
 
wBusNoDe°
, WORD 
wAddrDe°
, WORD 
nP¡De°
, WORD 
wBusNoSrc
, WORD 
wAddrSrc
, WORD 
nP¡Src
, 
BYTE
 
byA˘i⁄
, WORD 
wVÆ
)

315 
emô
 
	`Sig«l_YkRäInRólThªad
(
wBusNoDe°
,
wAddrDe°
,
nP¡De°
,

316 
wBusNoSrc
,
wAddrSrc
,
nP¡Src
,

317 
byA˘i⁄
,
wVÆ
);

318 
	}
}

320 
	gCGlobÆ
::
	$EmôSig«l_YkRäTimeOut
()

322 
emô
 
	`Sig«l_YkRäTimeOut
();

323 
	}
}

325 
	gCGlobÆ
::
	$EmôSig«l_YxAœrm
(*
chName
, 
byVÆue
)

327 
emô
 
	`Sig«l_YxAœrm
(
chName
,
byVÆue
);

328 
	}
}

330 
BYTE
 
	$AfxGëLogöSèã
( )

332  
	`AfxGëGlobÆ
()->
	`GëLogöSèã
() ;

333 
	}
}

335 
	$AfxSëLogöSèã
–
BYTE
 
byLogöSèã
 )

337 
	`AfxGëGlobÆ
()->
	`SëLogöSèã
–
byLogöSèã
 );

339 if–
byLogöSèã
 =
CPage
::
LOGOUT
 )

341 
Widgë
 * 
pWidgë
 = 
	`AfxGëWidgë
() ;

342 
CPage
 * 
pPage
 = 
	`AfxGëCurPagePoöãr
();

343 if–!
pWidgë
 || !
pPage
 )

345 
	`Q_ASSERT
–
FALSE
 );

349 
QRe˘
 
	`rc
–
pPage
->
m_rcLogöInfo
 ) ;

350 
rc
 =Ñc.
	`unôed
–
pPage
->
m_rcLogöPic
 ) ;

351 
pWidgë
->
	`upd©e
–
rc
 );

354 
	}
}

356 
CGlobÆ
 * 
	$AfxGëGlobÆ
( )

358  &
g_globÆ
 ;

359 
	}
}

361 
CPage
 * 
	$AfxGëS≥cifyPage
–
BYTE
 
byPageIndex
 )

363 
Widgë
 * 
pWidgë
 = 
	`AfxGëWidgë
() ;

364 if–!
pWidgë
 )

366 
	`Q_ASSERT
–
FALSE
 );

367  
NULL
 ;

370 
CPage
 * 
pPage
 = 
NULL
 ;

371 
BOOL
 
bFœg
 = 
pWidgë
->
m_PageMag
.
	`c⁄èös
–
byPageIndex
 );

372 if–
bFœg
 )

373 
pPage
 = 
pWidgë
->
m_PageMag
[ 
byPageIndex
 ] ;

375  
pPage
 ;

376 
	}
}

378 
Widgë
 * 
	$AfxGëWidgë
( )

380  
g_globÆ
.
m_pWidgë
 ;

381 
	}
}

383 
BOOL
 
	$AfxSëMaöWidë
–
Widgë
 * 
pWidgë
 )

385 if–!
pWidgë
 )

386  
FALSE
 ;

388 
g_globÆ
.
m_pWidgë
 = 
pWidgë
 ;

390  
TRUE
 ;

391 
	}
}

393 
BOOL
 
	$AfxSëCurPageIndex
–
BYTE
 
byIndex
 )

395 
Widgë
 * 
pWidgë
 = 
	`AfxGëWidgë
() ;

396 if–!
pWidgë
 )

398 
	`Q_ASSERT
–
FALSE
 );

399  
FALSE
 ;

402 
BOOL
 
bFœg
 = 
pWidgë
->
m_PageMag
.
	`c⁄èös
–
byIndex
 ) ;

403 if–!
bFœg
 )

404  
FALSE
 ;

406 
g_globÆ
.
m_byCurPage
 = 
byIndex
 ;

408  
TRUE
 ;

409 
	}
}

411 
BYTE
 
	$AfxGëCurPageIndex
 ( )

413  
g_globÆ
.
m_byCurPage
 ;

414 
	}
}

416 
	$AfxRe‰eshS¸ìn
( )

418 
cx
 = 
Widgë
::
HOR_SIZE
 ;

419 
cy
 = 
Widgë
::
VER_SIZE
 ;

420 
	`AfxGëWidgë
()->
	`upd©e
–
	`QRe˘
–0 , 0 ,
cx
 , 
cy
 ) );

421 
	}
}

424 
BOOL
 
	$AfxGëSysTime
–
PREALTIME
 
pTime
 )

426 if–
pTime
 =
NULL
 )

427  
FALSE
 ;

429 
time_t
 
lSec⁄d
;

430 
tm
 
cuºTime
;

431 
timevÆ
 
tv
;

432 
timez⁄e
 
tz
;

434 
	`gëtimeofday
(&
tv
, &
tz
);

435 
lSec⁄d
 = (
time_t
)(
tv
.
tv_£c
);

436 
	`loˇ…ime_r
–&
lSec⁄d
, &
cuºTime
 );

437 
pTime
->
wMûliSec
 = 
tv
.
tv_u£c
/1000;

438 
pTime
->
wSec⁄d
 = 
cuºTime
.
tm_£c
;

439 
pTime
->
wMöuã
 = 
cuºTime
.
tm_mö
;

440 
pTime
->
wHour
 = 
cuºTime
.
tm_hour
;

441 
pTime
->
wDay
 = 
cuºTime
.
tm_mday
;

442 
pTime
->
wM⁄th
 = 1+
cuºTime
.
tm_m⁄
;

443 
pTime
->
wYór
 = 1900+
cuºTime
.
tm_yór
;

444 
pTime
->
wDayOfWìk
 = 
cuºTime
.
tm_wday
 ;

445  
TRUE
 ;

446 
	}
}

448 
BOOL
 
	$AfxSëSysTime
(
REALTIME
 *
pRólTime
)

450 if–
pRólTime
 =
NULL
 )

451  
FALSE
;

452 
timevÆ
 
tv
;

454 
tm
 
SëTime_Now
;

455 
SëTime_Now
.
tm_yór
 = 
pRólTime
->
wYór
-1900;

456 
SëTime_Now
.
tm_m⁄
 = 
pRólTime
->
wM⁄th
-1;

457 
SëTime_Now
.
tm_mday
 = 
pRólTime
->
wDay
;

458 
SëTime_Now
.
tm_hour
 = 
pRólTime
->
wHour
;

459 
SëTime_Now
.
tm_mö
 = 
pRólTime
->
wMöuã
;

460 
SëTime_Now
.
tm_£c
 = 
pRólTime
->
wSec⁄d
;

462 
tv
.
tv_£c
 = 
	`mktime
–&
SëTime_Now
 );

463 
tv
.
tv_u£c
 = 
pRólTime
->
wMûliSec
*1000;

465 
πn
 = 
	`£âimeofday
(&
tv
, 
NULL
);

466 if–
πn
 == 0 )

468 
	`sy°em
("hwclock -w");

469  
TRUE
;

471  
FALSE
;

472 
	}
}

475 
QSåög
 
	$AfxGëSysTimeSå
( )

477 
REALTIME
 
tm
 ;

478 
	`AfxGëSysTime
–&
tm
 ) ;

480 
QSåög
 
°rTime
 = 
	`AfxF‹m©Så
("%04d-%02d-%02d %02d:%02d:%02d" ,

481 
tm
.
wYór
 ,Åm.
wM⁄th
 ,Åm.
wDay
 ,Åm.
wHour
 ,Åm.
wMöuã
 ,Åm.
wSec⁄d
 );

483  
°rTime
 ;

484 
	}
}

486 
QSåög
 
	$AfxF‹m©Så
–c⁄° * 
pSåög
 , ... )

488 if–
pSåög
 =
NULL
 )

489  
	`QSåög
( "" ) ;

491 
Àn
 = 
	`°æí
–
pSåög
 ) ;

492 if–
Àn
 >= 2048 )

493  
	`QSåög
( "" ) ;

495 
buf
[ 2048 ] ;

496 
	`mem£t
–
buf
 , 0 , ( buf ) ) ;

498 
va_li°
 
vaLi°
 ;

499 
	`va_°¨t
 ( 
vaLi°
 , 
pSåög
 ) ;

500 
	`v•rötf
–
buf
 , 
pSåög
 , 
vaLi°
 ) ;

501 
	`va_íd
–
vaLi°
 ) ;

503 
QSåög
 
°r
 ;

504 
°r
 = 
	`UTF8
–
buf
 ) ;

505  
°r
 ;

506 
	}
}

508 
	$AfxA¶ìp
–
DWORD
 
dwMûliSecd
 )

510 
timevÆ
 
tv
;

511 
tv
.
tv_£c
 = 0 ;

512 
tv
.
tv_u£c
 = 
dwMûliSecd
 * 1000 ;

513 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tv
);

514 
	}
}

516 
BOOL
 
	$AfxRe‰eshHomePageTime
( )

518 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
() ;

519 if–
byIndex
 !
Widgë
::
PAGE_HOME
 )

520  
FALSE
 ;

522 
CPage
 * 
pPage
 = 
	`AfxGëS≥cifyPage
–
byIndex
 ) ;

523 if–!
pPage
 )

525 
	`Q_ASSERT
–
FALSE
 ) ;

526  
FALSE
 ;

529 
REALTIME
 
tm
 ;

530 
	`AfxGëSysTime
–&
tm
 ) ;

531 
WORD
 
wSec
 = 0xFFFF ;

532 if–
wSec
 !
tm
.
wSec⁄d
 )

533 
wSec
 = 
tm
.
wSec⁄d
 ;

535  
FALSE
 ;

537 
QSåög
 
°rTime
 = 
	`AfxGëSysTimeSå
() ;

538 
	`AfxGëGlobÆ
()->
	`SëRólTimeSå
–
°rTime
 );

540 
QRe˘
 
rcD©e
 = (–
CPage_Home
 * )
pPage
)->
m_rcD©e
 ;

542 
	`AfxGëWidgë
()->
	`upd©e
–
rcD©e
 );

543  
TRUE
 ;

544 
	}
}

546 
BOOL
 
	$AfxRe‰eshDügno°icPageBusAndDevSèã
( )

548 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
() ;

549 if–
byIndex
 !
Widgë
::
PAGE_DIOGNOSTIC
 )

550  
FALSE
 ;

552 
CPage
 * 
pPage
 = 
	`AfxGëS≥cifyPage
–
byIndex
 ) ;

553 if–!
pPage
 )

555 
	`Q_ASSERT
–
FALSE
 ) ;

556  
FALSE
 ;

559 
CPage_Dügno°ic
 *
tmpDügno°ic
 = ( CPage_Dügno°i¯* )
pPage
;

561 if–
tmpDügno°ic
->
Dügno°icO±i⁄
 =tmpDügno°ic->
DATAGRAM_PAGE
 )

562 
	`AfxGëWidgë
()->
	`upd©e
–
tmpDügno°ic
->
RxTxRe˘
 );

564 
	`AfxGëWidgë
()->
	`upd©e
–
tmpDügno°ic
->
DevSèãRe˘
 );

568  
TRUE
;

569 
	}
}

572 
BOOL
 
	$AfxRe‰eshPicCﬁ‹
(
PST_SYSPAGE
 
CurPage°
 ,
CEÀmít
 * 
FEÀmít
)

574 
Widgë
 *
tmpWidgë
 = 
	`AfxGëWidgë
();

576 if–
FEÀmít
->
	`IsCh™geCﬁ‹
() )

578 
PPICNODE
 
tmpNodeAºay
 = 
CurPage°
->
m_AŒEÀmítNodeToPicId_M≠
[
FEÀmít
->
m_wObje˘NodeNext
];

579 if–
tmpNodeAºay
 =
NULL
 )

581 
	`¥ötf
("FEÀmít->m_wObje˘NodeNexà%dÅmpNodeAºay =NULL\n",
FEÀmít
->
m_wObje˘NodeNext
);

582  
FALSE
;

584 
CurNodeEÀmítSize
 = 
tmpNodeAºay
->
PicId_Aºay
.
	`size
();

585 
WORD
 
EÀmítId
 = 0;

586 
CEÀmít
 * 
tmpEÀmít
 = 
NULL
;

587  
j
 = 0; j < 
CurNodeEÀmítSize
; j++ )

589 
EÀmítId
 = 
tmpNodeAºay
->
PicId_Aºay
.
	`©
(
j
);

590 
tmpEÀmít
 = 
	`AfxGëWidgë
()->
m_objAŒEÀmít
[ 
EÀmítId
 ];

591 if–
tmpEÀmít
 =
NULL
 )

593 
	`¥ötf
("AfxGëWidgë()->m_objAŒEÀmít[ %d ]; =NULL\n",
EÀmítId
);

596 if–
tmpEÀmít
 =
FEÀmít
 )

601 
tmpEÀmít
->
	`SëCh™geNodeCﬁ‹
(
FEÀmít
->
m_wObje˘NodeNext
,FEÀmít->
m_wObje˘NodeNextSèã
);

602 
tmpWidgë
->
	`upd©e
(
tmpEÀmít
->
	`GëQRe˘
());

603 
tmpEÀmít
->
	`GëObje˘Ty≥
())

605 
CEÀmít
::
BREAKER
:

606 
CEÀmít
::
CONTACTOR
:

607 
CEÀmít
::
LOAD_BREAKER_2POS
:

608 
CEÀmít
::
LOAD_BREAKER_3POS
:

609 
CEÀmít
::
SWITCH_2POS
:

610 
CEÀmít
::
SWITCH_3POS
:

611 
CEÀmít
::
SWITCH_CONNECT_EARTH
:

612 
	`AfxRe‰eshPicCﬁ‹
(
CurPage°
,
tmpEÀmít
);

621 
	`¥ötf
(" FElement->IsChangeColor() is FALSE!\n");

624  
TRUE
;

625 
	}
}

628 
BOOL
 
	$AfxRe‰eshPicSèã
()

630 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
() ;

631 if–
byIndex
 !
Widgë
::
PAGE_SYS_PIC
 )

632  
FALSE
 ;

634 
CPage
 * 
pPage
 = 
	`AfxGëS≥cifyPage
–
byIndex
 ) ;

635 if–!
pPage
 )

637 
	`Q_ASSERT
–
FALSE
 ) ;

638  
FALSE
 ;

641 
Widgë
 *
tmpWidgë
 = 
	`AfxGëWidgë
();

642 
CPage_SysPic
 *
tmpSysPic
 = ( CPage_SysPic* )
pPage
;

644 
PST_SYSPAGE
 
CurPage°
 = 
tmpSysPic
->
	`GëSysPage_Såcut
—mpSysPic->
	`GëCurPage
());

645 if–!
CurPage°
 )

647 
	`Q_ASSERT
–
FALSE
 ) ;

648  
FALSE
 ;

651 
CurPagEÀmítSize
 = 
CurPage°
->
m_EÀAºay
.
	`size
();

652 
CEÀmít
 * 
FEÀmít
 = 
NULL
;

653  
i
 = 0; i < 
CurPagEÀmítSize
; i++ )

655 
FEÀmít
 = 
CurPage°
->
m_EÀAºay
.
	`©
(
i
);

656 if–
FEÀmít
 =
NULL
 )

658 
	`Q_ASSERT
–
FALSE
 ) ;

659  
FALSE
;

663 if–
FEÀmít
->
	`Com∑ªAâribuãD©a
() )

665 
tmpWidgë
->
	`upd©e
(
FEÀmít
->
	`GëQRe˘
());

666 
FEÀmít
->
	`GëObje˘Ty≥
())

668 
CEÀmít
::
BREAKER
:

669 
CEÀmít
::
CONTACTOR
:

670 
CEÀmít
::
LOAD_BREAKER_2POS
:

671 
CEÀmít
::
LOAD_BREAKER_3POS
:

672 
CEÀmít
::
SWITCH_2POS
:

673 
CEÀmít
::
SWITCH_3POS
:

674 
CEÀmít
::
SWITCH_CONNECT_EARTH
:

677 
	`AfxRe‰eshPicCﬁ‹
(
CurPage°
,
FEÀmít
);

687  
TRUE
;

688 
	}
}

692 
	$AfxRe‰eshGpioSèã
()

694 
CGlobÆ
 * 
pGlobÆ
 = 
	`AfxGëGlobÆ
() ;

695 if–!
pGlobÆ
 )

697 
	`Q_ASSERT
–
FALSE
 );

700 
pGlobÆ
->
	`Re‰eshGpioW¨nSèã
();

701 
pGlobÆ
->
	`Re‰eshGpioW‹kögSèã
();

702 
pGlobÆ
->
	`Re‰eshGpioPowîSèã
();

703 
pGlobÆ
->
	`Re‰eshGpioFÆutSèã
();

705 
	}
}

708 
BOOL
 
	$AfxRe‰eshD©aQuîySèã
()

710 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
() ;

711 if–
byIndex
 !
Widgë
::
PAGE_DATA_QUERY
 )

712  
FALSE
 ;

714 
CPage
 * 
pPage
 = 
	`AfxGëS≥cifyPage
–
byIndex
 ) ;

715 if–!
pPage
 )

717 
	`Q_ASSERT
–
FALSE
 ) ;

718  
FALSE
 ;

721 
	`AfxGëWidgë
()->
	`upd©e
–
	`QRe˘
( 546,165,150,350 ) );

723  
TRUE
;

724 
	}
}

726 
BOOL
 
	$AfxRe‰eshSysP¨amPageSysTime
( )

728 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
() ;

729 if–
byIndex
 !
Widgë
::
PAGE_SYS_PARA
 )

730  
FALSE
 ;

732 
CPage
 * 
pPage
 = 
	`AfxGëS≥cifyPage
–
byIndex
 ) ;

733 if–!
pPage
 )

735 
	`Q_ASSERT
–
FALSE
 ) ;

736  
FALSE
 ;

738 
CPage_SysP¨amëî
 * 
tmpSysP¨am
 = ( CPage_SysP¨amëî * )
pPage
;

740 if–
tmpSysP¨am
->
SysP¨amO±i⁄
 =
CPage_SysP¨amëî
::
SYS_TIME
 )

742 if–
tmpSysP¨am
->
Is_Re‰esh_SysP¨amTime
 =
TRUE
 )

744 
REALTIME
 
tm
 ;

745 
	`AfxGëSysTime
–&
tm
 ) ;

746 if–
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
YEAR_INPUT_RECT
].
	`toSh‹t
(Ë!
tm
.
wYór
 )

748 
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
YEAR_INPUT_RECT
] = 
QSåög
::
	`numbî
(
tm
.
wYór
);

749 
	`AfxGëWidgë
()->
	`upd©e
–
tmpSysP¨am
->
SysP¨amPageRe˘
[
CPage_SysP¨amëî
::
YEAR_INPUT_RECT
] );

751 if–
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
MONTH_INPUT_RECT
].
	`toSh‹t
(Ë!
tm
.
wM⁄th
 )

753 
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
MONTH_INPUT_RECT
] = 
QSåög
::
	`numbî
(
tm
.
wM⁄th
);

754 
	`AfxGëWidgë
()->
	`upd©e
–
tmpSysP¨am
->
SysP¨amPageRe˘
[
CPage_SysP¨amëî
::
MONTH_INPUT_RECT
] );

756 if–
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
DAY_INPUT_RECT
].
	`toSh‹t
(Ë!
tm
.
wDay
 )

758 
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
DAY_INPUT_RECT
] = 
QSåög
::
	`numbî
(
tm
.
wDay
);

759 
	`AfxGëWidgë
()->
	`upd©e
–
tmpSysP¨am
->
SysP¨amPageRe˘
[
CPage_SysP¨amëî
::
DAY_INPUT_RECT
] );

761 if–
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
HOUR_INPUT_RECT
].
	`toSh‹t
(Ë!
tm
.
wHour
 )

763 
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
HOUR_INPUT_RECT
] = 
QSåög
::
	`numbî
(
tm
.
wHour
);

764 
	`AfxGëWidgë
()->
	`upd©e
–
tmpSysP¨am
->
SysP¨amPageRe˘
[
CPage_SysP¨amëî
::
HOUR_INPUT_RECT
] );

766 if–
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
MINUTE_INPUT_RECT
].
	`toSh‹t
(Ë!
tm
.
wMöuã
 )

768 
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
MINUTE_INPUT_RECT
] = 
QSåög
::
	`numbî
(
tm
.
wMöuã
);

769 
	`AfxGëWidgë
()->
	`upd©e
–
tmpSysP¨am
->
SysP¨amPageRe˘
[
CPage_SysP¨amëî
::
MINUTE_INPUT_RECT
] );

771 if–
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
SECOND_INPUT_RECT
].
	`toSh‹t
(Ë!
tm
.
wSec⁄d
 )

773 
tmpSysP¨am
->
SysP¨amPageRe˘Text
[
CPage_SysP¨amëî
::
SECOND_INPUT_RECT
] = 
QSåög
::
	`numbî
(
tm
.
wSec⁄d
);

774 
	`AfxGëWidgë
()->
	`upd©e
–
tmpSysP¨am
->
SysP¨amPageRe˘
[
CPage_SysP¨amëî
::
SECOND_INPUT_RECT
] );

778  
TRUE
 ;

779 
	}
}

782 
	$AfxRe‰eshLogöSèã
( )

784 
BYTE
 
byLogöSèã
 = 
	`AfxGëLogöSèã
() ;

785 if–
byLogöSèã
 =
CPage
::
LOGOUT
 )

787 
	`AfxGëGlobÆ
()->
	`SëCou¡downTime
( 0 );

791 
REALTIME
 
tm
 ;

792 
	`AfxGëSysTime
–&
tm
 ) ;

793 
WORD
 
wSec
 = 0xFFFF ;

794 if–
wSec
 !
tm
.
wSec⁄d
 )

795 
wSec
 = 
tm
.
wSec⁄d
 ;

799 
CPage
 * 
pPage
 = 
	`AfxGëCurPagePoöãr
() ;

800 if–!
pPage
 )

802 
	`Q_ASSERT
–
FALSE
 ) ;

806 
Widgë
 * 
pWidgë
 = 
	`AfxGëWidgë
();

807 if–!
pWidgë
 )

809 
	`Q_ASSERT
–
FALSE
 );

813 
time_t
 
timeBegö
 = 
	`AfxGëGlobÆ
()->
	`GëCou¡downTime
();

814 if–!
timeBegö
 )

816 
time_t
 
tBegö
 = 0 ;

817 
	`time
–&
tBegö
 ) ;

818 
	`AfxGëGlobÆ
()->
	`SëCou¡downTime
–
tBegö
 );

821 
QRe˘
 
	`rc
–
pPage
->
m_rcLogöInfo
 ) ;

822 
rc
 =Ñc.
	`unôed
–
pPage
->
m_rcLogöPic
 ) ;

823 
pWidgë
->
	`upd©e
–
rc
 );

824 
	}
}

826 
BOOL
 
	$AfxRe‰eshS¸ìnSèã
()

828 
	`AfxGëGlobÆ
()->
	`Re‰eshS¸ìnSèã
();

829  
TRUE
;

830 
	}
}

832 
	$AfxRe‰eshYkTime
()

834 
time_t
 
tmpCurTime
=0;

835 if–
	`AfxGëGlobÆ
()->
YkBegöTime
 != 0 )

837 
	`time
(&
tmpCurTime
);

838 if–
	`abs
(
tmpCurTime
-
	`AfxGëGlobÆ
()->
YkBegöTime
) > 30 )

840 
	`AfxGëGlobÆ
()->
YkBegöTime
 = 0;

841 
	`AfxGëGlobÆ
()->
	`EmôSig«l_YkRäTimeOut
();

845 
	}
}

847 
CPage
 * 
	$AfxGëCurPagePoöãr
( )

849 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
() ;

850 
CPage
 * 
pPage
 = 
	`AfxGëS≥cifyPage
–
byIndex
 ) ;

851 if–!
pPage
 )

853 
	`Q_ASSERT
–
FALSE
 ) ;

854  
NULL
 ;

857  
pPage
 ;

858 
	}
}

860 
PSTHREAD_PROC
 
	$AfxGëThªadInfo
–
±hªad_t
 
tid
 )

862 
Widgë
 * 
pWidgë
 = 
	`AfxGëWidgë
() ;

863 if–!
pWidgë
 )

865 
	`Q_ASSERT
–
FALSE
 ) ;

866  
NULL
 ;

869 
QTHREAD_ARRAY
 * 
pM≠
 = &
pWidgë
->
m_ThªadAºay
 ;

871 
size
 = 
pM≠
->
	`size
() ;

872 if–
size
 == 0 )

873  
NULL
 ;

875 
QTHREAD_ARRAY
::
c⁄°_ôî©‹
 
ô‹
 = 
pM≠
->
	`föd
–
tid
 );

876 if–
ô‹
 =
pM≠
->
	`íd
() )

877  
NULL
 ;

879  
ô‹
.
	`vÆue
( );

880 
	}
}

882 
	$AfxUpd©eTimeoutTime
( )

884 
BYTE
 
bySèã
 = 
	`AfxGëLogöSèã
() ;

885 if–
bySèã
 =
CPage
::
LOGOUT
 )

888 
DWORD
 
dwMsgty≥
 = 
CMsg
::
MSG_REAL_CHANNEL
 ;

889 
PSTHREAD_PROC
 
pThªad
 = 
	`AfxGëThªadInfo
–
dwMsgty≥
 ) ;

890 if–!
pThªad
 )

893 
PUPD_LOGTime
 
pTime
 = 
√w
 
UPD_LOGTime
 ;

894 
	`AfxSídMsg
–
pThªad
->
pMsg
 , 
pTime
 ) ;

895 
	}
}

897 
BOOL
 
	$AfxSídMsg
–
CMsg
 * 
pMsg
 ,
LPVOID
 
pVoid
 )

899 if–!
pMsg
 || !pMsg->
	`IsMsgQueue
() )

901 
	`Q_ASSERT
–
FALSE
 );

902  
FALSE
 ;

906 
LMSG
 
msg
 ;

907 
msg
.
pVoid
 = ( 
LPVOID
 )pVoid ;

908 
pMsg
->
	`SídMsg
–&
msg
 );

910  
TRUE
 ;

911 
	}
}

914 * 
	$ThªadRólProc
–* 
pP¨am
 )

919 if–!
pP¨am
 )

921 
	`Q_ASSERT
–
FALSE
 ) ;

922  
NULL
 ;

927 
	`AfxA¶ìp
( 1000 );

929 
PSTHREAD_PROC
 
pTD©a
 = ( PSTHREAD_PROC )
pP¨am
 ;

930 
CGlobÆ
 * 
pGlobÆ
 = 
	`AfxGëGlobÆ
() ;

931 if–!
pGlobÆ
 || !
pTD©a
 )

933 
	`Q_ASSERT
–
FALSE
 );

934  
NULL
 ;

937 
CMsg
 * 
pMsg
 = 
pTD©a
->pMsg ;

938 if–!
pMsg
 || !pMsg->
	`IsMsgQueue
() )

940 
	`±hªad_exô
( 0 );

941  
NULL
 ;

944 
CúNo
=0;

945  
pGlobÆ
->
	`GëThªadRunFœg
() )

948 if–!
pMsg
->
	`IsMsgQueue
() )

951 
LMSG
 
RMsg
 ;

952 if–
pMsg
->
	`RecvMsg
–&
RMsg
 ) )

954 
PSMSG
 
pMsg
 = ( PSMSG )
RMsg
.
pVoid
 ;

955 if–!
pMsg
 )

957 
	`¶ìp
( 1 ) ;

960 if–
pMsg
->
msgCu°omTy≥
 =
SMSG
::
MSG_YK
 )

962 
PYKST_MSG
 
pYkmsg
 = ( PYKST_MSG )
pMsg
 ;

963 
	`AfxGëGlobÆ
()->
	`EmôSig«l_YkRäInRólThªad
(
pYkmsg
->
wBusNoDe°
,pYkmsg->
wAddrDe°
,pYkmsg->
wP¡NoDe°
,

964 
pYkmsg
->
wBusNoSrc
,pYkmsg->
wAddrSrc
,pYkmsg->
wP¡NoSrc
,

965 
pYkmsg
->
byA˘i⁄
,pYkmsg->
wVÆ
);

970 if–
pMsg
->
msgCu°omTy≥
 =
SMSG
::
MSG_UPD_LOGINTIME
 )

971 
	`AfxGëGlobÆ
()->
	`SëCou¡downTime
( 0 );

972 if–
pMsg
 )

974 
dñëe
 
pMsg
 ;

975 
pMsg
 = 
NULL
 ;

980 
	`AfxRe‰eshYkTime
();

983 
	`AfxRe‰eshHomePageTime
() ;

986 
	`AfxRe‰eshLogöSèã
( ) ;

989 
	`AfxRe‰eshSysP¨amPageSysTime
();

993 
	`AfxRe‰eshPicSèã
();

995 if–
CúNo
 == 0 )

998 
	`AfxRe‰eshGpioSèã
();

1001 
	`AfxRe‰eshD©aQuîySèã
();

1004 
	`AfxRe‰eshS¸ìnSèã
();

1007 
	`AfxRe‰eshDügno°icPageBusAndDevSèã
();

1010 
	`AfxA¶ìp
( 100 );

1011 
CúNo
++;

1012 if–
CúNo
 > 10 )

1013 
CúNo
 = 0;

1016 
	`±hªad_exô
( 0 );

1017  
NULL
 ;

1018 
	}
}

1020 * 
	$ThªadComProc
–* 
pP¨am
 )

1025 if–!
pP¨am
 )

1027 
	`Q_ASSERT
–
FALSE
 ) ;

1028  
NULL
 ;

1033 
	`AfxA¶ìp
( 1000 );

1035 
PBUS_LINEST
 
pBus
 = ( PBUS_LINEST )
pP¨am
 ;

1036 
CGlobÆ
 * 
pGlobÆ
 = 
	`AfxGëGlobÆ
() ;

1037 if–!
pGlobÆ
 || !
pBus
 || !pBus->
pThªadProc


1038 || !
pBus
->
pThªadProc
->
pMsg
 )

1040 
	`Q_ASSERT
–
FALSE
 );

1041  
NULL
 ;

1044 
CMsg
 * 
pMsg
 = 
pBus
->
pThªadProc
->pMsg ;

1045 
CPrŸocﬁ
 * 
pBusPrŸo
 = 
pBus
->
pPrŸo
 ;

1046 
CComP‹t
 * 
pComP‹t
 = 
pBus
->
pPr›îty
->pComPort ;

1047 if–!
pBusPrŸo
 ||!
pMsg
 || !pMsg->
	`IsMsgQueue
() )

1049 
	`±hªad_exô
( 0 );

1050  
NULL
 ;

1053 if–!
pComP‹t
 )

1055 
	`±hªad_exô
( 0 );

1056  
NULL
 ;

1059  
pGlobÆ
->
	`GëThªadRunFœg
() )

1062 if–!
pMsg
->
	`IsMsgQueue
() )

1065 
LMSG
 
RMsg
 ;

1066 if–
pMsg
->
	`RecvMsg
–&
RMsg
 ) )

1068 
PSMSG
 
pMsg
 = ( PSMSG )
RMsg
.
pVoid
 ;

1069 if–!
pMsg
 )

1071 
	`¶ìp
( 1 ) ;

1075 
	`AfxComP‹tS≥cify
–
pMsg
 ) ;

1077 if–
pMsg
 )

1079 
dñëe
 
pMsg
 ;

1080 
pMsg
 = 
NULL
 ;

1084 
	`AfxComP‹tPro˚ss
–
pBus
 ) ;

1085 
	`AfxA¶ìp
( 10 );

1088 
	`±hªad_exô
( 0 );

1089  
NULL
 ;

1090 
	}
}

1092 
BOOL
 
	$AfxComP‹tS≥cify
–
PSMSG
 
pMsg
 )

1094 if–!
pMsg
 )

1096 
	`Q_ASSERT
–
FALSE
 ) ;

1097  
FALSE
 ;

1100 if–
pMsg
->
msgCu°omTy≥
 =
SMSG
::
MSG_YK
)

1102 
	`AfxPro˚ssYk
––
PYKST_MSG
 )
pMsg
 );

1104  
TRUE
 ;

1105 
	}
}

1107 
BOOL
 
	$AfxPro˚ssYk
–
PYKST_MSG
 
pYk_msg
 )

1109 
PYKST_MSG
 
pYkmsg
 = 
pYk_msg
 ;

1110 if–!
pYkmsg
 )

1112 
	`Q_ASSERT
–
FALSE
 );

1113  
FALSE
 ;

1116 
PBUS_LINEST
 
pBus
 = 
	`AfxGëBus
–
pYkmsg
->
wBusNoDe°
 ) ;

1117 if–!
pBus
 )

1119 
	`Q_ASSERT
–
FALSE
 ) ;

1120  
FALSE
 ;

1123 
	`AfxComP‹tPro˚ss
–
pBus
 , 
pYkmsg
 ) ;

1124  
TRUE
 ;

1125 
	}
}

1130 
BOOL
 
	$AfxComP‹tPro˚ss
–
PBUS_LINEST
 
pBus
 , 
PSMSG
 
pMsg
)

1132 if–!
pBus
 )

1134 
	`Q_ASSERT
–
FALSE
 ) ;

1135  
FALSE
 ;

1137 
	`AfxSëBusTønsClõ¡Sèã
–
pBus
 );

1138 
CPrŸocﬁ
 * 
pBusPrŸo
 = 
pBus
->
pPrŸo
 ;

1139 
CComP‹t
 * 
pComP‹t
 = 
pBus
->
pPr›îty
->pComPort ;

1140 if–!
pBusPrŸo
 || !
pComP‹t
 || !pComP‹t->
	`IsP‹tVÆid
() )

1141  
FALSE
 ;

1143 
WORD
 
wI¡îvÆ
 = 
pBus
->wInterval ;

1144 
CPrŸocﬁ
 * 
pPrŸo
 = 
NULL
 ;

1145 if–!
pMsg
 )

1146 
pPrŸo
 = 
	`AfxGëDevPrŸo
–
pBusPrŸo
 ) ;

1148 
pPrŸo
 = 
	`AfxGëS≥cifyPrŸo
–
pMsg
 ) ;

1150 if–!
pPrŸo
 )

1151  
FALSE
 ;

1152 
BYTE
 
buf
[ 
CGlobÆ
::
BUFFERSIZE
 ];

1153 
	`mem£t
–
buf
 , 0 ,( buf ) );

1154 
Àn
 = 0 ;

1155 
BYTE
 
byRe£rved
 = 0 ;

1156 
BOOL
 
bFœg
 = 
pPrŸo
->
	`GëRódBuf
–
buf
 , 
Àn
 , 
byRe£rved
 , 
pMsg
 ) ;

1157 
	`AfxDi•œyMsg
–
pBus
->
wBusNo
 ,
pPrŸo
->
m_wAddr
 , 
CGlobÆ
::
SEND_MSG
 , 
buf
 , 
Àn
 ) ;

1159 if–
bFœg
 )

1161 if–
pComP‹t
->
	`WrôeP‹t
–
buf
 , 
Àn
 ) )

1163 if–
pBus
->
dwSídNo
 >= 100000 )

1164 
pBus
->
dwSídNo
 = 0 ;

1166 
pBus
->
dwSídNo
++ ;

1170 
	`AfxA¶ìp
–
wI¡îvÆ
 );

1171 
	`mem£t
(
buf
,0,(buf));

1172 
iRecvLí
 = 
pComP‹t
->
	`AsyRódD©a
–
buf
 , ( buf ) ) ;

1173 if–!
iRecvLí
 )

1176  
FALSE
 ;

1179 if–
pBus
->
dwRecvNo
 >= 100000 )

1180 
pBus
->
dwRecvNo
 = 0 ;

1182 
pBus
->
dwRecvNo
++ ;

1184 
bFœg
 = 
pPrŸo
->
	`Pro˚ssBuf
–
buf
 , 
iRecvLí
 , 
byRe£rved
 , 
pMsg
 ) ;

1185 
	`AfxDi•œyMsg
–
pBus
->
wBusNo
 ,
pPrŸo
->
m_wAddr
 , 
CGlobÆ
::
RECV_MSG
 , 
buf
 , 
iRecvLí
 ) ;

1187 if–!
bFœg
 )

1189 
iLí
 = 
pPrŸo
->
	`GëEº‹Msg
–
buf
 , ( buf ) ) ;

1190 if–
iLí
 )

1191 
	`AfxDi•œyMsg
–
pBus
->
wBusNo
 ,
pPrŸo
->
m_wAddr
 , 
CGlobÆ
::
ERROR_MSG
 , 
buf
 , 
iLí
 );

1194  
TRUE
 ;

1195 
	}
}

1197 
CPrŸocﬁ
 * 
	$AfxGëS≥cifyPrŸo
–
PSMSG
 
_pMsg
 )

1199 
PSMSG
 
pMsg
 = 
_pMsg
 ;

1200 if–!
pMsg
 )

1202 
	`Q_ASSERT
–
FALSE
 ) ;

1203  
NULL
;

1206 
PYKST_MSG
 
pYkmsg
 = 
NULL
 ;

1207 if–
pMsg
->
msgCu°omTy≥
 =
SMSG
::
MSG_YK
)

1208 
pYkmsg
 = ( 
PYKST_MSG
 )
pMsg
 ;

1210 if–!
pYkmsg
 )

1212 
	`Q_ASSERT
–
FALSE
 );

1213  
NULL
 ;

1216 
PBUS_LINEST
 
pBus
 = 
	`AfxGëBus
–
pYkmsg
->
wBusNoDe°
 ) ;

1217 if–!
pBus
 )

1219 
	`Q_ASSERT
–
FALSE
 ) ;

1220  
NULL
 ;

1223 if–!
pBus
->
pPrŸo
 )

1224  
NULL
 ;

1226 
size
 = 
pBus
->
pPrŸo
->
m_PrŸoModuÀ
.
	`size
() ;

1227  
i
 = 0 ; i < 
size
 ; i++ )

1229 
CPrŸocﬁ
 * 
pPrŸo
 = 
pBus
->pPrŸo->
m_PrŸoModuÀ
[ 
i
 ] ;

1230 if–!
pPrŸo
 )

1231  
NULL
 ;

1233 if–
pPrŸo
->
	`GëPrŸoAddr
(Ë=
pYkmsg
->
wAddrDe°
 )

1234  
pPrŸo
 ;

1237  
NULL
 ;

1238 
	}
}

1241 
	$AfxDi•œyMsg
–
WORD
 
wBusNo
 , WORD 
wAddr
 , 
BYTE
 
byTy≥
 , BYTE * 
pBuf
 , 
Àn
 )

1243 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
();

1244 if–
byIndex
 !
Widgë
::
PAGE_DIOGNOSTIC
 )

1247 
CPage
 * 
pPage
 = 
	`AfxGëCurPagePoöãr
() ;

1248 if–!
pPage
 )

1250 
	`Q_ASSERT
–
FALSE
 );

1254 
CPage_Dügno°ic
 *
pPageDügno°ic
 = ( CPage_Dügno°i¯* )
pPage
 ;

1256 
pPageDügno°ic
->
	`Di•œyMsg
–
wBusNo
 , 
wAddr
 , 
byTy≥
 , 
pBuf
 , 
Àn
 ) ;

1259 
	}
}

1261 
CPrŸocﬁ
 * 
	$AfxGëDevPrŸo
–
CPrŸocﬁ
 *
pBusPrŸo
 )

1263 if–!
pBusPrŸo
 )

1265 
	`Q_ASSERT
–
FALSE
 );

1266  
NULL
 ;

1269 
BYTE
 
byPrŸoTy≥
 = 
pBusPrŸo
->
	`GëPrŸoTy≥
();

1270 if–
byPrŸoTy≥
 =
BUS_PAUSE
 )

1271  
NULL
 ;

1274 
size
 = 
pBusPrŸo
->
m_PrŸoModuÀ
.
	`size
() ;

1275 if––
byPrŸoTy≥
 =
BUS_TRANS
 && 
size
 > 1 ) || !size )

1276  
NULL
 ;

1278 
WORD
 
wCúcuœãCou¡î
 = 
pBusPrŸo
->
m_cúcuœãCou¡î
 ;

1279 if–
wCúcuœãCou¡î
 >
size
 )

1280 
wCúcuœãCou¡î
 = 0 ;

1282 
CPrŸocﬁ
 * 
pPrŸo
 = 
NULL
 ;

1283 
pPrŸo
 = 
pBusPrŸo
->
m_PrŸoModuÀ
[ 
wCúcuœãCou¡î
 ] ;

1285 
wCúcuœãCou¡î
++ ;

1286 
pBusPrŸo
->
m_cúcuœãCou¡î
 = 
wCúcuœãCou¡î
 ;

1287  
pPrŸo
 ;

1288 
	}
}

1290 
BOOL
 
	$AfxRódPwd
( )

1292 
fd
 = 0;

1293 
byãs_ªad
 = 0 ;

1294 
buf„r
[ 64 ] = "";

1296 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

1298 i‡–(
fd
 = 
	`›í
(
tmpGlobÆ
->
U§PwdP©h
, 
O_RDWR
 | 
O_CREAT
, 
S_IRUSR
 | 
S_IWUSR
)) == -1 )

1300 
	`Ârötf
(
°dîr
, "AfxRódPwd O≥¿%†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
U§PwdP©h
, 
	`°ªº‹
(
î∫o
));

1301  
FALSE
;

1303 if–(
byãs_ªad
 = 
	`ªad
(
fd
, 
buf„r
, (buffer))) == -1 )

1305 
	`Ârötf
(
°dîr
, "AfxRódPwd Ród %†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
U§PwdP©h
, 
	`°ªº‹
(
î∫o
));

1306 
	`˛o£
(
fd
);

1307  
FALSE
;

1311 
	`mem£t
–&
tmpGlobÆ
->
CuºítU§Pwd
 , 0 , (
USRPWD
) );

1312 if–
byãs_ªad
 == 0 )

1314 
	`mem˝y
–&
tmpGlobÆ
->
CuºítU§Pwd
 , &tmpGlobÆ->
DeÁu…U§Pwd
 ,(
USRPWD
) );

1315 if–0 < 
	`wrôe
–
fd
 , &
tmpGlobÆ
->
DeÁu…U§Pwd
 , (
USRPWD
)) )

1317 
	`Ârötf
(
°dîr
, "AfxRódPwd Wrôê%†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
U§PwdP©h
, 
	`°ªº‹
(
î∫o
));

1318 
	`˛o£
(
fd
);

1319  
FALSE
;

1324 
	`mem˝y
–&
tmpGlobÆ
->
CuºítU§Pwd
 , 
buf„r
 , –
USRPWD
 ) );

1327 
	`˛o£
(
fd
);

1328  
TRUE
;

1329 
	}
}

1331 
BOOL
 
	$AfxWrôePwd
–
PUSRPWD
 
Vevi£Pwd
 )

1333 
fd
 = 0;

1334 
byãs_wrôe
 = 0 ;

1337 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

1340 i‡–(
fd
 = 
	`›í
(
tmpGlobÆ
->
U§PwdP©h
, 
O_RDWR
 | 
O_CREAT
, 
S_IRUSR
 | 
S_IWUSR
)) == -1 )

1342 
	`Ârötf
(
°dîr
, "AfxWrôePwd O≥¿%†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
U§PwdP©h
, 
	`°ªº‹
(
î∫o
));

1343  
FALSE
;

1345 if–(
byãs_wrôe
 = 
	`wrôe
(
fd
, 
Vevi£Pwd
, (
USRPWD
))) == -1 )

1347 
	`Ârötf
(
°dîr
, "AfxWrôePwd wrôê%†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
U§PwdP©h
, 
	`°ªº‹
(
î∫o
));

1348 
	`˛o£
(
fd
);

1349  
FALSE
;

1351 if–
byãs_wrôe
 > 0 )

1353 
	`Ârötf
(
°dîr
, "AfxWrôePwd wrôê%†su˚ss\n", 
tmpGlobÆ
->
U§PwdP©h
);

1355 
	`mem£t
–&
tmpGlobÆ
->
CuºítU§Pwd
 , 0 , (
USRPWD
) );

1356 
	`mem˝y
–&
tmpGlobÆ
->
CuºítU§Pwd
 , 
Vevi£Pwd
 ,(
USRPWD
) );

1357 
	`˛o£
(
fd
);

1358  
TRUE
;

1359 
	}
}

1361 
BOOL
 
	$AfxRe£tPwd
( )

1363 
USRPWD
 
Re£tU§Pwd
;

1364 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

1365 
	`mem£t
–&
Re£tU§Pwd
 , 0 , (
USRPWD
) );

1366 
	`mem˝y
–&
Re£tU§Pwd
 , &
tmpGlobÆ
->
DeÁu…U§Pwd
 , (
USRPWD
) );

1367 
	`AfxWrôePwd
–&
Re£tU§Pwd
 );

1368  
TRUE
;

1369 
	}
}

1371 
BOOL
 
	$AfxRódNëP¨amFûe
( )

1373 
fd
 = 0;

1374 
byãs_ªad
 = 0 ;

1375 
buf„r
[ 128 ] = "";

1378 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

1380 i‡–(
fd
 = 
	`›í
(
tmpGlobÆ
->
NëP¨amP©h
, 
O_RDWR
 | 
O_CREAT
, 
S_IRUSR
 | 
S_IWUSR
)) == -1 )

1382 
	`Ârötf
(
°dîr
, "AfxRódNëP¨amFûêO≥¿%†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
NëP¨amP©h
, 
	`°ªº‹
(
î∫o
));

1383 
	`mem£t
(&
tmpGlobÆ
->
CuºítNëP¨am
, 0 , (
NETPARAM
));

1384 
	`mem˝y
(&
tmpGlobÆ
->
CuºítNëP¨am
 , &tmpGlobÆ->
DeÁu…NëP¨am
 , (
NETPARAM
));

1385 
	`˛o£
(
fd
);

1386 if(
	`AfxWrôeNëP¨amFûe
(&
tmpGlobÆ
->
DeÁu…NëP¨am
))

1387 
	`AfxSëNëP¨am
(&
tmpGlobÆ
->
CuºítNëP¨am
);

1388  
FALSE
;

1390 if–(
byãs_ªad
 = 
	`ªad
(
fd
, 
buf„r
, (buffer))) == -1 )

1392 
	`Ârötf
(
°dîr
, "AfxRódNëP¨amFûêRód %†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
NëP¨amP©h
, 
	`°ªº‹
(
î∫o
));

1393 
	`mem£t
(&
tmpGlobÆ
->
CuºítNëP¨am
, 0 , (
NETPARAM
));

1394 
	`mem˝y
(&
tmpGlobÆ
->
CuºítNëP¨am
 , &tmpGlobÆ->
DeÁu…NëP¨am
 , (
NETPARAM
));

1395 
	`˛o£
(
fd
);

1396 if(
	`AfxWrôeNëP¨amFûe
(&
tmpGlobÆ
->
DeÁu…NëP¨am
))

1397 
	`AfxSëNëP¨am
(&
tmpGlobÆ
->
CuºítNëP¨am
);

1398  
FALSE
;

1402 
Àn
 = (
NETPARAM
);

1403 if–
byãs_ªad
 =0 || byãs_ªad !
Àn
 )

1405 
	`Ârötf
(
°dîr
, "AfxRódNëP¨amFûêRódÜí %†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
NëP¨amP©h
, 
	`°ªº‹
(
î∫o
));

1406 
	`mem£t
(&
tmpGlobÆ
->
CuºítNëP¨am
, 0 , (
NETPARAM
));

1407 
	`mem˝y
(&
tmpGlobÆ
->
CuºítNëP¨am
 , &tmpGlobÆ->
DeÁu…NëP¨am
 , (
NETPARAM
));

1408 
	`˛o£
(
fd
);

1409 if(
	`AfxWrôeNëP¨amFûe
(&
tmpGlobÆ
->
DeÁu…NëP¨am
))

1410 
	`AfxSëNëP¨am
(&
tmpGlobÆ
->
CuºítNëP¨am
);

1411  
FALSE
;

1415 
	`Ârötf
(
°dîr
, "AfxRódNëP¨amFûê %†su˚ss%s\n", 
tmpGlobÆ
->
NëP¨amP©h
, 
	`°ªº‹
(
î∫o
));

1416 
	`mem£t
–&
tmpGlobÆ
->
CuºítNëP¨am
 , 0 , (
NETPARAM
) );

1417 
	`mem˝y
–&
tmpGlobÆ
->
CuºítNëP¨am
 , 
buf„r
 , –
NETPARAM
 ) );

1418 
	`AfxSëNëP¨am
(&
tmpGlobÆ
->
CuºítNëP¨am
);

1421 
	`˛o£
(
fd
);

1422  
TRUE
;

1423 
	}
}

1425 
BOOL
 
	$AfxWrôeNëP¨amFûe
–
PNETPARAM
 
Vevi£NëP¨am
 )

1427 
fd
 = 0;

1428 
byãs_wrôe
 = 0 ;

1430 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

1433 i‡–(
fd
 = 
	`›í
(
tmpGlobÆ
->
NëP¨amP©h
, 
O_RDWR
 | 
O_CREAT
, 
S_IRUSR
 | 
S_IWUSR
)) == -1 )

1435 
	`Ârötf
(
°dîr
, "AfxWrôeNëP¨amFûêO≥¿%†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
NëP¨amP©h
, 
	`°ªº‹
(
î∫o
));

1436  
FALSE
;

1438 if–(
byãs_wrôe
 = 
	`wrôe
(
fd
, 
Vevi£NëP¨am
, (
NETPARAM
))) == -1 )

1440 
	`Ârötf
(
°dîr
, "AfxWrôeNëP¨amFûêwrôê%†Eº‹Ôºö%s\n", 
tmpGlobÆ
->
NëP¨amP©h
, 
	`°ªº‹
(
î∫o
));

1441 
	`˛o£
(
fd
);

1442  
FALSE
;

1444 if–
byãs_wrôe
 > 0 )

1446 
	`Ârötf
(
°dîr
, "AfxWrôeNëP¨amFûêwrôê%†su˚ss\n", 
tmpGlobÆ
->
NëP¨amP©h
);

1448 
	`mem£t
–&
tmpGlobÆ
->
CuºítNëP¨am
 , 0 , (
NETPARAM
) );

1449 
	`mem˝y
–&
tmpGlobÆ
->
CuºítNëP¨am
 , 
Vevi£NëP¨am
 ,(
NETPARAM
) );

1450 
	`˛o£
(
fd
);

1451  
TRUE
;

1452 
	}
}

1454 
BOOL
 
	$AfxWrôeLoˇlDns
 ( *
pDns
 )

1456 
FILE
 *
Â
 = 
NULL
;

1457 
Rä
 = 0;

1459 
Â
 = 
	`f›í
–
	`AfxGëGlobÆ
()->
SysDnsP©h
, "w");

1460 if(
Â
 =
NULL
)

1462  
FALSE
;

1465 
Rä
 = 
	`fwrôe
(
pDns
, 
	`°æí
’Dns), 1, 
Â
);

1467 
	`f˛o£
(
Â
);

1468  
Rä
;

1469 
	}
}

1471 
BOOL
 
	$AfxSëNëP¨am
 ( 
PNETPARAM
 
Vevi£NëP¨am
 )

1474 
buf
[ 300 ] = { 0 } ;

1475 
	`•rötf
–
buf
 , "ifconfigÉth0 %sÇetmask %s",

1476 
Vevi£NëP¨am
->
ù
,

1477 
Vevi£NëP¨am
->
mask
);

1478 
	`sy°em
(
buf
);

1480 
	`mem£t
(
buf
 , 0 , (buf));

1482 
	`•rötf
(
buf
, "route del default");

1484 
	`sy°em
(
buf
);

1485 
	`Ârötf
(
°dîr
, "AfxSëNëP¨am dñÑouã Ôºöî∫ÿ%s\n", 
	`°ªº‹
(
î∫o
));

1486 
	`¥ötf
("bu‡%s\n",
buf
);

1487 
	`mem£t
(
buf
 , 0 , (buf));

1489 
	`•rötf
(
buf
, "routeádd default gw %s",

1490 
Vevi£NëP¨am
->
g©eway
);

1491 
	`sy°em
(
buf
);

1492 
	`¥ötf
("bu‡%s\n",
buf
);

1494 if(
FALSE
 =
	`AfxWrôeLoˇlDns
–
Vevi£NëP¨am
->
dns
 ) )

1496 
	`¥ötf
(" WriteDns false \n");

1498  
TRUE
;

1499 
	}
}

1501 
QBUS_ARRAY
 * 
	$AfxGëBusAºay
()

1503 
Widgë
 * 
pWidgë
 = 
	`AfxGëWidgë
() ;

1504 if–!
pWidgë
 )

1506 
	`Q_ASSERT
–
FALSE
 ) ;

1507  
NULL
 ;

1510  &
pWidgë
->
m_busAºay
 ;

1511 
	}
}

1513 
PBUS_LINEST
 
	$AfxGëBus
–
WORD
 
wBusNo
 )

1515 
QBUS_ARRAY
 * 
pBusAºay
 = 
	`AfxGëBusAºay
() ;

1516 if–!
pBusAºay
 )

1518 
	`Q_ASSERT
–
FALSE
 ) ;

1519  
NULL
 ;

1522 
size
 = 
pBusAºay
->
	`size
() ;

1523 if–!
size
 )

1525 
	`Q_ASSERT
–
FALSE
 ) ;

1526  
NULL
 ;

1529 
QBUS_ARRAY
::
ôî©‹
 
ô‹
 = 
pBusAºay
->
	`föd
–
wBusNo
 ) ;

1530 if–
ô‹
 =
pBusAºay
->
	`íd
() )

1531  
NULL
 ;

1533  
ô‹
.
	`vÆue
() ;

1534 
	}
}

1536 
PDEVST
 
	$AfxGëDev
–
WORD
 
wBusNo
 , WORD 
wAddr
 )

1538 
PBUS_LINEST
 
pBus
 = 
	`AfxGëBus
–
wBusNo
 ) ;

1539 if–!
pBus
 )

1541 
	`Q_ASSERT
–
FALSE
 ) ;

1542  
NULL
 ;

1545 
size
 = 
pBus
->
DevAºay
.
	`size
() ;

1546 if–!
size
 )

1548 
	`Q_ASSERT
–
FALSE
 ) ;

1549  
NULL
 ;

1552 
QDEV_ARRAY
::
ôî©‹
 
ô‹
 = 
pBus
->
DevAºay
.
	`föd
–
wAddr
 ) ;

1553 if–
ô‹
 =
pBus
->
DevAºay
.
	`íd
() )

1554  
NULL
 ;

1556  
ô‹
.
	`vÆue
() ;

1557 
	}
}

1559 
PD©aTy≥
 
	$AfxGëD©a
–
BYTE
 
byD©aTy≥
 , 
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 )

1561 if–
byD©aTy≥
 !
D©aTy≥
::
YC_DTYPE
 &&

1562 
byD©aTy≥
 !
D©aTy≥
::
YX_DTYPE
 &&

1563 
byD©aTy≥
 !
D©aTy≥
::
YM_DTYPE
 &&

1564 
byD©aTy≥
 !
D©aTy≥
::
YK_DTYPE


1566  
NULL
 ;

1568 
PDEVST
 
pDev
 = 
	`AfxGëDev
–
wBusNo
 , 
wAddr
 ) ;

1569 if–!
pDev
 )

1571 
	`Q_ASSERT
–
FALSE
 ) ;

1572  
NULL
 ;

1575 
PD©aTy≥
 
pD©a
 = 
NULL
 ;

1576 if–
byD©aTy≥
 =
D©aTy≥
::
YC_DTYPE
 )

1577 
pD©a
 = 
AfxGëD©a
< 
YCST
 >–&
pDev
->
ycAºay
 , 
wP¡
 ) ;

1578 if–
byD©aTy≥
 =
D©aTy≥
::
YX_DTYPE
 )

1579 
pD©a
 = 
AfxGëD©a
< 
YXST
 >–&
pDev
->
yxAºay
 , 
wP¡
 ) ;

1580 if–
byD©aTy≥
 =
D©aTy≥
::
YM_DTYPE
 )

1581 
pD©a
 = 
AfxGëD©a
< 
YMST
 >–&
pDev
->
ymAºay
 , 
wP¡
 ) ;

1582 if–
byD©aTy≥
 =
D©aTy≥
::
YK_DTYPE
)

1583 
pD©a
 = 
AfxGëD©a
< 
YKST
 >–&
pDev
->
ykAºay
 , 
wP¡
 ) ;

1586 
	`Q_ASSERT
–
FALSE
 ) ;

1587  
NULL
 ;

1590  
pD©a
 ;

1591 
	}
}

1593 
	gãm∂©e
< 
˛ass
 
	gDTYPE
 >

1594 
DTYPE
 * 
	$AfxGëD©a
–
QDEV_DATA_ARRAY
 * 
pAºay
 , 
WORD
 
wP¡
 )

1596 if–!
pAºay
 )

1597  
NULL
 ;

1599 
size
 = 
pAºay
->
	`size
() ;

1600 if–!
size
 || 
wP¡
 >–
WORD
 )size )

1602 
	`¥ötf
("size=%d,wP¡=%d\n",
size
,
wP¡
);

1603 
	`Q_ASSERT
–
FALSE
 ) ;

1604  
NULL
 ;

1607 
DTYPE
 * 
pEÀ
 = ( DTYPE *)(*
pAºay
)[ 
wP¡
 ] ;

1608 if–!
pEÀ
 )

1610 
	`Q_ASSERT
–
FALSE
 );

1611  
NULL
 ;

1613  
pEÀ
 ;

1614 
	}
}

1616 
PYCST
 
	$AfxGëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 )

1618  ( 
PYCST
 )
	`AfxGëD©a
–
D©aTy≥
::
YC_DTYPE
 , 
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

1619 
	}
}

1621 
PYXST
 
	$AfxGëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 )

1623  ( 
PYXST
 )
	`AfxGëD©a
–
D©aTy≥
::
YX_DTYPE
 , 
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

1624 
	}
}

1626 
PYMST
 
	$AfxGëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 )

1628  ( 
PYMST
 )
	`AfxGëD©a
–
D©aTy≥
::
YM_DTYPE
 , 
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

1629 
	}
}

1632 
PYKST
 
	$AfxGëYk
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 )

1634  ( 
PYKST
 )
	`AfxGëD©a
–
D©aTy≥
::
YK_DTYPE
 , 
wBusNo
 ,
wAddr
 , 
wP¡
 ) ;

1635 
	}
}

1637 
BOOL
 
	$AfxGëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , &
fVÆ
 )

1639 
PYCST
 
pYcSt
 = 
	`AfxGëYc
–
wBusNo
 , 
wAddr
 , 
wP¡
 );

1640 if–!
pYcSt
 )

1642 
	`Q_ASSERT
–
FALSE
 );

1643  
FALSE
 ;

1646 
fVÆ
 = 
pYcSt
->
fVÆ_1Time
 ;

1647  
TRUE
 ;

1648 
	}
}

1650 
BOOL
 
	$AfxGëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 &
byVÆ
 )

1652 
PYXST
 
pYxSt
 = 
	`AfxGëYx
–
wBusNo
 , 
wAddr
 , 
wP¡
 );

1653 if–!
pYxSt
 )

1655 
	`Q_ASSERT
–
FALSE
 );

1656  
FALSE
 ;

1659 
byVÆ
 = 
pYxSt
->
byVÆue
 ;

1660  
TRUE
 ;

1661 
	}
}

1663 
BOOL
 
	$AfxGëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , &
dVÆ
 )

1665 
PYMST
 
pYmSt
 = 
	`AfxGëYm
–
wBusNo
 , 
wAddr
 , 
wP¡
 );

1666 if–!
pYmSt
 )

1668 
	`Q_ASSERT
–
FALSE
 );

1669  
FALSE
 ;

1672 
dVÆ
 = 
pYmSt
->
dVÆ_1Time
 ;

1673  
TRUE
 ;

1674 
	}
}

1676 
BOOL
 
	$AfxSëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
fVÆ
 )

1678 
PYCST
 
pYc
 = 
	`AfxGëYc
–
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

1679 if–
pYc
 )

1681 if–
	`Ábs
–
pYc
->
fVÆue
 - 
fVÆ
 ) >ÖYc->
fThv
 )

1683 
pYc
->
fVÆue
 = 
fVÆ
 ;

1684 
pYc
->
fVÆ_1Time
 =ÖYc->
fBa£VÆue
 +ÖYc->
fVÆue
 *ÖYc->
fC€fficõ¡
 ;

1688  
FALSE
 ;

1690  
TRUE
 ;

1691 
	}
}

1693 
BOOL
 
	$AfxSëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
byVÆ
 )

1695 
PYXST
 
pYx
 = 
	`AfxGëYx
–
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

1696 if–
pYx
 )

1698 if–
pYx
->
byRevî£
 )

1700  
byVÆ
 )

1703 if–
pYx
->
byVÆue
 != 1 )

1705 
pYx
->
byVÆue
 = 1 ;

1706 if–
pYx
->
byW¨n
 )

1708 if–
wBusNo
 != 14 )

1710 
	`In£πYxAœrmDba£
(
pYx
);

1711 
	`AfxGëGlobÆ
()->
	`EmôSig«l_YxAœrm
(
pYx
->
chName
,pYx->
byVÆue
);

1717 if–
pYx
->
byVÆue
 != 0 )

1719 
pYx
->
byVÆue
 = 0 ;

1720 if–
pYx
->
byW¨n
 )

1722 if–
wBusNo
 != 14 )

1724 
	`In£πYxAœrmDba£
(
pYx
);

1725 
	`AfxGëGlobÆ
()->
	`EmôSig«l_YxAœrm
(
pYx
->
chName
,pYx->
byVÆue
);

1731  
FALSE
;

1736 if–
pYx
->
byVÆue
 !
byVÆ
 )

1738 
pYx
->
byVÆue
 = 
byVÆ
 ;

1739 if–
pYx
->
byW¨n
 )

1741 if–
wBusNo
 != 14 )

1743 
	`In£πYxAœrmDba£
(
pYx
);

1744 
	`AfxGëGlobÆ
()->
	`EmôSig«l_YxAœrm
(
pYx
->
chName
,pYx->
byVÆue
);

1751  
FALSE
 ;

1752  
TRUE
 ;

1753 
	}
}

1755 
BOOL
 
	$AfxSëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 
dwVÆ
 )

1757 
PYMST
 
pYm
 = 
	`AfxGëYm
–
wBusNo
 , 
wAddr
 , 
wP¡
 ) ;

1758 if–
pYm
 )

1760 
pYm
->
dVÆ_1Time
 =ÖYm->
fBa£VÆue
 +ÖYm->
fC€fficõ¡
 * 
dwVÆ
 ;

1761 
pYm
->
dwVÆue
 = 
dwVÆ
 ;

1764  
FALSE
 ;

1766  
TRUE
 ;

1767 
	}
}

1769 
	$AfxGëCurNëP¨a
–
NETPARAM
 * 
pNëP¨am
 )

1771 if–!
pNëP¨am
 )

1773 
	`Q_ASSERT
–
FALSE
 ) ;

1777 
	`mem˝y
–
pNëP¨am
 , &
	`AfxGëGlobÆ
()->
CuºítNëP¨am
 ,–
NETPARAM
 ) );

1778 
	}
}

1780 c⁄° 
	gQCAB_ARRAY
 &
	$AfxGëCaböëAºay
( )

1782  
	`AfxGëWidgë
()->
m_ˇbAºay
 ;

1783 
	}
}

1785 c⁄° 
	gQSCIRCUIT_ARRAY
 &
	$AfxGëSCúcuôAºay
( )

1787  
	`AfxGëWidgë
()->
m_sCúcuôAºay
 ;

1788 
	}
}

1790 
PCABINET
 
	$AfxGëCaböë
–
WORD
 
wCabNo
 )

1792 c⁄° 
QCAB_ARRAY
 &
pCabAºay
 = 
	`AfxGëCaböëAºay
() ;

1793 
size
 = 
pCabAºay
.
	`size
() ;

1794 if–
wCabNo
 >
size
 )

1796 
	`Q_ASSERT
–
FALSE
 );

1797  
NULL
 ;

1800  
pCabAºay
[ 
wCabNo
 ] ;

1801 
	}
}

1803 
PSINGLECIRCUIT
 
	$AfxGëSögÀCúcuô
–
WORD
 
wCúcuôNo
 )

1805 c⁄° 
QSCIRCUIT_ARRAY
 
pAºay
 = 
	`AfxGëSCúcuôAºay
();

1806 
size
 = 
pAºay
.
	`size
() ;

1807 if–
wCúcuôNo
 >
size
 )

1809 
	`Q_ASSERT
–
FALSE
 ) ;

1810  
NULL
 ;

1813  
pAºay
[ 
wCúcuôNo
 ] ;

1814 
	}
}

1816 
PSINGLECIRCUIT
 
	$AfxGëCabSögÀCúcuô
–
WORD
 
wCab
 , WORD 
wCúcuôNo
 )

1818 c⁄° 
PCABINET
 
pCab
 = 
	`AfxGëCaböë
–
wCab
 ) ;

1819 if–!
pCab
 )

1821 
	`Q_ASSERT
–
FALSE
 ) ;

1822  
NULL
 ;

1825 c⁄° 
QSCIRCUIT_MAP_ITOR
 
ô‹
 = 
pCab
->
cúcuôAºay
.
	`föd
–
wCúcuôNo
 ) ;

1826 if–
ô‹
 =
pCab
->
cúcuôAºay
.
	`íd
() )

1828 
	`Q_ASSERT
–
FALSE
 ) ;

1829  
NULL
 ;

1832 if–
ô‹
.
	`key
–Ë!
wCúcuôNo
 )

1834 
	`Q_ASSERT
–
FALSE
 ) ;

1835  
NULL
 ;

1838  
ô‹
.
	`vÆue
( ) ;

1839 
	}
}

1841 c⁄° 
QDEV_DATA_ARRAY
* 
	$AfxGëCabCúcuôD©a
–
WORD
 
wCab
 , WORD 
wCúcuôNo
 , 
DATETYPE
 
byTy≥
 )

1843 if–
byTy≥
 !
D©aTy≥
::
YC_DTYPE
 &&

1844 
byTy≥
 !
D©aTy≥
::
YX_DTYPE
 &&

1845 
byTy≥
 !
D©aTy≥
::
YM_DTYPE
 )

1847 
	`Q_ASSERT
–
FALSE
 ) ;

1848  
NULL
 ;

1851 c⁄° 
PSINGLECIRCUIT
 
pCúcuô
 = 
	`AfxGëCabSögÀCúcuô
–
wCab
 ,
wCúcuôNo
 ) ;

1852 if–!
pCúcuô
 )

1854 
	`Q_ASSERT
–
FALSE
 );

1855  
NULL
 ;

1858 if–
byTy≥
 =
D©aTy≥
::
YC_DTYPE
 )

1859  &
pCúcuô
->
ycAºay
 ;

1860 if–
byTy≥
 =
D©aTy≥
::
YX_DTYPE
 )

1861  &
pCúcuô
->
yxAºay
 ;

1862 if–
byTy≥
 =
D©aTy≥
::
YM_DTYPE
 )

1863  &
pCúcuô
->
ymAºay
 ;

1866 
	`Q_ASSERT
–
FALSE
 ) ;

1867  
NULL
 ;

1870  
NULL
 ;

1871 
	}
}

1874 c⁄° 
QDEV_DATA_ARRAY
* 
	$AfxGëCúcuôD©a
–
WORD
 
wCúcuôNo
 , 
DATETYPE
 
byTy≥
 )

1876 if–
byTy≥
 !
D©aTy≥
::
YC_DTYPE
 &&

1877 
byTy≥
 !
D©aTy≥
::
YX_DTYPE
 &&

1878 
byTy≥
 !
D©aTy≥
::
YM_DTYPE
 )

1880 
	`Q_ASSERT
–
FALSE
 ) ;

1881  
NULL
 ;

1884 c⁄° 
PSINGLECIRCUIT
 
pCúcuô
 = 
	`AfxGëSögÀCúcuô
–
wCúcuôNo
 ) ;

1885 if–!
pCúcuô
 )

1887 
	`Q_ASSERT
–
FALSE
 );

1888  
NULL
 ;

1891 if–
byTy≥
 =
D©aTy≥
::
YC_DTYPE
 )

1892  &
pCúcuô
->
ycAºay
 ;

1893 if–
byTy≥
 =
D©aTy≥
::
YX_DTYPE
 )

1894  &
pCúcuô
->
yxAºay
 ;

1895 if–
byTy≥
 =
D©aTy≥
::
YM_DTYPE
 )

1896  &
pCúcuô
->
ymAºay
 ;

1899 
	`Q_ASSERT
–
FALSE
 ) ;

1900  
NULL
 ;

1903  
NULL
 ;

1904 
	}
}

1909 
BOOL
 
	$AfxSëBusCommSèã
–
WORD
 
wBusNo
 , WORD 
wSèã
 )

1911 if–
wSèã
 !
COMM_ABNORMAL
 && wSèã !
COMM_NOMAL
 )

1913 
	`Q_ASSERT
–
FALSE
 );

1914  
FALSE
;

1917 
QBUS_ARRAY
 * 
pBusAºay
 = 
	`AfxGëBusAºay
() ;

1918 if–!
pBusAºay
 )

1920 
	`Q_ASSERT
–
FALSE
 );

1921  
FALSE
 ;

1924 
size
 = 
pBusAºay
->
	`size
() ;

1925 if–
wBusNo
 >
size
 )

1927 
	`Q_ASSERT
–
FALSE
 );

1928  
FALSE
 ;

1931 
PBUS_LINEST
 
pBus
 = 
	`AfxGëBus
–
wBusNo
 ) ;

1932 if–!
pBus
 )

1934 
	`Q_ASSERT
–
FALSE
 );

1935  
FALSE
 ;

1938 
pBus
->
wBusCommSèã
 = 
wSèã
 ;

1939  
TRUE
 ;

1940 
	}
}

1942 
BOOL
 
	$AfxGëBusCommSèã
–
WORD
 
wBusNo
 , WORD &
wSèã
 )

1944 
QBUS_ARRAY
 * 
pBusAºay
 = 
	`AfxGëBusAºay
() ;

1945 if–!
pBusAºay
 )

1947 
	`Q_ASSERT
–
FALSE
 );

1948  
FALSE
 ;

1951 
size
 = 
pBusAºay
->
	`size
() ;

1952 if–
wBusNo
 >
size
 )

1954 
	`Q_ASSERT
–
FALSE
 );

1955  
FALSE
 ;

1958 
PBUS_LINEST
 
pBus
 = 
	`AfxGëBus
–
wBusNo
 ) ;

1959 if–!
pBus
 )

1961 
	`Q_ASSERT
–
FALSE
 );

1962  
FALSE
 ;

1965 
wSèã
 = 
pBus
->
wBusCommSèã
 ;

1967  
TRUE
 ;

1968 
	}
}

1971 
BOOL
 
	$AfxSëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wSèã
 )

1973 if–
wSèã
 !
COMM_ABNORMAL
 && wSèã !
COMM_NOMAL
 )

1975 
	`Q_ASSERT
–
FALSE
 ) ;

1976  
FALSE
 ;

1979 
PDEVST
 
pDev
 = 
	`AfxGëDev
–
wBusNo
 , 
wAddr
 ) ;

1980 if–!
pDev
 )

1982 
	`Q_ASSERT
–
FALSE
 );

1983  
FALSE
 ;

1986 
pDev
->
wDevSèã
 = 
wSèã
 ;

1987  
TRUE
 ;

1988 
	}
}

1990 
BOOL
 
	$AfxGëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD &
wSèã
 )

1992 
	`¥ötf
("#######################################\n");

1993 
PDEVST
 
pDev
 = 
	`AfxGëDev
–
wBusNo
 , 
wAddr
 ) ;

1994 if–!
pDev
 )

1996 
	`Q_ASSERT
–
FALSE
 );

1997  
FALSE
 ;

2000 
wSèã
 = 
pDev
->
wDevSèã
 ;

2001  
TRUE
 ;

2002 
	}
}

2005 
BOOL
 
	$AfxSígYK
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
nP¡
 , 
BYTE
 
byA˘i⁄
 , WORD 
wVÆ
 )

2007 if–
byA˘i⁄
 !
YK_PREPARE
 && byA˘i⁄ !
YK_PREPARE_RTN
 &&

2008 
byA˘i⁄
 !
YK_EXEC
 && byA˘i⁄ !
YK_EXEC_RTN
 )

2009  
FALSE
 ;

2013 
PYKST
 
pYk°
 = 
	`AfxGëYk
–
wBusNo
 , 
wAddr
 , 
nP¡
 ) ;

2014 if–!
pYk°
 )

2016 
	`Q_ASSERT
–
FALSE
 ) ;

2017  
FALSE
 ;

2020 
PBUS_LINEST
 
pBus
 = 
	`AfxGëBus
–
wBusNo
 ) ;

2022 if–!
pBus
->
pThªadProc
 || !pBus->pThªadProc->
pMsg
 )

2024 
	`Q_ASSERT
–
FALSE
 ) ;

2025  
FALSE
 ;

2028 
CMsg
 * 
pMsg
 = 
pBus
->
pThªadProc
->pMsg ;

2030 
PYKST_MSG
 
pYK
 = 
√w
 
YKST_MSG
 ;

2031 
pYK
->
byA˘i⁄
 = byAction ;

2033 
pYK
->
wBusNoDe°
 = 
wBusNo
 ;

2034 
pYK
->
wAddrDe°
 = 
wAddr
 ;

2035 
pYK
->
wP¡NoDe°
 = 
nP¡
 ;

2036 
pYK
->
wVÆ
 = wVal ;

2038 
	`AfxSídMsg
–
pMsg
 , 
pYK
 ) ;

2039  
TRUE
 ;

2040 
	}
}

2043 
BOOL
 
	$AfxSígYK
–
WORD
 
wBusNoDe°
 , WORD 
wAddrDe°
 , WORD 
nP¡De°
 ,

2044 
WORD
 
wBusNoSrc
 , WORD 
wAddrSrc
 , WORD 
nP¡Src
 ,

2045 
BYTE
 
byA˘i⁄
 , 
WORD
 
wVÆ
 )

2047 if–
byA˘i⁄
 !
YK_PREPARE
 && byA˘i⁄ !
YK_PREPARE_RTN
 &&

2048 
byA˘i⁄
 !
YK_EXEC
 && byA˘i⁄ !
YK_EXEC_RTN
 &&

2049 
byA˘i⁄
 !
YK_CANCEL
 && byA˘i⁄ !
YK_CANCEL_RTN
)

2050  
FALSE
 ;

2059 
CMsg
 * 
pMsg
 = 
NULL
;

2060 if–
wBusNoDe°
 == 14 )

2062 
DWORD
 
dwMsgty≥
 = 
CMsg
::
MSG_REAL_CHANNEL
 ;

2063 
PSTHREAD_PROC
 
pThªad
 = 
	`AfxGëThªadInfo
–
dwMsgty≥
 ) ;

2064 if–!
pThªad
 )

2066 
	`Q_ASSERT
–
FALSE
 ) ;

2067  
FALSE
 ;

2069 
pMsg
 = 
pThªad
->pMsg;

2073 
PBUS_LINEST
 
pBus
 = 
	`AfxGëBus
–
wBusNoDe°
 ) ;

2074 if–!
pBus
->
pThªadProc
 || !pBus->pThªadProc->
pMsg
 )

2076 
	`Q_ASSERT
–
FALSE
 ) ;

2077  
FALSE
 ;

2080 
pMsg
 = 
pBus
->
pThªadProc
->pMsg ;

2082 
PYKST_MSG
 
pYK
 = 
√w
 
YKST_MSG
 ;

2083 
pYK
->
byA˘i⁄
 = byAction ;

2085 
pYK
->
wBusNoDe°
 = wBusNoDest ;

2086 
pYK
->
wAddrDe°
 = wAddrDest ;

2087 
pYK
->
wP¡NoDe°
 = 
nP¡De°
 ;

2089 
pYK
->
wBusNoSrc
 = wBusNoSrc ;

2090 
pYK
->
wAddrSrc
 = wAddrSrc ;

2091 
pYK
->
wP¡NoSrc
 = 
nP¡Src
 ;

2093 
pYK
->
wVÆ
 = wVal ;

2094 
	`AfxSídMsg
–
pMsg
 , 
pYK
 ) ;

2095  
TRUE
 ;

2096 
	}
}

2098 
BOOL
 
	$AfxSëS€
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
byVÆ
 ,
REALTIME
 * 
pRólTime
)

2100 if–
NULL
 =
pRólTime
 )

2102  
FALSE
;

2106 
SOEDATA
 
d©a
;

2108 
d©a
.
BusNo
 = 
wBusNo
;

2109 
d©a
.
DevNo
 = 
wAddr
;

2110 
d©a
.
D©aTy≥
 = 1;

2113 
PYXST
 
pYx
 = 
	`AfxGëYx
–
wBusNo
, 
wAddr
, 
wP¡
 );

2114 if–
NULL
 =
pYx
 )

2116  
FALSE
;

2119 i‡–0 =
byVÆ
 )

2121 
	`•rötf
–
d©a
.
C⁄ã¡
,"%s:Âêà->ÂàÜ",
pYx
->
chName
);

2123 if–1 =
byVÆ
 )

2125 
	`•rötf
–
d©a
.
C⁄ã¡
,"%s:ÂàÜ->Âêà",
pYx
->
chName
);

2129  
FALSE
;

2132 
	`•rötf
–
d©a
.
D©eTime
,"%.2d-%.2d-%.2d %.2d:%.2d:%.2d",

2133 
pRólTime
->
wYór
,

2134 
pRólTime
->
wM⁄th
,

2135 
pRólTime
->
wDay
,

2136 
pRólTime
->
wHour
,

2137 
pRólTime
->
wMöuã
,

2138 
pRólTime
->
wSec⁄d


2142 
	`•rötf
–
d©a
.
Loˇti⁄
,"P%d,%d,%d", 
wBusNo
+1, 
wAddr
, 
wP¡
+1);

2144 
CDBa£M™agî
 *
pDBa£
 = 
	`AfxGëDBa£
();

2145 i‡–
NULL
 =
pDBa£
 )

2147 
	`¥ötf
("NULL ==ÖDBase\n");

2148  
FALSE
;

2150 
pDBa£
->
	`In£πD©a
((
SOEDATA
 *)&
d©a
);

2152  
TRUE
;

2153 
	}
}

2155 
BOOL
 
	$AfxSëBusTønsClõ¡Sèã
–
PBUS_LINEST
 
pBus
 )

2157 if–
pBus
->
byBusTy≥
 !
BUS_TRANS
 )

2158  
FALSE
;

2159 if–
pBus
->
pPr›îty
->
m_ComTy≥
 =pBus->pPr›îty->
LAN_SERVER
 )

2161 
DevSize
 = 
pBus
->
DevAºay
.
	`size
() ;

2162 if–
DevSize
 != 1 )

2164 
	`Q_ASSERT
–
FALSE
 ) ;

2165  
FALSE
 ;

2168 
QDEV_ARRAY
::
ôî©‹
 
Begö_ô‹
 = 
pBus
->
DevAºay
.
	`begö
() ;

2169 
PDEVST
 
tmpDev
 = 
Begö_ô‹
.
	`vÆue
() ;

2171 if–
pBus
->
pPr›îty
->
pComP‹t
->
	`IsP‹tVÆid
() ){

2173 
tmpDev
->
wDevSèã
 =
COMM_NOMAL
;

2177 
tmpDev
->
wDevSèã
 =
COMM_ABNORMAL
;

2180  
TRUE
;

2181 
	}
}

2183 
	$AfxGëProje˘Name
–
QSåög
 & 
°r
 )

2185 
°r
.
	`˛ór
();

2186 
°r
 = 
	`QSåög
("%1").
	`¨g
(
	`AfxGëWidgë
()->
m_°rProje˘Name
);

2187 
	}
}

2190 
	$…rim
(*
s
)

2192 *
p
 = 
s
;

2193 if–*
p
==' ' || *p=='\t' )

2195  *
p
==' ' || *p=='\t' )Ö++;

2196  (*
s
++ = *
p
++) );

2198 
	}
}

2201 
	$πrim
(*
s
)

2203 *
p
 = 
s
;

2204  *
p
 )Ö++;

2205 if–
p
 !
s
 )

2207 
p
--;

2208  *
p
==' ' || *p=='\t' || *p=='\r' || *p=='\n' )Ö--;

2209 *(++
p
) = 0;

2211 
	}
}

2219 
CDBa£M™agî
 *
	$AfxGëDBa£
()

2221 
Widgë
 *
pWigë
 = 
	`AfxGëWidgë
();

2222 if–
NULL
 =
pWigë
)

2224  
NULL
;

2227 
CDBa£M™agî
* 
pDBa£
 = 
pWigë
->
m_pDBa£
;

2228 if–
NULL
 =
pDBa£
)

2230  
NULL
;

2233  
pDBa£
->
m_pMoudÀ
;

2234 
	}
}

2237 
	$SˇnSîvîOnLöe
( )

2239 
size
 = 
	`AfxGëGlobÆ
()->
m_Ve˘‹T˝Clõ¡
.
	`size
() ;

2240 if–
size
 == 0 )

2243 
THREADPARA
 
ThªadP¨a
 ;

2244 
ThªadP¨a
.
hThªad
 = 
	`±hªad_¸óã
(&ThªadP¨a.
ThªadID
, 
NULL
, 
ThªadSˇnSevî
 , (*)&
	`AfxGëGlobÆ
()->
m_Ve˘‹T˝Clõ¡
 );

2245 if(
ThªadP¨a
.
ThªadID
<0)

2251 
	}
}

2253 * 
	$ThªadSˇnSevî
(*
pPrŸObj
 )

2255 
QVe˘‹
<
CComP‹t
*> *
pVe˘‹Sˇn
 = ( QVe˘‹<CComP‹à*>* )
pPrŸObj
 ;

2256 if–
pVe˘‹Sˇn
 =
NULL
 )

2257  
NULL
 ;

2259 
size
 = 
pVe˘‹Sˇn
->
	`size
() ;

2260 if–!
size
 )

2261  
NULL
 ;

2263 
CGlobÆ
 * 
pGlobÆ
 = 
	`AfxGëGlobÆ
() ;

2264 if–!
pGlobÆ
 )

2266 
	`Q_ASSERT
–
FALSE
 );

2267  
NULL
 ;

2270  
pGlobÆ
->
	`GëThªadRunFœg
() )

2272 
QVe˘‹
<
CComP‹t
 *>::
ôî©‹
 
ibegö
 = 
pVe˘‹Sˇn
->
	`begö
() ;

2273 
QVe˘‹
<
CComP‹t
 *>::
ôî©‹
 
õnd
 = 
pVe˘‹Sˇn
->
	`íd
();

2275  ; 
ibegö
 !
õnd
 ; ibegin++ )

2277 if––*
ibegö
 )->
	`IsP‹tVÆid
() )

2280 –*
ibegö
 )->
	`Clo£P‹t
() ;

2281 –*
ibegö
 )->
	`O≥nP‹t
() ;

2284 
	`AfxA¶ìp
( 1000 ) ;

2286 
	`¥ötf
( "Scan ClientÅhread hasÉxited!\n" ) ;

2287  
NULL
 ;

2288 
	}
}

2290 
	$m_Ve˘‹T˝Clõ¡Push_back
–
CComP‹t
 * 
pP‹t
 )

2292 
	`AfxGëGlobÆ
()->
m_Ve˘‹T˝Clõ¡
.
	`push_back
(
pP‹t
);

2293 
	}
}

2301 
	$AfxSëSèndby
–
BOOL
 
b°©e
 )

2303 
	`AfxGëGlobÆ
()->
	`SëSèndby
–
b°©e
 );

2304 
	}
}

2306 
BOOL
 
	$In£πYxAœrmDba£
–
PYXST
 
pYxD©a
 )

2309 i‡–
NULL
 =
pYxD©a
 )

2311  
FALSE
;

2314 
SOEDATA
 
d©a
;

2316 
d©a
.
BusNo
 = 
pYxD©a
->
wBusNo
;

2317 
d©a
.
DevNo
 = 
pYxD©a
->
wAddr
;

2318 
d©a
.
D©aTy≥
 = 
DBASE_YXALARM_DATATYPE
;

2321 
PYXST
 
pYx
 = 
pYxD©a
;

2327 i‡–0 =
pYxD©a
->
byVÆue
 )

2329 
	`•rötf
–
d©a
.
C⁄ã¡
,"%s:Âêà->ÂàÜ",
pYx
->
chName
);

2331 if–1 =
pYxD©a
->
byVÆue
 )

2333 
	`•rötf
–
d©a
.
C⁄ã¡
,"%s:ÂàÜ->Âêà",
pYx
->
chName
);

2337  
FALSE
;

2340 
REALTIME
 
tm
 ;

2341 
	`AfxGëSysTime
–&
tm
 ) ;

2343 
REALTIME
 *
pRólTime
 = &
tm
;

2345 
	`•rötf
–
d©a
.
D©eTime
,"%.2d-%.2d-%.2d %.2d:%.2d:%.2d",

2346 
pRólTime
->
wYór
,

2347 
pRólTime
->
wM⁄th
,

2348 
pRólTime
->
wDay
,

2349 
pRólTime
->
wHour
,

2350 
pRólTime
->
wMöuã
,

2351 
pRólTime
->
wSec⁄d


2355 
	`•rötf
–
d©a
.
Loˇti⁄
,"P%d,%d,%d", 
pYxD©a
->
wBusNo
+1,ÖYxD©a->
wAddr
,ÖYxD©a->
wP¡No
+1);

2357 
CDBa£M™agî
 *
pDBa£
 = 
	`AfxGëDBa£
();

2358 i‡–
NULL
 =
pDBa£
 )

2360 
	`¥ötf
("NULL ==ÖDBase\n");

2361  
FALSE
;

2363 
pDBa£
->
	`In£πD©a
((
SOEDATA
 *)&
d©a
);

2365  
TRUE
;

2366 
	}
}

	@cglobal.h

1 #i‚de‡
CGLOBAL_H


2 
	#CGLOBAL_H


	)

3 
	~<QObje˘
>

5 
	~<°dlib.h
>

6 
	~<löux/öput.h
>

7 
	~<sys/time.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<sys/°©.h
>

10 
	~"Ty≥def.h
"

11 
	~"widgë.h
"

12 
	~"°ru˘uª.h
"

15 
	#UTF8
–
°r
 ) 
QSåög
::
	`‰omUtf8
–°∏)

	)

16 
	#UTF8_LEN
–
°r
 , 
Àn
 ) 
QSåög
::
	`‰omUtf8
–°∏,Üí );

	)

18 
	#PASUE
 "PAUSE"

	)

19 
	#COMRS_485
 "COMRS485_"

	)

20 
	#LAN_TCP
 "TCP_"

	)

21 
	#LAN_TCP_CLIENT
 "TCPCLIENT_"

	)

23 
	#GPIO_GETMU
 
	`_IOWR
('G', 0x3A, )

	)

24 
	#GPIO_GETOS
 
	`_IOWR
('G', 0x3B, )

	)

25 
	#GPIO_GETBF
 
	`_IOWR
('G', 0x3C, )

	)

26 
	#GPIO_GETBU
 
	`_IOWR
('G', 0x3D, )

	)

27 
	#GPIO_GETMW
 
	`_IOWR
('G', 0x3E, )

	)

28 
	#GPIO_GETBW
 
	`_IOWR
('G', 0x3F, )

	)

30 
	#GPIN
 "/dev/gpö"

	)

31 
	#GPOUT
 "/dev/gpout"

	)

33 
	#GPIOON
 0

	)

34 
	#GPIOOFF
 1

	)

38 
˛ass
 
	gWidgë
 ;

39 
˛ass
 
	gCPage
 ;

40 
˛ass
 
	gCGlobÆ
 ;

42 
CPage
 * 
AfxGëS≥cifyPage
–
BYTE
 
byPageIndex
 ) ;

43 
BOOL
 
AfxSëMaöWidë
–
Widgë
 * 
pWidgë
 );

44 
Widgë
 * 
AfxGëWidgë
( );

45 
BYTE
 
AfxGëCurPageIndex
( );

46 
BOOL
 
AfxSëCurPageIndex
–
BYTE
 
byIndex
 );

47 
AfxRe‰eshS¸ìn
( );

48 
BOOL
 
AfxGëSysTime
–
PREALTIME
 
pTime
 );

49 
BOOL
 
AfxSëSysTime
(
REALTIME
 *
pRólTime
);

50 
QSåög
 
AfxF‹m©Så
–c⁄° * 
pSåög
 , ... );

51 
QSåög
 
AfxGëSysTimeSå
( );

52 
CGlobÆ
 * 
AfxGëGlobÆ
( ) ;

53 
AfxA¶ìp
–
DWORD
 
dwMûliSecd
 );

54 
BYTE
 
AfxGëLogöSèã
( );

55 
AfxSëLogöSèã
–
BYTE
 
byLogöSèã
 );

56 
AfxRe‰eshLogöSèã
( ) ;

57 
CPage
 * 
AfxGëCurPagePoöãr
( );

58 
BOOL
 
AfxSídMsg
–
CMsg
 * 
pMsg
 ,
LPVOID
 
pVoid
 );

59 
AfxUpd©eTimeoutTime
( );

61 
BOOL
 
AfxRódPwd
( );

62 
BOOL
 
AfxWrôePwd
–
PUSRPWD
 
Vevi£Pwd
 );

63 
BOOL
 
AfxRe£tPwd
( );

65 
BOOL
 
AfxRódNëP¨amFûe
( );

66 
BOOL
 
AfxWrôeNëP¨amFûe
–
PNETPARAM
 
Vevi£NëP¨am
 );

67 
BOOL
 
AfxSëNëP¨am
 ( 
PNETPARAM
 
Vevi£NëP¨am
 );

69 
QBUS_ARRAY
 * 
AfxGëBusAºay
() ;

70 
PBUS_LINEST
 
AfxGëBus
–
WORD
 
wBusNo
 );

71 
PDEVST
 
AfxGëDev
–
WORD
 
wBusNo
 , WORD 
wAddr
 ) ;

72 
PYCST
 
AfxGëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 ) ;

73 
PYXST
 
AfxGëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 ) ;

74 
PYMST
 
AfxGëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 ) ;

75 
	gãm∂©e
< 
˛ass
 
	gDTYPE
 >

76 
DTYPE
 * 
AfxGëD©a
–
QDEV_DATA_ARRAY
 * 
pAºay
 , 
WORD
 
wP¡
 );

77 
PD©aTy≥
 
AfxGëD©a
–
BYTE
 
byD©aTy≥
 , 
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 );

78 c⁄° 
	gQCAB_ARRAY
 &
AfxGëCaböëAºay
( ) ;

79 c⁄° 
	gQSCIRCUIT_ARRAY
 &
AfxGëSCúcuôAºay
( );

80 c⁄° 
QDEV_DATA_ARRAY
* 
AfxGëCúcuôD©a
–
WORD
 
wCúcuôNo
 , 
DATETYPE
 
byTy≥
 );

81 c⁄° 
QDEV_DATA_ARRAY
* 
AfxGëCabCúcuôD©a
–
WORD
 
wCab
 , WORD 
wCúcuôNo
 , 
DATETYPE
 
byTy≥
 ) ;

82 
PSINGLECIRCUIT
 
AfxGëCabSögÀCúcuô
–
WORD
 
wCab
 , WORD 
wCúcuôNo
 );

83 
PSINGLECIRCUIT
 
AfxGëSögÀCúcuô
–
WORD
 
wCúcuôNo
 );

84 
PCABINET
 
AfxGëCaböë
–
WORD
 
wCabNo
 );

85 
BOOL
 
AfxComP‹tPro˚ss
–
PBUS_LINEST
 
pBus
 , 
PSMSG
 
pMsg
 = 
NULL
 );

86 
CPrŸocﬁ
 * 
AfxGëDevPrŸo
–CPrŸocﬁ *
pBusPrŸo
 ) ;

87 
BOOL
 
AfxSëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
fVÆ
 );

88 
BOOL
 
AfxSëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
byVÆ
 );

89 
BOOL
 
AfxSëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
DWORD
 
dwVÆ
 );

90 
BOOL
 
AfxGëYc
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , &
fVÆ
 );

91 
BOOL
 
AfxGëYx
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 &
byVÆ
 );

92 
BOOL
 
AfxGëYm
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , &
dVÆ
 );

93 
BOOL
 
AfxSëBusCommSèã
–
WORD
 
wBusNo
 , WORD 
wSèã
 );

94 
BOOL
 
AfxGëBusCommSèã
–
WORD
 
wBusNo
 , WORD &
wSèã
 );

95 
BOOL
 
AfxSëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wSèã
 );

96 
BOOL
 
AfxGëDevCommSèã
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD &
wSèã
 );

97 
AfxDi•œyMsg
–
WORD
 
wBusNo
 , WORD 
wAddr
 , 
BYTE
 
byTy≥
 , BYTE * 
pBuf
 , 
Àn
 );

98 
PYKST
 
AfxGëYk
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 );

99 
BOOL
 
AfxSígYK
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
nP¡
 , 
BYTE
 
byA˘i⁄
 , WORD 
wVÆ
 );

100 
BOOL
 
AfxSígYK
–
WORD
 
wBusNoDe°
 , WORD 
wAddrDe°
 , WORD 
nP¡De°
 ,

101 
WORD
 
wBusNoSrc
 , WORD 
wAddrSrc
 , WORD 
nP¡Src
 ,

102 
BYTE
 
byA˘i⁄
 , 
WORD
 
wVÆ
 );

103 
BOOL
 
AfxSëS€
–
WORD
 
wBusNo
 , WORD 
wAddr
 , WORD 
wP¡
 , 
BYTE
 
byVÆ
 ,
REALTIME
 * 
pRólTime
);

104 
BOOL
 
AfxComP‹tS≥cify
–
PSMSG
 
pMsg
 );

105 
BOOL
 
AfxPro˚ssYk
–
PYKST_MSG
 
pYk_msg
 );

106 
CPrŸocﬁ
 * 
AfxGëS≥cifyPrŸo
–
PSMSG
 
_pMsg
 );

109 
BOOL
 
AfxRe‰eshHomePageTime
( );

112 
BOOL
 
AfxRe‰eshDügno°icPageBusAndDevSèã
( );

114 
BOOL
 
AfxSëBusTønsClõ¡Sèã
–
PBUS_LINEST
 
pBus
 );

116 
AfxGëCurNëP¨a
–
NETPARAM
 * 
pNëP¨am
 );

119 
PSTHREAD_PROC
 
AfxGëThªadInfo
–
±hªad_t
 
tid
 ) ;

122 
AfxGëProje˘Name
–
QSåög
 & 
°r
 ) ;

124 
CDBa£M™agî
 *
AfxGëDBa£
();

127 * 
ThªadRólProc
–* 
pP¨am
 ) ;

128 * 
ThªadComProc
–* 
pP¨am
 );

130 
…rim
(*
s
);

131 
πrim
(*
s
);

132 
BOOL
 
AfxGëSysNëP¨amAndSëDeÁu…NëP¨am
–
PNETPARAM
 
Vevi£NëP¨am
 );

134 
m_Ve˘‹T˝Clõ¡Push_back
–
CComP‹t
 * 
pP‹t
 ) ;

135 
SˇnSîvîOnLöe
( );

136 * 
ThªadSˇnSevî
(*
pPrŸObj
 );

138 
AfxRe‰eshGpioSèã
();

140 
BOOL
 
AfxRe‰eshD©aQuîySèã
();

142 
BOOL
 
AfxRe‰eshS¸ìnSèã
();

143 
AfxSëSèndby
–
BOOL
 
b°©e
);

145 
AfxRe‰eshYkTime
();

147 
BOOL
 
AfxRe‰eshPicCﬁ‹
(
PST_SYSPAGE
 
CurPage°
 ,
CEÀmít
 * 
FEÀmít
);

149 
BOOL
 
In£πYxAœrmDba£
–
PYXST
 
pYxD©a
 );

151 ˛as†
	cCGlobÆ
 : 
public
 
QObje˘


153 
Q_OBJECT


154 
public
:

155 
CGlobÆ
();

157 
	mpublic
:

158 íum{ 
ELAPSE_TIMEOUT
 = 10 * 60 } ;

159 íum{ 
	gSEND_MSG
 = 0x21 ,
	gRECV_MSG
 , 
	gERROR_MSG
 } ;

160 íum{ 
	gBUFFERSIZE
 = 1024 * 3 };

161 íum{ 
	gFAULT
=2,
	gWARN
,
	gMAIN_POWER
,
	gWORKING
,
	gBACKUP_POWER
,
	gGPIO_ERROR
 };

163 
Widgë
 * 
	gm_pWidgë
 ;

164 
BYTE
 
	gm_byCurPage
 ;

165 
QSåög
 
	gm_°rRólTime
 ;

166 
QSåög
 
GëRólTimeSå
( ) ;

167 
SëRólTimeSå
–
QSåög
 
°r
 ) ;

168 
BOOL
 
GëThªadRunFœg
( ) ;

169 
BOOL
 
SëThªadRunFœg
–BOOL 
bFœg
 ) ;

170 
BYTE
 
GëLogöSèã
( );

171 
SëLogöSèã
–
BYTE
 
bySèã
 ) ;

172 
time_t
 
GëCou¡downTime
( ) ;

173 
SëCou¡downTime
–
time_t
 
timeCou¡
 ) ;

174 
	gU§PwdP©h
[ 32 ];

175 
USRPWD
 
	gDeÁu…U§Pwd
;

176 
USRPWD
 
	gCuºítU§Pwd
;

177 
	gNëP¨amP©h
[ 32 ];

178 
NETPARAM
 
	gDeÁu…NëP¨am
;

179 
NETPARAM
 
	gCuºítNëP¨am
;

180 
	gSysDnsP©h
[ 32 ];

181 
	gQVe˘‹
 <
	gCComP‹t
*> 
	gm_Ve˘‹T˝Clõ¡
;

182 
	gm_GpöFd
;

183 
	gm_GpoutFd
;

184 
	gGpöCmd
[6];

185 
BYTE
 
	gGpioSèã
[7];

186 
BOOL
 
	gs_b°©e
;

187 
	gkeys_fd
;

188 
öput_evít
 
	gt
;

189 
	ggs_uisum_u£c
;

190 
	ggs_uüdd_u£c
;

191 
	ggs_ui¶ìp_u£c
;

193 
time_t
 
	gYkBegöTime
;

195 
Re‰eshGpioPowîSèã
();

196 
Re‰eshGpioFÆutSèã
();

197 
Re‰eshGpioW‹kögSèã
();

198 
Re‰eshGpioW¨nSèã
();

199 
AfxSëGpioSèã
–
BYTE
 
ödex
 , BYTE 
Sèã
);

200 
SëSèndby
–
BOOL
 
b°©e
 );

201 
Re‰eshS¸ìnSèã
();

203 
EmôSig«l_YkRäInRólThªad
–
WORD
 
wBusNoDe°
 , WORD 
wAddrDe°
 , WORD 
nP¡De°
 ,

204 
WORD
 
wBusNoSrc
 , WORD 
wAddrSrc
 , WORD 
nP¡Src
 ,

205 
BYTE
 
byA˘i⁄
 , 
WORD
 
wVÆ
 );

206 
EmôSig«l_YkRäTimeOut
();

207 
EmôSig«l_YxAœrm
–* 
chName
, 
byVÆue
 );

209 
	g¥Ÿe˘ed
:

210 
BOOL
 
m_bThªadRun
 ;

211 
BYTE
 
	gm_byLogSèã
 ;

212 
time_t
 
	gm_wCou¡downTime
 ;

214 
	gsig«ls
:

215 
LogöSèãCh™ged
–
BYTE
 
bySèã
 );

216 
Sig«l_YkRäInRólThªad
(
wBusNoDe°
, 
wAddrDe°
, 
nP¡De°
, 
wBusNoSrc
, 
wAddrSrc
, 
nP¡Src
, 
byA˘i⁄
, 
wVÆ
);

217 
Sig«l_YkRäTimeOut
();

218 
Sig«l_YxAœrm
–* 
chName
, 
byVÆue
 );

	@clogindlg.cpp

1 
	~"˛ogödlg.h
"

2 
	~"cglobÆ.h
"

3 
	~"Pages/˝age.h
"

5 
	gCLogöDlg
::
	$CLogöDlg
(
QWidgë
 *
∑ª¡
) :

6 
	$QDülog
(
∑ª¡
)

8 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

10 
QLabñ
 * 
u§Labñ
 = 
√w
 
	`QLabñ
(
	`UTF8
("Áî®Êà∑ÂêçÔºö"));

11 
QLabñ
 * 
pwdLabñ
 = 
√w
 
	`QLabñ
(
	`UTF8
("ÂØÜÁ†ÅÔºö"));

12 
u§LöeEdô
 = 
√w
 
Eput800LöeEdô
;

13 
pwdLöeEdô
 = 
√w
 
Eput800LöeEdô
;

14 
pwdLöeEdô
->
	`£tEchoMode
(
Eput800LöeEdô
::
Passw‹d
);

16 
u§LöeEdô
->
	`£tText
(
tmpGlobÆ
->
CuºítU§Pwd
.
U§
);

17 
u§LöeEdô
->
	`£tE«bÀd
(
Ál£
);

19 
QGridLayout
 *
gúdLayout
 = 
√w
 QGridLayout;

20 
gúdLayout
->
	`addWidgë
(
u§Labñ
,0,0,1,1);

21 
gúdLayout
->
	`addWidgë
(
pwdLabñ
,1,0,1,1);

22 
gúdLayout
->
	`addWidgë
(
u§LöeEdô
,0,1,1,3);

23 
gúdLayout
->
	`addWidgë
(
pwdLöeEdô
,1,1,1,3);

25 
QPushBuâ⁄
 * 
okBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
("Á°ÆÂÆö"));

26 
QPushBuâ⁄
 * 
ˇn˚lBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
( "ÂèñÊ∂à" ) );

27 
QHBoxLayout
 * 
bäLayout
 = 
√w
 QHBoxLayout;

28 
bäLayout
->
	`£tS∑cög
(60);

29 
bäLayout
->
	`addWidgë
(
okBä
);

30 
bäLayout
->
	`addWidgë
(
ˇn˚lBä
);

32 
QVBoxLayout
 * 
dlgLayout
 = 
√w
 QVBoxLayout;

33 
dlgLayout
->
	`£tM¨gö
(40);

34 
dlgLayout
->
	`addLayout
(
gúdLayout
);

35 
dlgLayout
->
	`addLayout
(
bäLayout
);

36 
	`£tLayout
(
dlgLayout
);

38 
	`c⁄√˘
(
okBä
 , 
	`SIGNAL
(
	`˛icked
()Ë, 
this
 , 
	`SLOT
(
	`ac˚±
()));

39 
	`c⁄√˘
(
ˇn˚lBä
 , 
	`SIGNAL
(
	`˛icked
()Ë, 
this
 , 
	`SLOT
(
	`ªje˘
()));

44 
	`c⁄√˘
(
pwdLöeEdô
 , 
	`SIGNAL
(
	`˛icked
(
QLöeEdô
 * )Ë, 
this
 , 
	`SLOT
(
	`LöeEdôClickSlŸ
(QLineEdit * )));

46 
	`£tWödowTôÀ
(
	`UTF8
("ËØ∑ÁôªÂΩï"));

47 
	`£tFixedSize
(400,300);

48 
	`£tWödowFœgs
(
Qt
::
WödowClo£Buâ⁄Höt
| Qt::
Wödow
 );

49 
	}
}

51 
	gCLogöDlg
::
	$ac˚±
()

53 
CGlobÆ
 * 
tmpGlobÆ
 = 
	`AfxGëGlobÆ
();

54 if(
u§LöeEdô
->
	`ãxt
().
	`åimmed
(Ë=
	`UTF8
(
tmpGlobÆ
->
CuºítU§Pwd
.
U§
)

55 && 
pwdLöeEdô
->
	`ãxt
().
	`åimmed
(Ë=
	`UTF8
(
tmpGlobÆ
->
CuºítU§Pwd
.
Pwd
) )

57 
pwdLöeEdô
->
	`˛ór
();

58 if–
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_LOGIN_DLG
 )

59 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`hide
();

60 
	`AfxSëLogöSèã
(
LogöDldSèã
);

61 
QDülog
::
	`ac˚±
();

65 
QMesßgeBox
::
	`w¨nög
(
this
 , 
	`UTF8
("Ë≠¶Âëä") , UTF8("Áî®Êà∑ÊàñÂØÜÁ†ÅÈîôËØØ!!!") ,

66 
QObje˘
::
	`å
("Á°ÆÂÆö"));

67 
pwdLöeEdô
->
	`£tFocus
();

69 
	}
}

71 
	gCLogöDlg
::
	$ªje˘
()

73 
pwdLöeEdô
->
	`˛ór
();

74 if–
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_LOGIN_DLG
 )

75 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`hide
();

76 
QDülog
::
	`ªje˘
();

77 
	}
}

79 
	gCLogöDlg
::
	$show
()

81  
	`AfxGëLogöSèã
() )

83 
CPage
::
LOGIN
:

84 
LogöDldSèã
 = 
CPage
::
LOGOUT
;

85 
	`£tWödowTôÀ
(
	`UTF8
("ÈÄÄÂá∫ÁôªÂΩï"));

87 
CPage
::
LOGOUT
:

88 
LogöDldSèã
 = 
CPage
::
LOGIN
;

89 
	`£tWödowTôÀ
(
	`UTF8
("ËØ∑ÁôªÂΩï"));

92 
	`move
(200, 150);

93 
QDülog
::
	`show
();

95 
	}
}

97 
	gCLogöDlg
::
	$LöeEdôClickSlŸ
(
QLöeEdô
 * 
tmpQlöeEdô
)

99  
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`isVisibÀ
() )

101 
TRUE
:

102 if–
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 =
Widgë
::
BOARD_LOGIN_DLG
 )

103 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdhide
(
tmpQlöeEdô
,
Keybﬂrd
::
LOGINDLGKEYBOARD
);

106 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 = 
Widgë
::
BOARD_LOGIN_DLG
;

107 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
(
tmpQlöeEdô
,
Keybﬂrd
::
LOGINDLGKEYBOARD
);

110 
FALSE
:

111 
	`AfxGëWidgë
()->
NumkeybﬂrdFocusWödow
 = 
Widgë
::
BOARD_LOGIN_DLG
;

112 
	`AfxGëWidgë
()->
Numkeybﬂrd
->
	`KeyBﬂrdShow
(
tmpQlöeEdô
,
Keybﬂrd
::
LOGINDLGKEYBOARD
);

115 
	}
}

	@clogindlg.h

1 #i‚de‡
CLOGINDLG_H


2 
	#CLOGINDLG_H


	)

3 
	~<QtGui/QtGui
>

4 
	~<QDülog
>

5 
	~"Keybﬂrd/keybﬂrd.h
"

6 
	~"ïut800löìdô.h
"

7 ˛as†
	cCLogöDlg
 : 
public
 
QDülog


9 
Q_OBJECT


10 
public
:

11 
ex∂icô
 
CLogöDlg
(
QWidgë
 *
∑ª¡
 = 0);

12 
vútuÆ
 
show
();

14 
	m¥iv©e
:

16 
Eput800LöeEdô
 * 
u§LöeEdô
;

17 
Eput800LöeEdô
 * 
	mpwdLöeEdô
;

18 
BYTE
 
	mLogöDldSèã
;

20 
	msig«ls
:

21 
sig«l_1
();

23 
¥iv©e
 
	m¶Ÿs
:

24 
vútuÆ
 
ac˚±
();

25 
vútuÆ
 
ªje˘
();

26 
LöeEdôClickSlŸ
(
QLöeEdô
 * 
tmpQlöeEdô
);

	@cmsg.cpp

1 
	~<°dio.h
>

2 
	~<sys/msg.h
>

3 
	~<uni°d.h
>

4 
	~"cmsg.h
"

5 
	~"°ru˘uª.h
"

7 
	gCMsg
::
m_MsgID
 = -1 ;

9 
	gCMsg
::
	$CMsg
()

11 
m_MsgKey
 = 201607 ;

12 
m_MsgTy≥
 = -1 ;

13 
m_msgSize
 = ( * ) + ( ) ;

14 
	}
}

16 
	gCMsg
::~
	$CMsg
()

22 if–
m_MsgID
 != -1 )

24 if–
	`Clo£MsgQueue
() )

25 
	`¥ötf
( "\nCMsg Destructor OK.\n" ) ;

28 
	}
}

31 
	gCMsg
::
	$Cª©eMsgQueue
–
MSG_TYPE
 
msgTy≥
 )

33 
msgCh™√l
 = ( )
msgTy≥
 ;

34 if–
msgCh™√l
 <= 0 )

37 
m_MsgTy≥
 = 
msgCh™√l
 ;

39 if–
m_MsgID
 != -1 )

40  
m_MsgID
 ;

42 
msgID
 = -1 ;

43 
msgID
 = 
	`msggë
–
m_MsgKey
, 
IPC_CREAT
|0666);

44 if–
msgID
 != -1 )

45 
m_MsgID
 = 
msgID
 ;

47  
msgID
 ;

48 
	}
}

50 
boﬁ
 
	gCMsg
::
	$IsMsgQueue
( )

52 if–
m_MsgID
 =-1 || 
m_MsgTy≥
 == -1 )

53  
Ál£
 ;

55  
åue
 ;

56 
	}
}

58 
boﬁ
 
	gCMsg
::
	$Clo£MsgQueue
()

60 
Rëu∫
 = 
	`msg˘l
–
m_MsgID
, 
IPC_RMID
, 
NULL
 ) ;

61 if–
Rëu∫
 == 0 )

63 
m_MsgID
 = -1;

64 
	`¥ötf
( "\nClose Msg Queue Success OK. \n" );

65  
åue
 ;

68  
Ál£
 ;

69 
	}
}

71 
boﬁ
 
	gCMsg
::
	$SídMsg
–* 
pVoid
 )

73 if–
pVoid
 =
NULL
 || 
m_MsgID
 =-1 || !
	`IsMsgQueue
() )

74  
Ál£
 ;

78 
PLMSG
 
pMsg
 = ( PLMSG )
pVoid
 ;

79 
pMsg
->
msgTy≥
 = 
m_MsgTy≥
 ;

81 
iRëu∫
 = 
	`msg¢d
–
m_MsgID
, 
pVoid
 , 
m_msgSize
 , 
IPC_NOWAIT
 ) ;

82 if–
iRëu∫
 == 0 )

83  
åue
 ;

85  
Ál£
 ;

86 
	}
}

88 
boﬁ
 
	gCMsg
::
	$RecvMsg
–* 
pVoid
 )

90 if–
pVoid
 =
NULL
 || 
m_MsgID
 =-1 || !
	`IsMsgQueue
() )

91  
Ál£
 ;

93 
ªcv_byã
 = 
	`msgrcv
(
m_MsgID
, 
pVoid
, 
m_msgSize
, 
m_MsgTy≥
 , 
IPC_NOWAIT
 );

94 if–
ªcv_byã
 <= 0)

97  
Ál£
;

100  
åue
;

101 
	}
}

	@cmsg.h

1 #i‚de‡
_CMSG_H__


2 
	#_CMSG_H__


	)

3 
	~"°ru˘uª.h
"

4 #¥agm®
∑ck
( 1 )

5 ˛as†
	cCMsg


7 
	mpublic
:

8 
CMsg
() ;

9 ~
CMsg
() ;

11 
	m¥Ÿe˘ed
:

12 
m_MsgID
 ;

13 
	mm_MsgKey
 ;

14 
	mm_msgSize
 ;

15 
	mpublic
:

16 
	eMSG_TYPE
{ 
MSG_COM_CHANNEL
 = 0x1702 ,

17 
	mMSG_COM_END
 = 
MSG_COM_CHANNEL
 + 
TOTAL_BUS
 ,

18 
	mMSG_REAL_CHANNEL
 = 0x1601

20 
Cª©eMsgQueue
–
MSG_TYPE
 
msgTy≥
 );

21 
boﬁ
 
SídMsg
–* 
pVoid
 ) ;

22 
boﬁ
 
RecvMsg
–* 
pVoid
 ) ;

23 
boﬁ
 
Clo£MsgQueue
() ;

24 
boﬁ
 
IsMsgQueue
( );

25 
	gm_MsgTy≥
 ;

27 #¥agm®
∑ck
( )

	@cresetpwddlg.cpp

1 
	~"¸e£çwddlg.h
"

2 
	~"cglobÆ.h
"

3 
	~<QPaöãr
>

4 
	g¸e£çwddlg
::
	$¸e£çwddlg
(
QWidgë
 *
∑ª¡
) :

5 
	$QDülog
(
∑ª¡
)

8 
	`£tWödowFœgs
(
Qt
::
WödowClo£Buâ⁄Höt
 | Qt::
WödowSèysOnT›Höt
);

9 
	`mem£t
–
m_°rPic
 , 0 , (m_strPic) );

10 
	`mem˝y
–
m_°rPic
 , "/usr/share/ePut800/Pics/ÈáçÁΩÆÂØÜÁ†Å.jpg" , ("/usr/share/ePut800/Pics/ÈáçÁΩÆÂØÜÁ†Å.jpg"));

13 
	`£tFixedSize
(67*7,31*7);

14 
	`move
((800-
	`width
())/2,(600-
	`height
())/2);

16 
YesRe˘
.
	`£tRe˘
–(80*
	`width
())/469 , (151*
	`height
())/217 , (85*width())/469 , (41*height())/217 );

17 
NoRe˘
.
	`£tRe˘
–(305*
	`width
())/469 , (151*
	`height
())/217 , (85*width())/469 , (41*height())/217 );

18 
	}
}

20 
	g¸e£çwddlg
::
	$∑ötEvít
–
QPaötEvít
 * 
pEvít
 )

22 
QPaöãr
 
	`∑öãr
(
this
);

23 
QPixm≠
 
	`backGround
–
	`width
(Ë, 
	`height
() );

24 
backGround
.
	`lﬂd
(
m_°rPic
);

25 
∑öãr
.
	`døwPixm≠
(0,0, 
	`width
(),
	`height
(),
	`UTF8
(
m_°rPic
));

26 
	}
}

28 
	g¸e£çwddlg
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

30 if(
pEvít
->
	`buâ⁄
(Ë=
Qt
::
Le·Buâ⁄
)

32 
PªssX
 = 
pEvít
->
	`x
();

33 
PªssY
 = 
pEvít
->
	`y
();

34 
PªssGlobÆX
 = 
pEvít
->
	`globÆX
();

35 
PªssGlobÆY
 = 
pEvít
->
	`globÆY
();

36 if–
YesRe˘
.
	`c⁄èös
(
pEvít
->
	`pos
()) )

38 
	`AfxRe£tPwd
();

39 
QDülog
::
	`ac˚±
();

41 if–
NoRe˘
.
	`c⁄èös
(
pEvít
->
	`pos
()) )

43 
QDülog
::
	`ªje˘
();

46 
	}
}

48 
	g¸e£çwddlg
::
	$mou£MoveEvít
(
QMou£Evít
 *
pEvít
)

50 if(
pEvít
->
	`buâ⁄s
(Ë& 
Qt
::
Le·Buâ⁄
)

52 if–
	`abs
(
PªssGlobÆX
 - 
pEvít
->
	`globÆX
()Ë> 10 ||ábs(
PªssGlobÆY
 -ÖEvít->
	`globÆY
()) > 10 )

54 
	`move
–
pEvít
->
	`globÆX
(Ë- 
PªssX
 ,ÖEvít->
	`globÆY
(Ë- 
PªssY
 );

57 
	}
}

	@cresetpwddlg.h

1 #i‚de‡
CRESETPWDDLG_H


2 
	#CRESETPWDDLG_H


	)

4 
	~<QDülog
>

6 ˛as†
	c¸e£çwddlg
 : 
public
 
QDülog


8 
Q_OBJECT


9 
public
:

10 
ex∂icô
 
¸e£çwddlg
(
QWidgë
 *
∑ª¡
 = 0);

12 
∑ötEvít
–
QPaötEvít
 * 
pEvít
 );

13 
vútuÆ
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

14 
vútuÆ
 
mou£MoveEvít
(
QMou£Evít
 *
pEvít
 );

16 
	m¥iv©e
:

17 
m_°rPic
[64] ;

18 
QRe˘
 
	mYesRe˘
;

19 
QRe˘
 
	mNoRe˘
;

20 
	mPªssX
;

21 
	mPªssY
;

22 
	mPªssGlobÆX
;

23 
	mPªssGlobÆY
;

24 
	msig«ls
:

26 
public
 
¶Ÿs
:

	@cykdlg.cpp

1 
	~"cykdlg.h
"

2 
	~"cglobÆ.h
"

3 
	~"Pages/˝age.h
"

4 
	~"EÀmít/˚ñmít.h
"

5 
	gCYkDlg
::
	$CYkDlg
(
QWidgë
 *
∑ª¡
) :

6 
	$QDülog
(
∑ª¡
)

8 
YkLabñ
 = 
√w
 
	`QLabñ
(
	`UTF8
("ÂºÄÂÖ≥Êìç‰Ωú"));

9 
YkLabñ
->
	`£tAlignmít
–
Qt
::
AlignCíãr
 );

10 
YkRäLabñ
 = 
√w
 
	`QLabñ
(
	`UTF8
("Â∞öÊó†ËøîÂõû‰ø°ÊÅØ"));

11 
YkRäLabñ
->
	`£tAlignmít
–
Qt
::
AlignCíãr
 );

12 
YkPª∑ªBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
("ÈÅ•ÊéßÈ¢ÑÁΩÆ"));

13 
YkExecBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
("ÈÅ•ÊéßÊâßË°å"));

14 
YkC™˚lBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
( "ÈÅ•ÊéßÂèñÊ∂à" ) );

16 
YkE¨thPª∑ªBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
("ÈÅ•ÊéßÊé•Âú∞È¢ÑÁΩÆ"));

17 
YkE¨thExecBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
("ÈÅ•ÊéßÊé•Âú∞ÊâßË°å"));

18 
YkE¨thC™˚lBä
 = 
√w
 
	`QPushBuâ⁄
(
	`UTF8
( "ÈÅ•ÊéßÊé•Âú∞ÂèñÊ∂à" ) );

20 
QGridLayout
 *
YkLabñgúdLayout
 = 
√w
 QGridLayout;

21 
YkLabñgúdLayout
->
	`addWidgë
(
YkLabñ
,0,0,1,1);

22 
QGridLayout
 *
YkRäLabñgúdLayout
 = 
√w
 QGridLayout;

23 
YkRäLabñgúdLayout
->
	`addWidgë
(
YkRäLabñ
,0,0,1,1);

25 
QHBoxLayout
 * 
YkBäLayout
 = 
√w
 QHBoxLayout;

26 
YkBäLayout
->
	`£tS∑cög
(60);

27 
YkBäLayout
->
	`addWidgë
(
YkPª∑ªBä
);

28 
YkBäLayout
->
	`addWidgë
(
YkExecBä
);

29 
YkBäLayout
->
	`addWidgë
(
YkC™˚lBä
);

31 
QHBoxLayout
 * 
YkE¨thBäLayout
 = 
√w
 QHBoxLayout;

32 
YkE¨thBäLayout
->
	`addWidgë
(
YkE¨thPª∑ªBä
);

33 
YkE¨thBäLayout
->
	`addWidgë
(
YkE¨thExecBä
);

34 
YkE¨thBäLayout
->
	`addWidgë
(
YkE¨thC™˚lBä
);

36 
QVBoxLayout
 * 
dlgLayout
 = 
√w
 QVBoxLayout;

37 
dlgLayout
->
	`£tM¨gö
(20);

38 
dlgLayout
->
	`£tS∑cög
(20);

39 
dlgLayout
->
	`addLayout
(
YkLabñgúdLayout
);

40 
dlgLayout
->
	`addLayout
(
YkBäLayout
);

43 
dlgLayout
->
	`addLayout
(
YkRäLabñgúdLayout
);

44 
	`£tLayout
(
dlgLayout
);

45 
	`hide
();

47 
YkExecBä
->
	`£tDißbÀd
(
TRUE
);

48 
YkC™˚lBä
->
	`£tDißbÀd
(
TRUE
);

50 
	`c⁄√˘
(
YkPª∑ªBä
 , 
	`SIGNAL
(
	`˛icked
()Ë, 
this
 , 
	`SLOT
(
	`¶Ÿs_YkPª∑ªBä_˛icked
()));

51 
	`c⁄√˘
(
YkExecBä
 , 
	`SIGNAL
(
	`˛icked
()Ë, 
this
 , 
	`SLOT
(
	`¶Ÿs_YkExecBä_˛icked
()));

52 
	`c⁄√˘
(
YkC™˚lBä
 , 
	`SIGNAL
(
	`˛icked
()Ë, 
this
 , 
	`SLOT
(
	`¶Ÿs_YkC™˚lBä_˛icked
()));

53 
	`c⁄√˘
(
	`AfxGëGlobÆ
(Ë, 
	`SIGNAL
(
	`Sig«l_YkRäInRólThªad
(,,,,,,,)) ,

54 
this
 , 
	`SLOT
(
	`¶Ÿ_YkRäInRólThªad
(,,,,,,,)));

55 
	`c⁄√˘
(
	`AfxGëGlobÆ
(Ë, 
	`SIGNAL
(
	`Sig«l_YkRäTimeOut
()), 
this
 , 
	`SLOT
(
	`¶Ÿ_YkTimeOut
()) );

56 
	`£tFixedSize
(400,300);

57 
	`£tWödowFœgs
(
Qt
::
WödowClo£Buâ⁄Höt
| Qt::
Wödow
 );

58 
	}
}

60 
	gCYkDlg
::
	$¶Ÿs_YkPª∑ªBä_˛icked
()

62 
YkDlgD©a
.
byA˘i⁄
 = 
YK_PREPARE
;

64 
WORD
 
DevSèã
 = 
COMM_ABNORMAL
;

65 
	`AfxGëDevCommSèã
(
YkDlgD©a
.
wBusNoDe°
 ,YkDlgD©a.
wAddrDe°
,
DevSèã
);

68 if–
DevSèã
 =
COMM_NOMAL
 )

70 
	`AfxSígYK
–
YkDlgD©a
.
wBusNoDe°
 ,YkDlgD©a.
wAddrDe°
 ,YkDlgD©a.
wP¡NoDe°
,

71 
YkDlgD©a
.
wBusNoSrc
,YkDlgD©a.
wAddrSrc
,YkDlgD©a.
wP¡NoSrc
,

72 
YkDlgD©a
.
byA˘i⁄
,YkDlgD©a.
wVÆ
);

73 
	`time
(&
	`AfxGëGlobÆ
()->
YkBegöTime
);

74 
YkRäLabñ
->
	`£tText
(
	`UTF8
("È¢ÑÁΩÆ‰∏≠ÔºÅ"));

79 
	`qDebug
(Ë<< 
__FILE__
 << 
__LINE__
 << "Ë£ÖÁΩÆÁä∂ÊÄÅ‰∏çÈÄö!";

80 
	}
}

82 
	gCYkDlg
::
	$¶Ÿs_YkExecBä_˛icked
()

84 
YkDlgD©a
.
byA˘i⁄
 = 
YK_EXEC
;

85 
WORD
 
DevSèã
 = 
COMM_ABNORMAL
;

86 
	`AfxGëDevCommSèã
(
YkDlgD©a
.
wBusNoDe°
,YkDlgD©a.
wAddrDe°
,
DevSèã
);

90 if–
DevSèã
 =
COMM_NOMAL
 )

92 
	`AfxSígYK
–
YkDlgD©a
.
wBusNoDe°
,YkDlgD©a.
wAddrDe°
,YkDlgD©a.
wP¡NoDe°
,

93 
YkDlgD©a
.
wBusNoSrc
,YkDlgD©a.
wAddrSrc
,YkDlgD©a.
wP¡NoSrc
,

94 
YkDlgD©a
.
byA˘i⁄
 ,YkDlgD©a.
wVÆ
);

96 
	`time
(&
	`AfxGëGlobÆ
()->
YkBegöTime
);

97 
YkRäLabñ
->
	`£tText
(
	`UTF8
("ÊâßË°å‰∏≠ÔºÅ"));

101 
	`qDebug
(Ë<< 
__FILE__
 << 
__LINE__
 << "Ë£ÖÁΩÆÁä∂ÊÄÅ‰∏çÈÄö!";

102 
	}
}

104 
	gCYkDlg
::
	$¶Ÿs_YkC™˚lBä_˛icked
()

106 
YkDlgD©a
.
byA˘i⁄
 = 
YK_CANCEL
;

107 
WORD
 
DevSèã
 = 
COMM_ABNORMAL
;

108 
	`AfxGëDevCommSèã
(
YkDlgD©a
.
wBusNoDe°
 ,YkDlgD©a.
wAddrDe°
,
DevSèã
);

109 if–
DevSèã
 =
COMM_NOMAL
 )

111 
	`AfxSígYK
–
YkDlgD©a
.
wBusNoDe°
 ,YkDlgD©a.
wAddrDe°
 ,YkDlgD©a.
wP¡NoDe°
,

112 
YkDlgD©a
.
wBusNoSrc
,YkDlgD©a.
wAddrSrc
,YkDlgD©a.
wP¡NoSrc
,

113 
YkDlgD©a
.
byA˘i⁄
,YkDlgD©a.
wVÆ
);

114 
	`time
(&
	`AfxGëGlobÆ
()->
YkBegöTime
);

115 
YkRäLabñ
->
	`£tText
(
	`UTF8
("ÂèñÊ∂à‰∏≠ÔºÅ"));

118 
QMesßgeBox
::
	`w¨nög
(
this
 , 
	`UTF8
("Ë≠¶Âëä"Ë, UTF8("Ë£ÖÁΩÆÁä∂ÊÄÅ‰∏çÈÄö!!!"),QMesßgeBox::
Yes
 );

119 
	}
}

121 
	gCYkDlg
::
	$¶Ÿ_YkRäInRólThªad
(
wBusNoDe°
, 
wAddrDe°
, 
nP¡De°
, 
wBusNoSrc
, 
wAddrSrc
, 
nP¡Src
, 
byA˘i⁄
, 
wVÆ
)

123 if–(
YkDlgD©a
.
wBusNoDe°
 =
wBusNoSrc
Ë&& (YkDlgD©a.
wAddrDe°
 =
wAddrSrc
)

124 && (
YkDlgD©a
.
wP¡NoDe°
 =
nP¡Src
) )

126 if––
YkDlgD©a
.
byA˘i⁄
 =
YK_PREPARE
Ë&& (byA˘i⁄ =
YK_PREPARE_RTN
) )

128 if–
YkDlgD©a
.
wVÆ
 == wVal )

130 
YkRäLabñ
->
	`£tText
(
	`UTF8
("È¢ÑÁΩÆÊàêÂäüÔºÅ"));

131 
YkPª∑ªBä
->
	`£tDißbÀd
(
TRUE
);

132 
YkExecBä
->
	`£tDißbÀd
(
FALSE
);

133 
YkC™˚lBä
->
	`£tDißbÀd
(
FALSE
);

136 
YkRäLabñ
->
	`£tText
(
	`UTF8
("È¢ÑÁΩÆÂ§±Ë¥•ÔºÅ"));

138 if–(
YkDlgD©a
.
byA˘i⁄
 =
YK_EXEC
Ë&& (byA˘i⁄ =
YK_EXEC_RTN
) )

140 if–
YkDlgD©a
.
wVÆ
 == wVal )

142 
YkRäLabñ
->
	`£tText
(
	`UTF8
("ÊâßË°åÊàêÂäüÔºÅ"));

143 
YkPª∑ªBä
->
	`£tDißbÀd
(
TRUE
);

144 
YkExecBä
->
	`£tDißbÀd
(
TRUE
);

145 
YkC™˚lBä
->
	`£tDißbÀd
(
TRUE
);

148 
YkRäLabñ
->
	`£tText
(
	`UTF8
("ÊâßË°åÂ§±Ë¥•ÔºÅ"));

150 if–(
YkDlgD©a
.
byA˘i⁄
 =
YK_CANCEL
Ë&& (byA˘i⁄ =
YK_CANCEL_RTN
) )

152 if–
YkDlgD©a
.
wVÆ
 == wVal )

154 
YkRäLabñ
->
	`£tText
(
	`UTF8
("ÂèñÊ∂àÊàêÂäüÔºÅ"));

155 
YkPª∑ªBä
->
	`£tDißbÀd
(
FALSE
);

156 
YkExecBä
->
	`£tDißbÀd
(
TRUE
);

157 
YkC™˚lBä
->
	`£tDißbÀd
(
TRUE
);

160 
YkRäLabñ
->
	`£tText
(
	`UTF8
("ÂèñÊ∂àÂ§±Ë¥•ÔºÅ"));

162 
	`AfxGëGlobÆ
()->
YkBegöTime
 = 0;

164 
	}
}

166 
	gCYkDlg
::
	$¶Ÿ_YkTimeOut
()

168 
YkRäLabñ
->
	`£tText
(
	`UTF8
("Êìç‰ΩúË∂ÖÊó∂ÔºÅ"));

169 
	}
}

171 
	gCYkDlg
::
	$tShowP¨amëî
–
BYTE
 
TwoOrThªe
 , 
YKST_MSG
 
tmpYk
 )

173 
	`mem˝y
–&
YkDlgD©a
 , &
tmpYk
 , (
YKST_MSG
) );

174 
YkRäLabñ
->
	`£tText
(
	`UTF8
("Â∞öÊó†ËøîÂõû‰ø°ÊÅØÔºÅ"));

175 
YkPª∑ªBä
->
	`£tDißbÀd
(
FALSE
);

176 
YkExecBä
->
	`£tDißbÀd
(
TRUE
);

177 
YkC™˚lBä
->
	`£tDißbÀd
(
TRUE
);

197 
	`show
();

198 
	}
}

201 
	gCYkDlg
::
	$tShowP¨amëî
–
BYTE
 
TwoOrThªe
 , 
YKST_MSG
 
tmpYk
, 
QSåög
 *
Êag
)

203 
	`mem˝y
–&
YkDlgD©a
 , &
tmpYk
 , (
YKST_MSG
) );

204 
YkRäLabñ
->
	`£tText
(
	`UTF8
("Â∞öÊó†ËøîÂõû‰ø°ÊÅØÔºÅ"));

205 
YkPª∑ªBä
->
	`£tDißbÀd
(
FALSE
);

206 
YkExecBä
->
	`£tDißbÀd
(
TRUE
);

207 
YkC™˚lBä
->
	`£tDißbÀd
(
TRUE
);

228 
	}
}

	@cykdlg.h

1 #i‚de‡
CYKDLG_H


2 
	#CYKDLG_H


	)

3 
	~<QtGui/QtGui
>

4 
	~<QDülog
>

5 
	~"°ru˘uª.h
"

6 ˛as†
	cCYkDlg
 : 
public
 
QDülog


8 
Q_OBJECT


9 
public
:

10 
ex∂icô
 
CYkDlg
(
QWidgë
 *
∑ª¡
 = 0);

12 
tShowP¨amëî
–
BYTE
 
TwoOrThªe
 , 
YKST_MSG
 
tmpYk
 );

13 
tShowP¨amëî
(
BYTE
, 
YKST_MSG
, 
QSåög
 *);

14 
YKST_MSG
 
	mYkDlgD©a
;

16 
QLabñ
 * 
	mYkRäLabñ
;

17 
QLabñ
 * 
	mYkLabñ
;

18 
QPushBuâ⁄
 * 
	mYkPª∑ªBä
;

19 
QPushBuâ⁄
 * 
	mYkExecBä
;

20 
QPushBuâ⁄
 * 
	mYkC™˚lBä
;

22 
QPushBuâ⁄
 * 
	mYkE¨thPª∑ªBä
;

23 
QPushBuâ⁄
 * 
	mYkE¨thExecBä
;

24 
QPushBuâ⁄
 * 
	mYkE¨thC™˚lBä
;

27 
public
 
	m¶Ÿs
:

28 
¶Ÿs_YkPª∑ªBä_˛icked
();

29 
¶Ÿs_YkExecBä_˛icked
();

30 
¶Ÿs_YkC™˚lBä_˛icked
();

32 
¶Ÿ_YkRäInRólThªad
(
wBusNoDe°
, 
wAddrDe°
, 
nP¡De°
, 
wBusNoSrc
, 
wAddrSrc
, 
nP¡Src
, 
byA˘i⁄
, 
wVÆ
);

33 
¶Ÿ_YkTimeOut
();

	@eput800lineedit.cpp

1 
	~"ïut800löìdô.h
"

3 
	gEput800LöeEdô
::
	$Eput800LöeEdô
(
QWidgë
 *
∑ª¡
) :

4 
	$QLöeEdô
(
∑ª¡
)

6 
	}
}

8 
Eput800LöeEdô
::
	$mou£PªssEvít
(
QMou£Evít
 *
pEvít
 )

10 if(
pEvít
->
	`buâ⁄
(Ë=
Qt
::
Le·Buâ⁄
)

12 
emô
 
	`˛icked
(
this
);

14 
QLöeEdô
::
	`mou£PªssEvít
(
pEvít
);

15 
	}
}

	@eput800lineedit.h

1 #i‚de‡
EPUT800LINEEDIT_H


2 
	#EPUT800LINEEDIT_H


	)

4 
	~<QLöeEdô
>

5 
	~<QMou£Evít
>

7 ˛as†
	cEput800LöeEdô
 : 
public
 
QLöeEdô


9 
Q_OBJECT


10 
public
:

11 
ex∂icô
 
Eput800LöeEdô
(
QWidgë
 *
∑ª¡
 = 0);

12 
vútuÆ
 
mou£PªssEvít
(
QMou£Evít
 *
pEvít
 );

14 
	msig«ls
:

15 
˛icked
(
QLöeEdô
 * 
tmpQlöeEdô
);

17 
public
 
	m¶Ÿs
:

	@loadlibrary.cpp

1 
	~"lﬂdlibøry.h
"

2 
	~"PrŸo/˝rŸocﬁ.h
"

3 
	~"PrŸo/cmëhod.h
"

4 
	~<dlf˙.h
>

5 
	~<f˙é.h
>

6 
	~<°dio.h
>

8 
	gCLﬂdLibøry
::
	$CLﬂdLibøry
()

10 
	}
}

12 
CLﬂdLibøry
::~
	$CLﬂdLibøry
( )

14 
	`Rñó£H™dÀ
( ) ;

15 
	}
}

17 * 
	gCLﬂdLibøry
::
	$O≥nDŒ
–* 
pDŒP©h
 )

19 *
h™dÀ
=
NULL
;

20 *
îr‹
;

21 if–
pDŒP©h
 =
NULL
 )

22  
NULL
 ;

25 
h™dÀ
 = 
	`dl›í
 ( 
pDŒP©h
, 
RTLD_LAZY
 | 
RTLD_GLOBAL
);

27 i‡((
îr‹
 = 
	`dÀº‹
()Ë!
NULL
)

30 
	`≥º‹
–
îr‹
 ) ;

31  
NULL
;

34  
h™dÀ
 ;

35 
	}
}

37 
	gCLﬂdLibøry
::
	$Rñó£H™dÀ
( )

39 
size
 = 
m_dŒh™dÀ
.
	`size
() ;

40  
i
 = 0 ; i < 
size
 ; i++ )

42 * 
h™dÀ
 = 
m_dŒh™dÀ
[ 
i
 ] ;

43 if–
h™dÀ
 )

44 
	`dl˛o£
(
h™dÀ
);

47 
	`¥ötf
( "Close All Dll \n " );

48 
m_dŒh™dÀ
.
	`˛ór
() ;

49 
	}
}

52 
CPrŸocﬁ
 * 
	gCLﬂdLibøry
::
	$GëPrŸoObj
–* 
pDŒP©h
, 
CMëhod
 * 
pMëhod
 )

54 *
h™dÀ
=
NULL
;

55 *
îr‹
;

57 
h™dÀ
 = 
	`O≥nDŒ
–
pDŒP©h
 ) ;

58 if–
h™dÀ
 =
NULL
 )

60 i‡((
îr‹
 = 
	`dÀº‹
()Ë!
NULL
)

61 
	`¥ötf
 ( "%s\n", 
îr‹
);

62 
	`≥º‹
("Open DLL");

63 
	`¥ötf
–"O≥¿DŒ = %†Faûed ! \¿" , 
pDŒP©h
 );

64  
NULL
 ;

67 
	`¥ötf
–"O≥¿DŒ = %†Suc˚s†! \¿" , 
pDŒP©h
) ;

69 
CPrŸocﬁ
 * ( * 
	tICª©e
 )–
	tCMëhod
 * ) ;

71 
ICª©e
 
pObj
 = 
NULL
 ;

72 
pObj
 = ( 
ICª©e
 )
	`dlsym
(
h™dÀ
, "CreateProtocol");

73 if–
pObj
 =
NULL
 )

74 
	`¥ötf
( "Open Dll Failed ! \n " );

76 i‡((
îr‹
 = 
	`dÀº‹
()Ë!
NULL
)

78 
	`¥ötf
 ( "%s\n", 
îr‹
);

79 
	`≥º‹
–
îr‹
 ) ;

80 
	`dl˛o£
–
h™dÀ
 ) ;

81  
NULL
;

84 
CPrŸocﬁ
 * 
pPrŸocﬁ
 = 
NULL
 ;

85 
pPrŸocﬁ
 = 
	`pObj
–
pMëhod
 ) ;

86 if–
pPrŸocﬁ
 =
NULL
 )

88 
	`¥ötf
 ( "Get ProtoObj Failed ! \n " );

89 
	`dl˛o£
–
h™dÀ
 ) ;

90  
NULL
;

93 
	`AddH™dÀ
–
h™dÀ
 ) ;

95  
pPrŸocﬁ
 ;

96 
	}
}

98 
	gCLﬂdLibøry
::
	$AddH™dÀ
–* 
pH™dÀ
 )

100 if–
pH™dÀ
 =
NULL
 )

103 
m_dŒh™dÀ
.
	`push_back
–
pH™dÀ
 ) ;

104 
	}
}

	@loadlibrary.h

1 #i‚de‡
LOADLIBRARY_H


2 
	#LOADLIBRARY_H


	)

3 
	~<QVe˘‹
>

5 
˛ass
 
	gCPrŸocﬁ
 ;

6 
˛ass
 
	gCMëhod
 ;

7 ˛as†
	cCLﬂdLibøry


9 
	mpublic
:

10 
CLﬂdLibøry
();

11 ~
CLﬂdLibøry
( );

12 * 
O≥nDŒ
–* 
pDŒP©h
 );

13 
Rñó£H™dÀ
( );

14 
CPrŸocﬁ
 * 
GëPrŸoObj
–* 
pDŒP©h
, 
CMëhod
 * 
pMëhod
 );

15 
AddH™dÀ
–* 
pH™dÀ
 );

17 
	mQVe˘‹
< * > 
	mm_dŒh™dÀ
 ;

	@main.cpp

1 
	~<QtGui/QAµliˇti⁄
>

2 
	~"widgë.h
"

3 
	~<QTextCodec
>

4 
	~"cglobÆ.h
"

6 
	#MAX_LENTH
 600

	)

8 
	$maö
(
¨gc
, *
¨gv
[])

10 
QAµliˇti⁄
 
	`a
(
¨gc
, 
¨gv
);

11 
Widgë
 
theAµ
;

13 
QTextCodec
::
	`£tCodecF‹LoˇÀ
(QTextCodec::
	`codecF‹Name
("utf8"));

14 
QTextCodec
::
	`£tCodecF‹CSåögs
(QTextCodec::
	`codecF‹Name
("utf8"));

15 
QTextCodec
::
	`£tCodecF‹Tr
(QTextCodec::
	`codecF‹Name
("utf8"));

17 
QF⁄t
 
f⁄t
;

18 
f⁄t
.
	`£tFamûy
(("FZZhunYuan-M02"));

19 
a
.
	`£tF⁄t
(
f⁄t
);

23 
cxSize
 = 
Widgë
::
HOR_SIZE
 ;

24 
cySize
 = 
Widgë
::
VER_SIZE
 ;

25 
theAµ
.
	`ªsize
–
	`QSize
–
cxSize
 , 
cySize
 ));

30 
	`AfxSëMaöWidë
–&
theAµ
 );

31 
	`AfxSëCurPageIndex
–
Widgë
::
PAGE_HOME
 );

33 
theAµ
.
	`showFuŒS¸ìn
();

36 if–!
theAµ
.
	`OnInôülize
() )

37 
	`exô
( 0 );

39 
time_t
 
timeÊag
 = 0;

40 
timeÊag
 = 
	`time
(
NULL
);

41 if((
timeÊag
 % 10) == 0)

42 
	`AfxGëWidgë
()->
	`ª∑öt
();

45  
a
.
	`exec
();

46 
	}
}

	@profile.cpp

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

9 
	~<f˙é.h
>

10 
	~<˘y≥.h
>

11 
	~<sys/io˘l.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<sys/time.h
>

15 
	~<sig«l.h
>

16 
	~<î∫o.h
>

17 
	~<sys/mm™.h
>

18 
	~<sys/∑øm.h
>

19 
	~<°d¨g.h
>

21 
	~"¥ofûe.h
"

22 
	~"cglobÆ.h
"

24 
	#MAX_LINE_LEN
 1024

	)

26 
	#max
(
a
,
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

27 
	#mö
(
a
,
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

29 #ifde‡
__˝lu•lus


40 
GëTextLöe
(
FILE
* 
fd
, * 
ÕszBuf
, 
nSize
)

42 if–
fd
 =
NULL
)  -1;

43 if–
fgës
(
ÕszBuf
, 
nSize
, 
fd
Ë=
NULL
 )  -2;

47 
°ricmp
(c⁄° *
s
, c⁄° *
t
)

49 
a
, 
b
;

51  *
s
 && *
t
 )

53 
a
 = ()*
s
; 
b
 = ()*
t
;

54 if–
isuµî
(
a
ËË®
tﬁowî
(a);

55 if–
isuµî
(
b
ËËb = 
tﬁowî
(b);

56 if–
a
 !
b
 )  (a > b ? 1 : -1);

57 
s
++; 
t
++;

60 if–*
s
 !*
t
 )

61  (*
s
 > *
t
 ? 1 : -1);

66 
LogProm±Text
(c⁄° *
fmt
, ...);

69 #ifde‡
__˝lu•lus


75 
CD©aBuf„r
::
	$CD©aBuf„r
()

77 
m_nLí
 = 0;

78 
m_pBuff
 = 
NULL
;

79 
m_objPªv
 = 
NULL
;

80 
m_objNext
 = 
NULL
;

81 
	}
}

83 
CD©aBuf„r
::
	$CD©aBuf„r
(*
pBuf
, 
nLí
)

85 
	`CD©aBuf„r
();

86 if–
nLí
 <= 0 ) ;

87 
m_pBuff
 = 
√w
 [
nLí
];

88 if–
m_pBuff
 )

90 
m_nLí
 = 
nLí
;

91 
	`mem˝y
(
m_pBuff
, 
pBuf
, 
m_nLí
);

93 
	}
}

95 
CD©aBuf„r
::~
	$CD©aBuf„r
()

97 if(
m_nLí
>0)

99 if(
m_pBuff
)

101 
dñëe
 
m_pBuff
;

102 
m_pBuff
 = 
NULL
;

104 
m_nLí
 = 0;

106 
m_objPªv
 = 
NULL
;

107 
m_objNext
 = 
NULL
;

108 
	}
}

110 
CD©aBuf„r
::
	$GëBuf„r
(*
pBuf
)

112 if–
m_pBuff
 ) 
	`mem˝y
(
pBuf
, m_pBuff, 
m_nLí
);

113  
m_nLí
;

114 
	}
}

116 * 
CD©aBuf„r
::
	$GëBuf„r
()

118  
m_pBuff
;

119 
	}
}

121 
CD©aBuf„r
::
	$GëBufLí
()

123  
m_nLí
;

124 
	}
}

128 
CMyLi°
::
	$CMyLi°
()

130 
m_nSize
 = 0;

131 
m_objFút
 = 
NULL
;

132 
m_objLa°
 = 
m_objFút
;

133 
m_objA˘uÆ
 = 
m_objFút
;

134 
	}
}

136 
CMyLi°
::~
	$CMyLi°
()

138  
m_objFút
 )

140 
CD©aBuf„r
* 
pTemp
 = 
m_objFút
;

141 
m_objFút
 = m_objFút->
m_objNext
;

142 
dñëe
 
pTemp
;

143 
pTemp
 = 
NULL
;

145 
	`CMyLi°
();

146 
	}
}

148 
CMyLi°
::
	$GëSize
()

150  
m_nSize
;

151 
	}
}

153 
boﬁ
 
CMyLi°
::
	$AddObj
(
CD©aBuf„r
* 
pObj
)

155 if–!
pObj
 )  
Ál£
;

156  
åue
;

157 
	}
}

159 
CD©aBuf„r
* 
CMyLi°
::
	$GëFút
()

161 
m_objA˘uÆ
 = 
m_objFút
;

162  
m_objFút
;

163 
	}
}

165 
CD©aBuf„r
* 
CMyLi°
::
	$GëLa°
()

167 
m_objFút
 = 
m_objLa°
;

168  
m_objLa°
;

169 
	}
}

171 
CD©aBuf„r
* 
CMyLi°
::
	$GëNext
(
CD©aBuf„r
* 
pObj
)

173 if–!
pObj
 )  
NULL
;

174  
pObj
->
m_objNext
;

175 
	}
}

177 
CD©aBuf„r
* 
CMyLi°
::
	$GëPªv
(
CD©aBuf„r
* 
pObj
)

179 if–!
pObj
 )  
NULL
;

180  
pObj
->
m_objPªv
;

181 
	}
}

186 
CProfûe
::
	$CProfûe
()

188 
m_fdFûe
 = 0;

189 
	`•rötf
(
m_szFûeName
, "%s", "");

190 
	}
}

192 
CProfûe
::
	$CProfûe
(* 
ÕszName
)

194 
	`•rötf
(
m_szFûeName
, "%s", 
ÕszName
);

196 if–
	`O≥nFûe
(
ÕszName
) )

198 
szLöe
[
MAX_LINE_LEN
];

199  
	`GëTextLöe
(
m_fdFûe
, 
szLöe
, (szLine)) > 0 )

201 
	`…rim
(
szLöe
);

202 
	`πrim
(
szLöe
);

203 if–
szLöe
[0]==';' || szLine[0]=='#' ) ;

204 
nLí
 = 
	`°æí
(
szLöe
);

205 if–
nLí
 <= 0 ) ;

207 
CD©aBuf„r
 *
pObj
 = 
√w
 
	`CD©aBuf„r
(
szLöe
, 
nLí
+1);

208 
m_LöeAºay
.
	`push_back
(
pObj
);

210 
	`CBuf„rAºay
(
m_LöeAºay
).
	`sw≠
(m_LineArray);

212 
	}
}

214 
CProfûe
::~
	$CProfûe
()

216 if(
m_fdFûe
Ë
	`f˛o£
(m_fdFile);

218 
nCou¡
 = 
m_LöeAºay
.
	`size
();

219 if–
nCou¡
 > 0 )

221 
nCou¡
--Ë
dñëe
 
m_LöeAºay
[nCount];

222 
m_LöeAºay
.
	`˛ór
();

224 
	}
}

226 
boﬁ
 
CProfûe
::
	$IsVÆid
()

228  (
m_fdFûe
 !
NULL
);

229 
	}
}

231 
boﬁ
 
CProfûe
::
	$O≥nFûe
(* 
ÕszName
)

233 
m_fdFûe
 = 
	`f›í
(
ÕszName
, "r");

234  
	`IsVÆid
();

235 
	}
}

237 
CProfûe
::
	$GëProfûeSåög
(* 
ÕAµName
,

238 * 
ÕKeyName
,

239 * 
ÕDeÁu…
,

240 * 
ÕszBuff
, 
nSize
,

241 
FILE
* 
fd
)

243 
nLí
;

244 
szSe˘
[64], *
p
;

245 
szLöe
[
MAX_LINE_LEN
];

247 if–
fd
 > 0 )

249 
	`•rötf
(
szSe˘
, "[%s]", 
ÕAµName
);

250 
	`f£ek
(
fd
, 0, 
SEEK_SET
);

251  
	`GëTextLöe
(
fd
, 
szLöe
, (szLine)) > 0 )

253 
	`…rim
(
szLöe
);

254 
	`πrim
(
szLöe
);

255 if–
szLöe
[0]==';' || szLine[0]=='#' ) ;

257 if–
	`°rcmp
(
szLöe
, 
szSe˘
) == 0 ) ;

259  
	`GëTextLöe
(
fd
, 
szLöe
, (szLine)) > 0 )

261 
	`…rim
(
szLöe
);

262 
	`πrim
(
szLöe
);

263 if–
szLöe
[0]==';' || szLine[0]=='#' ) ;

265 if–
	`°rchr
(
szLöe
, '[') < strchr(szLine, ']') ) ;

266 if–!
	`°Ωbrk
(
szLöe
, "=") ) ;

267 
p
 = 
	`°πok
(
szLöe
, "=");

268 if–!
	`°rcmp
(
p
, 
ÕKeyName
) )

270 
p
 = 
	`°πok
(
NULL
, "= ");

271 
nLí
 = 
	`mö
(()
	`°æí
(
p
), 
nSize
-1);

272 
	`°∫˝y
(
ÕszBuff
, 
p
, 
nLí
);

273 
ÕszBuff
[
nLí
] = '\0';

274  
nLí
;

278 
nLí
 = 
	`°æí
(
ÕDeÁu…
);

279 
	`°r˝y
(
ÕszBuff
, 
ÕDeÁu…
);

280  
nLí
;

281 
	}
}

283 
CProfûe
::
	$GëProfûeI¡
(* 
ÕAµName
,

284 * 
ÕKeyName
,

285 
nDeÁu…
,

286 
FILE
* 
fd
)

288 
nVÆ
=
nDeÁu…
;

289 
szDeÁu…
[16], 
szBuff
[32];

291 
	`•rötf
(
szDeÁu…
, "%d", 
nDeÁu…
);

292 if(
	`GëProfûeSåög
(
ÕAµName
, 
ÕKeyName
, 
szDeÁu…
, 
szBuff
, 32, 
fd
)>0)

294 
nVÆ
 = 
	`©oi
(
szBuff
);

296  
nVÆ
;

297 
	}
}

299 
CProfûe
::
	$FödProfûeSåög
–* 
ÕAµName
,

300 * 
ÕKeyName
,

301 * 
ÕDeÁu…
,

302 * 
ÕszBuff
, 
nSize
 )

304 
i
, 
nCou¡
, 
nLí
;

305 
szSe˘
[64], *
p
;

306 
szLöe
[
MAX_LINE_LEN
];

307 
CD©aBuf„r
 *
pObj
;

309 
nCou¡
 = 
m_LöeAºay
.
	`size
();

310 if–
nCou¡
 > 0 )

312 
	`•rötf
(
szSe˘
, "[%s]", 
ÕAµName
);

313  
i
=0; i<
nCou¡
; i++ )

315 
pObj
 = 
m_LöeAºay
[
i
];

316 if–
pObj
 =
NULL
 ) ;

317 
pObj
->
	`GëBuf„r
(
szLöe
);

318 if–
	`°rcmp
(
szLöe
, 
szSe˘
) == 0 ) ;

321  
i
=i+1; i<
nCou¡
; i++ )

323 
pObj
 = 
m_LöeAºay
[
i
];

324 if–
pObj
 =
NULL
 ) ;

325 
pObj
->
	`GëBuf„r
(
szLöe
);

326 if–
	`°rchr
(
szLöe
, '[') < strchr(szLine, ']') ) ;

327 if–!
	`°Ωbrk
(
szLöe
, "=") ) ;

328 
p
 = 
	`°πok
(
szLöe
, "=");

329 if–
	`°rcmp
(
p
, 
ÕKeyName
) == 0 )

331 
p
 = 
	`°πok
(
NULL
, "= ");

332 if–
p
 =
NULL
 )

335 
nLí
 = 
	`mö
(()
	`°æí
(
p
), 
nSize
-1);

336 
	`°∫˝y
(
ÕszBuff
, 
p
, 
nLí
);

337 
ÕszBuff
[
nLí
] = '\0';

338  
nLí
;

342 
nLí
 = 
	`°æí
(
ÕDeÁu…
);

343 
	`°r˝y
(
ÕszBuff
, 
ÕDeÁu…
);

344  
nLí
;

345 
	}
}

347 
CProfûe
::
	$FödProfûeI¡
–* 
ÕAµName
,

348 * 
ÕKeyName
,

349 
nDeÁu…
 )

351 
nVÆ
=
nDeÁu…
;

352 
szDeÁu…
[16], 
szBuff
[32];

354 
	`•rötf
(
szDeÁu…
, "%d", 
nDeÁu…
);

355 if(
	`FödProfûeSåög
(
ÕAµName
, 
ÕKeyName
, 
szDeÁu…
, 
szBuff
, 32)>0)

357 
nVÆ
 = 
	`©oi
(
szBuff
);

359  
nVÆ
;

360 
	}
}

362 
CProfûe
::
	$GëProfûeSåög
(* 
ÕAµName
,

363 * 
ÕKeyName
,

364 * 
ÕDeÁu…
,

365 * 
ÕszBuff
,

366 
nSize
)

368 if–
m_LöeAºay
.
	`size
() > 0 )

369  
	`FödProfûeSåög
(
ÕAµName
, 
ÕKeyName
, 
ÕDeÁu…
, 
ÕszBuff
, 
nSize
);

371  
	`GëProfûeSåög
(
ÕAµName
, 
ÕKeyName
, 
ÕDeÁu…
, 
ÕszBuff
, 
nSize
, 
m_fdFûe
);

372 
	}
}

374 
CProfûe
::
	$GëProfûeI¡
(* 
ÕAµName
,

375 * 
ÕKeyName
,

376 
nDeÁu…
 )

378 if–
m_LöeAºay
.
	`size
() > 0 )

379  
	`FödProfûeI¡
(
ÕAµName
, 
ÕKeyName
, 
nDeÁu…
);

381  
	`GëProfûeI¡
(
ÕAµName
, 
ÕKeyName
, 
nDeÁu…
, 
m_fdFûe
);

382 
	}
}

	@profile.h

5 #i‚de‡
_PROFILE_H__


6 
	#_PROFILE_H__


	)

8 
	~<°dio.h
>

9 
	~<ve˘‹
>

10 
	~"Ty≥def.h
"

14 #ifde‡
__˝lu•lus


17 #ifde‡
__˝lu•lus


24 ˛as†
	cCD©aBuf„r


26 
public
:

27 
CD©aBuf„r
();

28 
CD©aBuf„r
(*
pBuf
, 
nLí
);

29 
vútuÆ
 ~
CD©aBuf„r
();

32 
public
:

33 
m_nLí
;

34 *
m_pBuff
;

36 
public
:

37 
CD©aBuf„r
* 
m_objPªv
;

38 
CD©aBuf„r
* 
m_objNext
;

41 
public
:

42 
GëBuf„r
(*
pBuf
);

43 * 
GëBuf„r
();

44 
GëBufLí
();

47 
°d
::
	tve˘‹
<
	tCD©aBuf„r
*> 
	tCBuf„rAºay
;

52 ˛as†
	cCMyLi°


54 
public
:

55 
CMyLi°
();

56 
vútuÆ
 ~
CMyLi°
();

59 
¥Ÿe˘ed
:

60 
m_nSize
;

61 
CD©aBuf„r
* 
m_objFút
;

62 
CD©aBuf„r
* 
m_objLa°
;

63 
CD©aBuf„r
* 
m_objA˘uÆ
;

66 
public
:

67 
GëSize
();

68 
boﬁ
 
AddObj
(
CD©aBuf„r
* 
pObj
);

69 
CD©aBuf„r
* 
GëFút
();

70 
CD©aBuf„r
* 
GëLa°
();

71 
CD©aBuf„r
* 
GëNext
(CD©aBuf„r* 
pObj
);

72 
CD©aBuf„r
* 
GëPªv
(CD©aBuf„r* 
pObj
);

78 ˛as†
	cCProfûe


80 
public
:

81 
CProfûe
();

82 
CProfûe
(* 
ÕszName
);

83 ~
CProfûe
();

86 
public
:

87 
FILE
* 
m_fdFûe
;

88 
m_szFûeName
[64];

89 
CBuf„rAºay
 
m_LöeAºay
;

92 
public
:

93 
boﬁ
 
IsVÆid
();

94 
boﬁ
 
O≥nFûe
(* 
ÕszName
);

95 
GëProfûeSåög
–* 
ÕAµName
,

96 * 
ÕKeyName
,

97 * 
ÕDeÁu…
,

98 * 
ÕszBuff
, 
nSize
,

99 
FILE
* 
fd
 );

100 
GëProfûeI¡
–* 
ÕAµName
,

101 * 
ÕKeyName
,

102 
nDeÁu…
,

103 
FILE
* 
fd
 );

105 
FödProfûeSåög
–* 
ÕAµName
,

106 * 
ÕKeyName
,

107 * 
ÕDeÁu…
,

108 * 
ÕszBuff
, 
nSize
 );

109 
FödProfûeI¡
–* 
ÕAµName
,

110 * 
ÕKeyName
,

111 
nDeÁu…
 );

113 
GëProfûeSåög
–* 
ÕAµName
,

114 * 
ÕKeyName
,

115 * 
ÕDeÁu…
,

116 * 
ÕszBuff
, 
nSize
 );

117 
GëProfûeI¡
–* 
ÕAµName
,

118 * 
ÕKeyName
,

119 
nDeÁu…
 );

	@structure.h

1 #i‚de‡
STRUCTURE_H


2 
	#STRUCTURE_H


	)

4 
	~"Ty≥def.h
"

5 
	~"ComP‹t/ccomp‹t.h
"

6 
	~"PrŸo/˝rŸocﬁ.h
"

7 
	#TOTAL_BUS
 15

8 

	)

10 
	#BUS_PATH
 "./c⁄fig/BusLöe.öi"

	)

11 
	#PIC_PATH
 "./c⁄fig/Pic.öi"

	)

12 
	#PICNO_PATH
 "./c⁄fig/Pics/"

	)

13 
	#OBJECT_PATH
 "./c⁄fig/Obje˘s.öi"

	)

14 
	#BINDDATANO_PATH
 "./c⁄fig/Pics/"

	)

15 
	#STATIONNO_PATH
 "./c⁄fig/Sèti⁄/"

	)

16 
	#CABLE_PATH
 "./c⁄fig/CabÀ.öi"

	)

17 
	#CIRCUITNO_PATH
 "./c⁄fig/CabÀ/"

	)

18 
	#LOOPNO_PATH
 "./c⁄fig/CabÀ/"

	)

19 
	#ALARM_PATH
 "./c⁄fig/Pics/"

	)

22 #¥agm®
∑ck
( 1 )

24 
˛ass
 
	gCMsg
 ;

28 
	ssSYSPAGE


30 
BYTE
 
	mbyPageNo
;

31 
QELEMENT_ARRAY
 
	mm_EÀAºay
 ;

32 
	m°rPicTôÀ
[ 50 ] ;

34 
	mpWÆl_SysPage
[64];

37 
BYTE
 
	mpW¨eHome
;

39 
QPIC_NODE_TO_ID_MAP
 
	mm_AŒEÀmítNodeToPicId_M≠
;

40 
QPIC_NODE_TO_ID_ARRAY
 
	mm_PowîEÀmítNodeToPicId_Aºay
;

41 
sSYSPAGE
–):
m_EÀAºay
( 0 )

43 
mem£t
–
°rPicTôÀ
 , 0, ( strPicTitle ) );

45 
mem£t
–
pWÆl_SysPage
 , 0, (ÖWall_SysPage ) );

48 }
	tST_SYSPAGE
,*
	tPST_SYSPAGE
;

51 ˛as†
	cAœrm
{

52 
	mpublic
:

53 
BYTE
 
∑geid
;

54 
BYTE
 
	mobjid
;

55 
BYTE
 
	mid
;

56 
BYTE
 
	mbu¢o
;

57 
BYTE
 
	mdevaddr
;

58 
WORD
 
	mpoöt
;

60 
WORD
 
	mª£rv©i⁄
;

61 
	mt›pﬁe
;

62 
	mt›
;

63 
	mvÆuë›
;

64 
	mvÆuebŸtom
;

65 
	mbŸtom
;

66 
	mbŸtompﬁe
;

82 
	s_ELE_FST


84 
WORD
 
	mwObje˘ID
 ;

85 
WORD
 
	mwEÀmítTy≥
 ;

86 
WORD
 
	mwPageNo
 ;

87 
WORD
 
	mwLökObje˘Id
;

88 
WORD
 
	mwDúe˘
 ;

89 
WORD
 
	mwLe·
 ;

90 
WORD
 
	mwT›
 ;

91 
WORD
 
	mwRight
 ;

92 
WORD
 
	mwBŸtom
 ;

93 
	mãxt
[50];

95 
	mpi˙ame
[50];

96 
	mpicöåodu˚
[50];

99 
Aœrm
 
	mRñaAœ
;

100 
WORD
 
	mªœnum
;

102 
_ELE_FST
( )

104 
	mwObje˘ID
 = -1 ;

105 
	mwEÀmítTy≥
 = -1 ;

106 
	mwLe·
 = -1 ;

107 
	mwT›
 = -1 ;

108 
	mwRight
 = -1 ;

109 
	mwBŸtom
 = -1 ;

110 
	mwPageNo
 = -1 ;

111 
	mwLökObje˘Id
 = -1 ;

112 
	mwDúe˘
 = -1 ;

113 
mem£t
(
ãxt
,0,(text));

118 }
	tELE_FST
,*
	tPELE_FST
 ;

120 
	s_PAGE_ST


122 
_PAGE_ST
( )

124 
mem£t
–
pPageTôÀ
 , 0 , (ÖPageTitle ) );

126 
mem£t
(
pWÆlName
, 0, (pWallName));

128 
	mwEÀNumbî
 = -1 ;

129 
	mwPageNo
 = -1 ;

132 
	mpPageTôÀ
[ 50 ] ;

134 
	mpWÆlName
[64];

137 
BYTE
 
	mpW¨eHome
;

139 
WORD
 
	mwEÀNumbî
 ;

140 
WORD
 
	mwPageNo
 ;

141 
QELEMENT_FILEST_ARRAY
 
	mEÀmítAºay
 ;

142 }
	tPAGE_FST
 , *
	tPPAGE_FST
;

146 
	s_ègREALTIME
 {

147 
	mwYór
;

148 
	mwM⁄th
;

149 
	mwDayOfWìk
;

150 
	mwDay
;

151 
	mwHour
;

152 
	mwMöuã
;

153 
	mwSec⁄d
;

154 
	mwMûliSec
;

155 
_ègREALTIME
( )

157 
	mwYór
 = 0 ;

158 
	mwM⁄th
 = 0 ;

159 
	mwDayOfWìk
 = 0 ;

160 
	mwDay
 = 0 ;

161 
	mwHour
 = 0 ;

162 
	mwMöuã
 = 0 ;

163 
	mwSec⁄d
 = 0 ;

164 
	mwMûliSec
 = 0 ;

166 } 
	tREALTIME
,*
	tPREALTIME
 ;

168 
	sègTHREAD_STRUCT


170 
THREAD_PROC
 
	mThªadProc
 ;

171 
±hªad_t
 
	mtid
;

172 
CMsg
 *
	mpMsg
 ;

173 
ègTHREAD_STRUCT
( )

175 
	mtid
 = -1 ;

176 
	mThªadProc
 = 
NULL
 ;

177 
	mpMsg
 = 
NULL
 ;

179 }
	tSTHREAD_PROC
, *
	tPSTHREAD_PROC
;

183 
	sU§Pwd


185 
	mU§
[32];

186 
	mPwd
[32];

187 
U§Pwd
()

189 
mem£t
(
U§
,0,(Usr));

190 
mem£t
(
Pwd
,0,(Pwd));

192 }
	tUSRPWD
,*
	tPUSRPWD
;

194 
	sNëP¨am


196 
	mù
[16];

197 
	mmask
[16];

198 
	mg©eway
[16];

199 
	mdns
[16];

200 
	m«me
[16];

201 
NëP¨am
()

203 
mem£t
(
ù
,0,(ip));

204 
mem£t
(
mask
,0,(mask));

205 
mem£t
(
g©eway
,0,(gateway));

206 
mem£t
(
dns
,0,(dns));

207 
mem£t
(
«me
,0,(name));

209 }
	tNETPARAM
,*
	tPNETPARAM
;

212 
	sègMsg


214 
ègMsg
( )

216 
	mmsgTy≥
 = 0 ;

217 
	mpVoid
 = 
NULL
 ;

218 
	mmsgSize
 = ( * ) + ( ) ;

221 
	mmsgTy≥
 ;

222 * 
	mpVoid
 ;

223 
	mmsgSize
 ;

225 }
	tLMSG
, *
	tPLMSG
 ;

227 
	sMSG_Såu˘


229 
MSG_Såu˘
( )

231 
	mmsgCu°omTy≥
 = 0 ;

233 
	mvútuÆ
 ~
MSG_Såu˘
(){ }

235 
DWORD
 
	mmsgCu°omTy≥
 ;

237 íum{ 
	mMSG_UPD_LOGINTIME
 = 0x9000 ,

238 
	mMSG_YK


240 }
	tSMSG
 , *
	tPSMSG
;

242 
	g_YK_Såu˘
 : 
	tpublic
 
	tSMSG


244 
_YK_Såu˘
( )

246 
msgCu°omTy≥
 = 
MSG_YK
 ;

247 
	gbyA˘i⁄
 = 
YK_NULL
 ;

248 
	gwBusNoDe°
 = -1 ;

249 
	gwAddrDe°
 = -1 ;

250 
	gwP¡NoDe°
 = -1 ;

252 
	gwBusNoSrc
 = -1 ;

253 
	gwAddrSrc
 = -1 ;

254 
	gwP¡NoSrc
 = -1 ;

256 
	gwVÆ
 = -1 ;

259 
WORD
 
	gwBusNoSrc
;

260 
WORD
 
	gwAddrSrc
;

261 
WORD
 
	gwP¡NoSrc
;

263 
WORD
 
	gwBusNoDe°
 ;

264 
WORD
 
	gwAddrDe°
 ;

265 
WORD
 
	gwP¡NoDe°
 ;

267 
BYTE
 
	gbyA˘i⁄
 ;

268 
WORD
 
	gwVÆ
 ;

269 }
	tYKST_MSG
,*
	tPYKST_MSG
;

271 
	g_UpD©eLogöTime
 : 
	tpublic
 
	tSMSG


273 
_UpD©eLogöTime
( )

275 
msgCu°omTy≥
 = 
MSG_UPD_LOGINTIME
 ;

278 ~
_UpD©eLogöTime
( )

281 
	gmsgCu°omTy≥
 = 0 ;

284 }
	tUPD_LOGTime
,*
	tPUPD_LOGTime
;

286 
	sPr›îty


288 
Pr›îty
( )

290 
	mm_ComTy≥
 = 
COM_NULL
 ;

291 
	mwP‹tNo
 = -1 ;

292 
	mwBP‹tNo
 = -1 ;

293 
	mpComP‹t
 = 
NULL
 ;

295 
	mvútuÆ
 ~
Pr›îty
(){ }

296 
	eComTy≥
{ 
	mCOMRS485
 = 0x11 , 
	mLAN_SERVER
 , 
	mLAN_CLIENT
 , 
	mPAUSETYPE
 , 
	mCOM_NULL
 } ;

297 
ComTy≥
 
	mm_ComTy≥
 ;

298 
WORD
 
	mwP‹tNo
 ;

299 
WORD
 
	mwBP‹tNo
 ;

300 
CComP‹t
 * 
	mpComP‹t
 ;

303 
	gLAN_SERVER_Pr›îty
 : 
public
 
Pr›îty


305 
LAN_SERVER_Pr›îty
( )

307 
m_ComTy≥
 = 
LAN_SERVER
 ;

308 
	gwP‹tNo
 = -1 ;

309 
	gwBP‹tNo
 = -1 ;

310 
mem£t
–
£rvîIp
 , 0 , ( serverIp ) );

313 
	gvútuÆ
 ~
LAN_SERVER_Pr›îty
( )

315 if–
	gpComP‹t
 )

317 
dñëe
 
	gpComP‹t
 ;

318 
	gpComP‹t
 = 
NULL
 ;

322 
	g£rvîIp
[32] ;

325 
	gLAN_CLIENT_Pr›îty
 : 
public
 
Pr›îty


327 
LAN_CLIENT_Pr›îty
( )

329 
m_ComTy≥
 = 
LAN_CLIENT
 ;

330 
	gwP‹tNo
 = -1 ;

331 
	gwBP‹tNo
 = -1 ;

332 
mem£t
–
˛õ¡Ip
 , 0 , ( clientIp ) );

335 
	gvútuÆ
 ~
LAN_CLIENT_Pr›îty
( )

337 if–
	gpComP‹t
 )

339 
dñëe
 
	gpComP‹t
 ;

340 
	gpComP‹t
 = 
NULL
 ;

344 
	g˛õ¡Ip
[32] ;

347 
	gCOM_Pr›îty
 : 
public
 
Pr›îty


349 
COM_Pr›îty
( )

351 
m_ComTy≥
 = 
COMRS485
 ;

352 
	gwP‹tNo
 = -1 ;

353 
	gwBP‹tNo
 = -1 ;

354 
	gwBaud
 = 9600 ;

355 
	gbyD©aBôs
 = 8 ;

356 
	gbySt›Bôs
 = 1 ;

357 
	gbyP¨ôy
 = 'n' ;

359 ~
COM_Pr›îty
()

363 
DWORD
 
	gwBaud
 ;

364 
BYTE
 
	gbyD©aBôs
 ;

365 
BYTE
 
	gbySt›Bôs
 ;

366 
BYTE
 
	gbyP¨ôy
 ;

369 
	sègD©aRoŸ


371 
BYTE
 
	mbyD©aTy≥
 ;

372 
WORD
 
	mwBusNo
;

373 
WORD
 
	mwAddr
;

374 
WORD
 
	mwP¡No
;

375 
WORD
 
	mwTønsNo
[ 
TOTAL_BUS
 ];

376 
	mchName
[ 50 ];

377 
	eDATA_TYPE
{ 
	mYC_DTYPE
=1 , 
	mYX_DTYPE
 , 
	mYM_DTYPE
 , 
	mYK_DTYPE
};

378 }
	tD©aTy≥
,*
	tPD©aTy≥
 ;

380 
	gD©aTy≥
::
	tDATA_TYPE
 
	tDATETYPE
 ;

383 
	gègYX_STRUCT
 :
	tpublic
 
	tD©aTy≥


385 
ègYX_STRUCT
()

387 
byD©aTy≥
 = 
D©aTy≥
::
YX_DTYPE
 ;

388 
mem£t
–
chName
 , 0 , ( chName ) ) ;

389 
	gbyVÆue
 = 0 ;

390 
	gbyRevî£
 = 0 ;

391 
	gbyW¨n
 = 0 ;

392 
	gwBusNo
 = -1 ;

393 
	gwAddr
 = -1 ;

394 
	gwP¡No
 = -1 ;

395 
mem£t
–
wTønsNo
 , 0 , ( wTransNo ) ) ;

399 
BYTE
 
	gbyVÆue
 ;

400 
BYTE
 
	gbyRevî£
 ;

401 
BYTE
 
	gbyW¨n
 ;

403 }
	tYXST
,*
	tPYXST
;

405 
	sègYcOvîThªsd


407 
ègYcOvîThªsd
()

409 
	mfVÆue
 = 0 ;

410 
	mwBusNo
 = 0 ;

411 
	mwAddr
 = 0 ;

412 
	mwP¡No
 = 0 ;

413 
	mbyYxvÆ
 = 0 ;

416 
	mfVÆue
;

417 
WORD
 
	mwBusNo
;

418 
WORD
 
	mwAddr
;

419 
WORD
 
	mwP¡No
;

420 
BYTE
 
	mbyYxvÆ
 ;

422 }
	tYCOVERTHRESD
;

425 
	gègYC_STRUCT
:
	tpublic
 
	tD©aTy≥


427 
ègYC_STRUCT
()

429 
byD©aTy≥
 = 
D©aTy≥
::
YC_DTYPE
 ;

430 
mem£t
–
chName
 , 0 , ( chName ) );

431 
	gwBusNo
 = -1 ;

432 
	gwAddr
 = -1 ;

433 
	gwP¡No
 = -1 ;

434 
	gfVÆue
 = 0 ;

435 
	gfBa£VÆue
 = 0 ;

436 
	gfC€fficõ¡
 = 0.1 ;

437 
	gfSídBa£VÆue
 = 0 ;

438 
	gfSídC€fficõ¡
 = 1 ;

439 
	gfThv
 = 0 ;

440 
	gbyW¨n
 = 0 ;

441 
mem£t
–
wTønsNo
 , 0 , ( wTransNo ) ) ;

442 
	gfVÆ_1Time
 = 0 ;

446 
	gfVÆue
;

447 
	gfBa£VÆue
;

448 
	gfC€fficõ¡
;

449 
	gfSídBa£VÆue
;

450 
	gfSídC€fficõ¡
;

451 
	gfThv
;

452 
	gfVÆ_1Time
;

454 
BYTE
 
	gbyW¨n
;

455 
YCOVERTHRESD
 
	gfLowVÆue
 ;

456 
YCOVERTHRESD
 
	gfLowîVÆue
 ;

457 
YCOVERTHRESD
 
	gfHighVÆue
 ;

458 
YCOVERTHRESD
 
	gfHighîVÆue
 ;

460 }
	tYCST
,*
	tPYCST
;

462 
	gègYM_STRUCT
 : 
	tpublic
 
	tD©aTy≥


464 
ègYM_STRUCT
( )

466 
byD©aTy≥
 = 
D©aTy≥
::
YM_DTYPE
 ;

467 
mem£t
–
chName
 , 0 , ( chName ) ) ;

468 
	gdwVÆue
 = 0 ;

469 
	gwBusNo
 = 0 ;

470 
	gwAddr
 = 0 ;

471 
	gwP¡No
 = 0 ;

472 
	gfBa£VÆue
 = 0.0 ;

473 
	gfC€fficõ¡
 = 1 ;

474 
mem£t
–
wTønsNo
 , 0 , ( wTransNo ) ) ;

475 
	gdVÆ_1Time
 = 0 ;

479 
DWORD
 
	gdwVÆue
;

480 
	gdVÆ_1Time
 ;

481 
	gfBa£VÆue
;

482 
	gfC€fficõ¡
;

483 } 
	tYMST
,*
	tPYMST
;

485 
	gègYK_STRUCT
 : 
	tpublic
 
	tD©aTy≥


487 
ègYK_STRUCT
( )

489 
byD©aTy≥
 = 
D©aTy≥
::
YK_DTYPE
 ;

490 
	gwBusNo
 = -1 ;

491 
	gwAddr
 = -1 ;

492 
	gwP¡No
 = -1 ;

493 
mem£t
–
wTønsNo
 , 0 , ( wTransNo ) ) ;

495 }
	tYKST
 , *
	tPYKST
;

497 
	sègDev°


499 
ègDev°
( )

501 
	mwBusNo
 = -1 ;

502 
	mwAddr
 = -1 ;

503 
	mwDevSèã
 = 
COMM_ABNORMAL
 ;

504 
	mwYx
 = 0 ;

505 
	mwYc
 = 0 ;

506 
	mwYm
 = 0 ;

507 
	mwYK
 = 0 ;

508 
	mycAºay
.
˛ór
() ;

509 
	myxAºay
.
˛ór
();

510 
	mymAºay
.
˛ór
() ;

511 
	mwPrŸoModuÀNo
 = -1 ;

512 
mem£t
(
°em∂©e
,0,(stemplate));

514 ~
ègDev°
()

516 
	mycAºay
.
˛ór
();

517 
	myxAºay
.
˛ór
();

518 
	mymAºay
.
˛ór
();

521 
WORD
 
	mwBusNo
 ;

522 
WORD
 
	mwAddr
 ;

523 
WORD
 
	mwPrŸoModuÀNo
 ;

524 
WORD
 
	mwDevSèã
 ;

525 
	m°em∂©e
[64];

526 
WORD
 
	mwYx
;

527 
WORD
 
	mwYc
;

528 
WORD
 
	mwYm
;

529 
WORD
 
	mwYK
 ;

530 
QDEV_DATA_ARRAY
 
	mycAºay
 ;

531 
QDEV_DATA_ARRAY
 
	myxAºay
 ;

532 
QDEV_DATA_ARRAY
 
	mymAºay
 ;

533 
QDEV_DATA_ARRAY
 
	mykAºay
 ;

534 }
	tDEVST
 ,*
	tPDEVST
;

536 
	s_BUS_LINE


538 
_BUS_LINE
()

540 
	mwBusNo
 = -1 ;

541 
mem£t
–
szBusName
 , 20 , ( szBusName ) ) ;

542 
	mpPrŸo
 = 
NULL
 ;

543 
	mwI¡îvÆ
 = 10 ;

544 
	mwTŸÆDev
 = 0 ;

545 
	mDevAºay
.
˛ór
() ;

546 
	mpPr›îty
 = 
NULL
 ;

547 
	mbyBusTy≥
 = 
BUS_PAUSE
 ;

548 
	mwBusCommSèã
 = 
COMM_ABNORMAL
 ;

549 
	mwPr›îtyTy≥
 = 
Pr›îty
::
COM_NULL
 ;

550 
	mwPrŸoTy≥
 = 
PROTO_NULL
 ;

551 
	mpThªadProc
 = 
NULL
 ;

552 
mem£t
–
PrŸodŒP©h
 , 0 , ( ProtodllPath ) ) ;

553 
	mdwSídNo
 = 0 ;

554 
	mdwRecvNo
 = 0 ;

557 
WORD
 
	mwBusNo
 ;

558 
	mszBusName
[20] ;

559 
BYTE
 
	mbyBusTy≥
 ;

560 
WORD
 
	mwI¡îvÆ
 ;

561 
WORD
 
	mwTŸÆDev
 ;

562 
WORD
 
	mwBusCommSèã
 ;

563 
	mm_BusSåög
[ 200 ] ;

564 
PSTHREAD_PROC
 
	mpThªadProc
 ;

565 
QDEV_ARRAY
 
	mDevAºay
 ;

567 
Pr›îty
 * 
	mpPr›îty
 ;

568 
WORD
 
	mwPr›îtyTy≥
 ;

570 
WORD
 
	mwPrŸoTy≥
 ;

571 
CPrŸocﬁ
 * 
	mpPrŸo
 ;

572 
	mPrŸodŒP©h
[200];

575 
DWORD
 
	mdwSídNo
 , 
	mdwRecvNo
 ;

577 }
	tBUS_LINEST
 , *
	tPBUS_LINEST
;

579 
	s_CABINET


581 
_CABINET
()

583 
mem£t
–
sName
 , 0 , ( sName ) );

584 
	mwSîülNo
 = -1 ;

586 ~
_CABINET
( )

588 
	mcúcuôAºay
.
˛ór
();

591 
QSCIRCUIT_MAP
 
	mcúcuôAºay
 ;

592 
	msName
[ 100 ] ;

593 
WORD
 
	mwSîülNo
 ;

594 }
	tCABINET
 , *
	tpCABINET
;

596 
	s_SINGALCIRCUIT


598 
_SINGALCIRCUIT
( )

600 
	mycAºay
.
˛ór
();

601 
	myxAºay
.
˛ór
();

602 
	mymAºay
.
˛ór
();

603 
mem£t
–
sName
 , 0 , ( sName ) ) ;

604 
	mwSîülNo
 = -1 ;

606 ~
_SINGALCIRCUIT
( )

608 
	mycAºay
.
˛ór
();

609 
	myxAºay
.
˛ór
();

610 
	mymAºay
.
˛ór
();

613 
	msName
[ 100 ] ;

614 
WORD
 
	mwSîülNo
 ;

615 
QDEV_DATA_ARRAY
 
	mycAºay
 ;

616 
QDEV_DATA_ARRAY
 
	myxAºay
 ;

617 
QDEV_DATA_ARRAY
 
	mymAºay
 ;

618 }
	tSINGLECIRCUIT
,*
	tPSINGLECIRCUIT
;

621 
	s_Pic_Aâribuã_D©a_ST


623 
_Pic_Aâribuã_D©a_ST
( )

625 
	mwBusNo
 = -1;

626 
	mwAddr
 = -1;

627 
	mwP¡No
 = -1;

628 
	mbyAâribuãD©aByã
 = -1;

629 
	mbyD©aTy≥
 = -1;

630 
mem£t
(
«me
,0,(name));

632 
mem£t
(&
RñaYk
, 0, (RelaYk));

636 
WORD
 
	mwBusNo
;

637 
WORD
 
	mwAddr
;

638 
WORD
 
	mwP¡No
;

639 
BYTE
 
	mbyAâribuãD©aByã
;

640 
BYTE
 
	mbyD©aTy≥
 ;

641 
	m«me
[50];

644 
Aœrm
 
	mRñaYk
;

647 
Aœrm
 
	mRñaYk1
;

649 
	eATTRIBUTE_DATA_TYPE
{ 
	mYC_DTYPE
 = 1 , 
	mYX_DTYPE
 , 
	mYM_DTYPE
 , 
	mYK_DTYPE
};

650 }
	tPIC_ATTRIBUTE_DATA_FST
 , *
	tPPIC_ATTRIBUTE_DATA_FST
;

652 
	g_Pic_Aâribuã_D©a_EÀmít
 : 
	tpublic
 
	tPIC_ATTRIBUTE_DATA_FST


654 
_Pic_Aâribuã_D©a_EÀmít
( )

656 
dbVÆ
 = 0.0;

658 
	gdbVÆ
;

659 }
	tPIC_ATTRIBUTE_DATA_ELEMENT
 , *
	tPPIC_ATTRIBUTE_DATA_ELEMENT
;

661 
	s_Pic_Aâribuã_ST


663 
_Pic_Aâribuã_ST
( )

665 
	mwObje˘ID
 = -1;

666 
	mD©aAºay
.
˛ór
();

668 ~
_Pic_Aâribuã_ST
( )

670 
	mD©aAºay
.
˛ór
();

673 
WORD
 
	mwObje˘ID
 ;

674 
WORD
 
	mwObje˘NodeL
 ;

675 
WORD
 
	mwObje˘NodeR
 ;

676 
	mObje˘Name
[32];

677 
QPIC_ATTRIBUTE_DATA_FST
 
	mD©aAºay
 ;

678 }
	tPIC_ATTRIBUTE_FST
 , *
	tPPIC_ATTRIBUT_FST
;

681 
	sègBusD©a


683 
ègBusD©a
( )

685 
mem£t
–
m_BusSåög
 , 0 , ( m_BusString ) ) ;

686 
	mm_BusTy≥
 = 
Pr›îty
::
PAUSETYPE
 ;

687 
	mm_BusI¡îvÆ
 = 0 ;

692 
mem£t
–
m_szPrötNëC¨d
, 0, ( m_szPrintNetCard ) );

693 
mem£t
–
m_szPrötRemŸeIp
, 0, ( m_szPrintRemoteIp ) );

695 
	mm_BusSåög
[ 200 ] ;

696 
	mm_BusTy≥
 ;

697 
WORD
 
	mm_BusI¡îvÆ
 ;

701 
	mm_szIP
[24];

702 
	mm_NëC¨dName
[ 30 ];

703 
	mm_PrŸocﬁDŒP©h
[ 200 ] ;

706 
	mm_szPrötNëC¨d
[5];

707 
	mm_szPrötRemŸeIp
[16];

708 
DWORD
 
	mm_dwPrötSèπP‹tNum
;

709 }
	tBUSDATA
, *
	tPBUSDATA
;

712 
	sègBusInfo


714 
	mpublic
:

715 
ègBusInfo
( )

718 ~
ègBusInfo
()

720 
RemoveAŒ
() ;

724 
BOOL
 
AddBusSåög
–
PBUSDATA
 
pBusD©a
 )

726 if–
	mpBusD©a
 =
NULL
 )

727  
FALSE
 ;

729 
	mm_busD©a
.
push_back
–
pBusD©a
 ) ;

731  
	mTRUE
 ;

734 
BOOL
 
RemoveAŒ
( )

736 
	mnCou¡
 = 
m_busD©a
.
size
();

737 if–
	mnCou¡
 > 0 )

739 
	mnCou¡
--)

740 
dñëe
 
	mm_busD©a
[
nCou¡
];

742 
	mm_busD©a
.
˛ór
();

744  
	mTRUE
 ;

747 
	mpublic
:

748 
QVe˘‹
<
PBUSDATA
> 
m_busD©a
 ;

749 }
	tINITBUS
 , *
	tPINITBUS
 ;

751 
	sègThªadP¨a


753 
	mhThªad
;

754 
±hªad_t
 
	mThªadID
 ;

755 }
	tTHREADPARA
 , *
	tPTHREADPARA
 ;

757 
	sègPicNode


759 
ègPicNode
( )

761 
	mPicNode
 = 0;

763 
BOOL
 
AddTheNodePicId
–
WORD
 
PicId
 )

765 
	mPicId_Aºay
.
push_back
–
PicId
 ) ;

766  
	mTRUE
 ;

768 
WORD
 
	mPicNode
;

769 
	mQVe˘‹
<
	mWORD
> 
	mPicId_Aºay
 ;

770 }
	tPICNODE
 , *
	tPPICNODE
 ;

772 #¥agm®
∑ck
( )

	@widget.cpp

1 
	~"widgë.h
"

2 
	~"ui_widgë.h
"

3 
	~"Pages/˝age.h
"

4 
	~"Pages/˝age_home.h
"

5 
	~"Pages/˝age_sy•ic.h
"

6 
	~"Pages/˝age_d©aquîy.h
"

7 
	~"Pages/˝age_dügno°ic.h
"

8 
	~"Pages/˝age_sy•¨amëî.h
"

9 
	~<QPaöãr
>

10 
	~<QImage
>

11 
	~"cglobÆ.h
"

12 
	~<QMou£Evít
>

13 
	~"°ru˘uª.h
"

14 
	~"PrŸo/˝rŸocﬁ.h
"

15 
	~"ComP‹t/SîülP‹t.h
"

16 
	~"ComP‹t/CT˝P‹tSîvî.h
"

17 
	~"ComP‹t/T˝Clõ¡.h
"

18 
	~"Ty≥def.h
"

19 
	~"PrŸo/publicmëhod.h
"

20 
	~"EÀmít/˚ñmít.h
"

21 
	~"Ba£P‹t.h
"

23 
	gWidgë
::
	$Widgë
(
QWidgë
 *
∑ª¡
) :

24 
	`QWidgë
(
∑ª¡
),

25 
	$ui
(
√w
 
Ui
::
Widgë
)

27 
ui
->
	`£tupUi
(
this
);

28 
m_wDevNum
 = 0;

31 
timîid
 = 
	`°¨tTimî
(1000);

35 
	}
}

37 
	gWidgë
::~
	$Widgë
()

39 if(
LogöDlg
 !
NULL
)

40 
dñëe
 
LogöDlg
;

41 if(
YkDlg
 !
NULL
)

42 
dñëe
 
YkDlg
;

43 if(
Numkeybﬂrd
 !
NULL
)

44 
dñëe
 
Numkeybﬂrd
;

45 
	`˛órD©a
();

46 
dñëe
 
ui
;

47 
	`¥ötf
("delete ui OK.\n");

48 
	}
}

50 
BOOL
 
	gWidgë
::
	$GëDevD©a
(
PBUS_LINEST
 
pBus
)

52 
m_sDevP©h
[128]="";

53 
m_PrŸoFûe
[32]="";

54 
	`mem£t
(
m_sDevP©h
, 0, (m_sDevPath));

55 
pBus
->
wPrŸoTy≥
)

57 
PROTO_MODBUS
:

58 
	`°r˝y
(
m_PrŸoFûe
, "ModBus");

60 
PROTO_MODBUSTCP
:

61 
	`°r˝y
(
m_PrŸoFûe
, "ModBusTcp");

64 
	`•rötf
(
m_sDevP©h
, "%s/%s/%s%02d.öi", 
SYSDATAPATH
, 
m_PrŸoFûe
, 
DEVNAME
, 
pBus
->
wBusNo
 + 1);

65 
CProfûe
 
	`¥ofûe
(
m_sDevP©h
);

67  
	`Pro˚ssFûeD©a
(
¥ofûe
, 
pBus
);

68 
	}
}

70 
BOOL
 
	gWidgë
::
	$Pro˚ssFûeD©a
(
CProfûe
 &
¥ofûe
, 
PBUS_LINEST
 
pBus
)

73 if(!
¥ofûe
.
	`IsVÆid
())

75 
	`¥ötf
("O≥¿fûê%†Faûed ! \¿", 
¥ofûe
.
m_szFûeName
);

76  
FALSE
;

79 
sSe˘
[ 200 ] = "DEVNUM";

80 
sKey
[ 20 ][ 100 ]={ "module", "serialno", "addr", "name", "template",

83 
WORD
 
wModuÀ
 = 0;

84 
£rü o
=1;

85 
WORD
 
addr
 =3;

86 
sName
[ 50 ] = { 0 };

87 
°em∂©e
[ 200 ] = { 0 };

88 
iNum
 = 0;

89 
yxnum
 = 0;

90 
y˙um
 = 0;

91 
ymnum
 = 0;

92 
yknum
 = 0;

94 
iNum
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, (*)"NUM", 0);

95 if(
iNum
 == 0)

97 
	`¥ötf
("Get DEVNUM Failed ! \n ");

98  
FALSE
;

101 
i
 = 0; i < 
iNum
; i++)

103 
	`•rötf
(
sSe˘
, "%s%03d", "DEV", 
i
 + 1);

105 
wModuÀ
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
[ 0 ], 0);

106 
£rü o
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
[ 1 ], 0);

107 
addr
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
[ 2 ], 0);

108 
¥ofûe
.
	`GëProfûeSåög
(
sSe˘
, 
sKey
[ 3 ], (*)"NULL", 
sName
, (sName));

109 
¥ofûe
.
	`GëProfûeSåög
(
sSe˘
, 
sKey
[ 4 ], (*)"NULL", 
°em∂©e
, (stemplate));

110 
yxnum
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
[ 5 ], 0);

111 
y˙um
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
[ 6 ], 0);

112 
ymnum
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
[ 7 ], 0);

113 
yknum
 = 
¥ofûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
[ 8 ], 0);

117 
PDEVST
 
pDev
 = 
√w
 
DEVST
;

118 
pDev
->
wPrŸoModuÀNo
 = 
wModuÀ
;

119 
pDev
->
wBusNo
 = 
pBus
->wBusNo;

120 
pDev
->
wAddr
 = 
addr
;

121 
pDev
->
wDevSèã
 = 
COMM_ABNORMAL
;

122 
pDev
->
wYc
 = 
y˙um
;

123 
pDev
->
wYx
 = 
yxnum
;

124 
pDev
->
wYm
 = 
ymnum
;

125 
pDev
->
wYK
 = 
yknum
;

126 
	`°r˝y
(
pDev
->
°em∂©e
, stemplate);

131 if(
pBus
->
wPrŸoTy≥
 =
PROTO_MODBUS
)

133 
m_wDevNum
++;

134 
sSä
[ 64 ] = "";

135 
	`•rötf
(
sSä
, "%s°n%03d.c⁄f",
STATIONNO_PATH
,
m_wDevNum
);

136 
CProfûe
 
	`Profûe
(
sSä
);

137 
sTemp
[ 200 ];

138 
	`mem£t
(
sTemp
, 0, (sTemp));

139 
sbuf„r
[ 200 ] = { 0 };

140 
sizebuff
 = (
sbuf„r
);

141 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

143 
Profûe
.
	`GëProfûeSåög
((*)"DEV", (*)"dev", (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

144 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0)

146 
	`¥ötf
("%†%†%†C⁄fig Eº‹ OK. \n", 
sSä
,"DEV","dev");

147  
FALSE
;

149 *
tmpBusNo
 = 
	`°πok
(
sbuf„r
, ",");

150 *
tmpDevAddr
 = 
	`°πok
(
NULL
, ",");

151 if(
	`©oi
(
tmpBusNo
)!=
pDev
->
wBusNo
 ||átoi(
tmpDevAddr
)!ıDev->
wAddr
)

153 
	`¥ötf
("%s %d %d Config Error OK. \n",

154 
sSä
, 
	`©oi
(
tmpBusNo
),©oi(
tmpDevAddr
));

155  
FALSE
;

158 
	`AddD©aToDev
(
Profûe
, 
pDev
, &pDev->
ycAºay
, 
D©aTy≥
::
YC_DTYPE
);

159 
	`AddD©aToDev
(
Profûe
, 
pDev
, &pDev->
yxAºay
, 
D©aTy≥
::
YX_DTYPE
);

160 
	`AddD©aToDev
(
Profûe
, 
pDev
, &pDev->
ymAºay
, 
D©aTy≥
::
YM_DTYPE
);

161 
	`AddD©aToDev
(
Profûe
, 
pDev
, &pDev->
ykAºay
, 
D©aTy≥
::
YK_DTYPE
);

163 if(
pBus
->
wPrŸoTy≥
 =
PROTO_MODBUSTCP
)

167 
pBus
->
DevAºay
[ 
pDev
->
wAddr
 ] =ÖDev;

170  
TRUE
;

171 
	}
}

173 
BOOL
 
	gWidgë
::
	$GëBusProfûeSåög
(
CProfûe
 &
Profûe
, * 
sSe˘
, * 
sKey
, * 
sTemp
, &
size
)

175 if(!
Profûe
.
	`IsVÆid
())

176  
FALSE
;

178 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sKey
, (*)"nuŒ", 
sTemp
, 
size
);

179 if(
	`°rcmp
("nuŒ", 
sTemp
) == 0)

180  
FALSE
;

182  
TRUE
;

183 
	}
}

185 
BOOL
 
	gWidgë
::
	$AddNëP¨a
(
PBUSDATA
 
pBusD©a
, 
CProfûe
 &
¥ofûe
, 
BYTE
 
byNo
)

187 if(
pBusD©a
 =
NULL
 || !
¥ofûe
.
	`IsVÆid
())

188  
FALSE
;

190 
sNëC¨d
[ ] = "NetCard";

191 
sSe˘
[ ] = "PORT";

192 
sTemp
[ 200 ] = { 0 };

193 
sKey
[ 200 ] = { 0 };

194 
sizebuff
 = (
sTemp
);

196 
	`•rötf
(
sKey
, "%s%02d", 
sNëC¨d
, 
byNo
);

197 
	`mem£t
(
sTemp
, 0, (sTemp));

198 if(!
	`GëBusProfûeSåög
(
¥ofûe
, 
sSe˘
, 
sKey
, 
sTemp
, 
sizebuff
))

199  
FALSE
;

201 
	`°r˝y
(
pBusD©a
->
m_NëC¨dName
, 
sTemp
);

203  
TRUE
;

204 
	}
}

206 
BOOL
 
	gWidgë
::
	$AddP‹tOthîP¨a
(
PBUSDATA
 
pBusD©a
, 
CProfûe
 &
¥ofûe
, * 
busSåög
, 
BYTE
 
byNo
)

208 
sAârib
[ 100 ];

209 
UINT
 
nP‹t
 = 0;

210 
BYTE
 
byTy≥
 = 
CBa£P‹t
::
	`GëCommAârib
(
busSåög
, 
sAârib
, 
nP‹t
);

211 
BOOL
 
bÊag
 = 
TRUE
;

213 
byTy≥
)

215 
Pr›îty
::
COMRS485
:

217 
Pr›îty
::
LAN_SERVER
:

219 
bÊag
 = 
	`AddNëP¨a
(
pBusD©a
, 
¥ofûe
, 
byNo
);

222 
Pr›îty
::
LAN_CLIENT
:

223 
	`°r˝y
(
pBusD©a
->
m_szIP
, 
sAârib
);

229 
pBusD©a
->
m_BusTy≥
 = 
byTy≥
;

230  
bÊag
;

231 
	}
}

233 
	gWidgë
::
	$GëBusPrŸoI¡îvÆ
(
CProfûe
 &
Profûe
, * 
sSe˘
, * 
sKey
)

235 
wVÆ
 = 0;

237 
wVÆ
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sKey
, -1);

238 if(
wVÆ
 == -1)

240 
	`¥ötf
("Gë %†Eº‹ OK. \n", 
sKey
);

241  
wVÆ
;

243  
wVÆ
;

244 
	}
}

247 
BOOL
 
	gWidgë
::
	$RódP‹tP¨a
(
INITBUS
 & 
bus
)

249 
sBusLöe
[] = 
BUS_PATH
;

250 
CProfûe
 
	`Profûe
(
sBusLöe
);

251 
BYTE
 
byLöeNum
 = 0;

254 
Profûe
.
	`GëProfûeSåög
((*)"PROJECT", (*)"«me", (*)"nuŒ", 
m_°rProje˘Name
, (m_strProjectName));

255 if(
	`°rcmp
("nuŒ", 
m_°rProje˘Name
) == 0)

257 
	`¥ötf
("%†«mêªad faû \¿", 
sBusLöe
);

258  
FALSE
;

263 
byLöeNum
 = (
BYTE
)
Profûe
.
	`GëProfûeI¡
((*)"LINE-NUM", (*)"NUM", 0);

264 if(
byLöeNum
 =0 || byLöeNum > 
TOTAL_BUS
)

266 
	`¥ötf
("%†LöêNumbîÉx˚ed MaxLöê: CuºíàLöêNumbî = %d \¿", 
sBusLöe
, 
byLöeNum
);

267  
FALSE
;

270 
BYTE
 
i
 = 0; i < 
byLöeNum
; i++)

272 
sP‹t
[ ] = "port";

273 
sP¨a
[ ] = "para";

274 
sI¡îvÆ
[ ] = "internal";

275 
sSe˘
[ ] = "PORT";

276 
iI¡îvÆ
 = 0;

277 
sizebuff
 = 0;

278 
sbuf„r
[ 200 ] = { 0 };

279 
sizebuff
 = (
sbuf„r
);

280 
sDŒP©h
[ 200 ];

281 
BOOL
 
bPau£
 = 
FALSE
;

282 
	`mem£t
(
sDŒP©h
, 0, (sDllPath));

283 
sTemp
[ 200 ];

284 
	`mem£t
(
sTemp
, 0, (sTemp));

286 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

289 
	`•rötf
(
sTemp
, "%s%02d", 
sP‹t
, 
i
 + 1);

290 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sTemp
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

291 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0)

293 
	`¥ötf
("Bus Config Error OK.\n");

294  
FALSE
;

296 if(
	`°rcmp
(
PASUE
, 
sbuf„r
) == 0)

298 
	`¥ötf
("Bus%d i†PASUE \¿", 
i
 + 1);

299 
bPau£
 = 
TRUE
;

302 if(!
bPau£
)

305 
	`•rötf
(
sTemp
, "%s%02d", 
sP¨a
, 
i
 + 1);

306 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sTemp
, (*)"nuŒ", 
sDŒP©h
, (sDllPath));

307 if(
	`°rcmp
("nuŒ", 
sDŒP©h
) == 0)

309 
	`¥ötf
("Bus Config Error OK. \n");

310  
FALSE
;

314 
	`•rötf
(
sTemp
, "%s%02d", 
sI¡îvÆ
, 
i
 + 1);

315 
iI¡îvÆ
 = 
	`GëBusPrŸoI¡îvÆ
(
Profûe
, 
sSe˘
, 
sTemp
);

316 if(
iI¡îvÆ
 == -1)

317  
FALSE
;

320 
PBUSDATA
 
pBusD©a
 = 
√w
 
BUSDATA
;

321 
	`°r˝y
(
pBusD©a
->
m_BusSåög
, 
sbuf„r
);

322 
pBusD©a
->
m_BusI¡îvÆ
 = 
iI¡îvÆ
;

323 
	`°r˝y
(
pBusD©a
->
m_PrŸocﬁDŒP©h
, 
sDŒP©h
);

325 if(!
bPau£
)

328 if(!
	`AddP‹tOthîP¨a
(
pBusD©a
, 
Profûe
, 
sbuf„r
, 
i
 + 1))

330 
dñëe
 
pBusD©a
;

331  
FALSE
;

340 
bus
.
	`AddBusSåög
(
pBusD©a
);

342  
TRUE
;

343 
	}
}

418 
BOOL
 
	gWidgë
::
	$LﬂdBusD©a
()

421 
INITBUS
 
bus
;

423 if(
	`RódP‹tP¨a
(
bus
))

424 
	`¥ötf
("ReadPortPara OK.\n");

427 
	`¥ötf
("ReadPortPara Failed. \n ");

428  
FALSE
;

430 
BusNum
 = 
bus
.
m_busD©a
.
	`size
();

431 if(
BusNum
 == 0)

433 
	`¥ötf
("CreateBusLine In ReadProtPara Failed . \n ");

434  
FALSE
;

437 
BYTE
 
i
 = 0; i < 
BusNum
; i++)

439 
PBUS_LINEST
 
pBus
 = 
√w
 
BUS_LINEST
;

440 
pBus
->
wBusNo
 = 
i
;

441 
pBus
->
wI¡îvÆ
 = 200;

442 
	`•rötf
(
pBus
->
szBusName
, "%d", 
i
 + 1);

443 
pBus
->
byBusTy≥
 = 
BUS_PAUSE
;

444 
pBus
->
wBusCommSèã
 = 
COMM_ABNORMAL
;

445 
pBus
->
wTŸÆDev
 = 0;

446 
pBus
->
pPr›îty
 = 
NULL
;

447 
pBus
->
pPrŸo
 = 
NULL
;

448 if(
i
 =
BusNum
 - 1)

450 
PD©aTy≥
 
pD©a
 = 
NULL
;

451 
PDEVST
 
pDev
 = 
√w
 
DEVST
;

452 
pDev
->
wBusNo
 = 
pBus
->wBusNo;

453 
pDev
->
wAddr
 = 1;

454 
pDev
->
wYc
 = 0;

455 
pDev
->
wYx
 = 2;

456 
pDev
->
wYm
 = 0;

457 
pDev
->
wYK
 = 0;

459 
BYTE
 
j
 = 0; j < 
pDev
->
wYx
; j++)

461 
pD©a
 = 
√w
 
YXST
;

464 
pD©a
->
wBusNo
 =
pDev
->wBusNo;

465 
pD©a
->
wAddr
 = 
pDev
->wAddr;

466 
pD©a
->
wP¡No
 = 
i
;

467 
pDev
->
yxAºay
.
	`push_back
(
pD©a
);

469 
pBus
->
DevAºay
[ 
pDev
->
wAddr
 ] =ÖDev;

472 if(
bus
.
m_busD©a
[
i
]->
m_BusTy≥
 !
Pr›îty
::
PAUSETYPE
)

474 
pBus
->
wPr›îtyTy≥
 = 
bus
.
m_busD©a
[
i
]->
m_BusTy≥
;

475 
	`°r˝y
(
pBus
->
PrŸodŒP©h
, 
bus
.
m_busD©a
[
i
]->
m_PrŸocﬁDŒP©h
);

476 
pBus
->
wI¡îvÆ
 = 
bus
.
m_busD©a
[
i
]->
m_BusI¡îvÆ
;

477 
	`°r˝y
(
pBus
->
m_BusSåög
, 
bus
.
m_busD©a
[
i
]->m_BusString);

478 if(0 =
	`°rcmp
(
bus
.
m_busD©a
[
i
]->
m_PrŸocﬁDŒP©h
, "./lib/libModBusRtu.so"))

480 
pBus
->
byBusTy≥
 = 
BUS_GATHER
;

481 
pBus
->
wPrŸoTy≥
 = 
PROTO_MODBUS
;

482 
	`GëDevD©a
(
pBus
);

485 if(0 =
	`°rcmp
(
bus
.
m_busD©a
[
i
]->
m_PrŸocﬁDŒP©h
, "./lib/libModBusTcp.so"))

487 
pBus
->
byBusTy≥
 = 
BUS_TRANS
;

488 
pBus
->
wPrŸoTy≥
 = 
PROTO_MODBUSTCP
;

489 
	`GëDevD©a
(
pBus
);

494 
	`Cª©eBusPr›îty
(
pBus
);

497 
	`Cª©eBusPrŸocﬁ
(
pBus
);

500 
	`AddPrŸoModuÀ
(
pBus
);

502 
m_busAºay
[ 
i
 ] = 
pBus
;

510 
	`Cª©eCaböë
();

512 
	`SˇnSîvîOnLöe
();

514  
TRUE
;

515 
	}
}

517 
BOOL
 
	gWidgë
::
	$Cª©eLogiˇlCúcuô
()

519 
WORD
 
wCúcuôNum
 = 3;

520 
WORD
 
i
 = 0; i < 
wCúcuôNum
; i++)

522 
PSINGALCIRCUIT
 
pCúcuô
 = 
√w
 
SINGLECIRCUIT
;

523 
buf
[ 10 ];

524 
	`•rötf
(
buf
, "ã°%02d", 
i
 + 1);

525 
	`°r˝y
(
pCúcuô
->
sName
, 
buf
);

526 
pCúcuô
->
wSîülNo
 = 
i
;

527 
BYTE
 
m
 = 0; m < 2; m++)

529 
PD©aTy≥
 
pD©a
 = 
	`AfxGëYc
(
i
, 1, 
m
);

530 if(!
pD©a
)

532 
	`Q_ASSERT
(
FALSE
);

533  
FALSE
;

535 
pCúcuô
->
ycAºay
.
	`push_back
(
pD©a
);

538 
BYTE
 
m
 = 0; m < 2; m++)

540 
PD©aTy≥
 
pD©a
 = 
	`AfxGëYx
(
i
, 1, 
m
);

541 if(!
pD©a
)

543 
	`Q_ASSERT
(
FALSE
);

544  
FALSE
;

546 
pCúcuô
->
yxAºay
.
	`push_back
(
pD©a
);

549 
BYTE
 
m
 = 0; m < 2; m++)

551 
PD©aTy≥
 
pD©a
 = 
	`AfxGëYm
(
i
, 1, 
m
);

552 if(!
pD©a
)

554 
	`Q_ASSERT
(
FALSE
);

555  
FALSE
;

557 
pCúcuô
->
ymAºay
.
	`push_back
(
pD©a
);

560 
m_sCúcuôAºay
.
	`push_back
(
pCúcuô
);

562  
TRUE
;

563 
	}
}

565 
BOOL
 
	gWidgë
::
	$Cª©eCaböë
()

567 
sCaböëIni
[ ] = 
CABLE_PATH
;

568 
CProfûe
 
	`Profûe
(
sCaböëIni
);

569 
BYTE
 
byCaböëNum
 = 0;

571 
byCaböëNum
 = (
BYTE
)
Profûe
.
	`GëProfûeI¡
((*)"CABLENUM", (*)"num", 0);

572 if(
byCaböëNum
 == 0)

574 
	`¥ötf
("%†NumbîÉx˚ed MaxLöê: CuºíàLöêNumbî = %d \¿", 
sCaböëIni
, 
byCaböëNum
);

575  
FALSE
;

577 
BYTE
 
byCaböëNo
 = 0; byCaböëNÿ< 
byCaböëNum
; byCabinetNo++)

579 
PCABINET
 
pCab
 = 
√w
 
CABINET
;

580 
sTemp
[ 200 ];

581 
	`mem£t
(
sTemp
, 0, (sTemp));

582 
sbuf„r
[ 200 ] = { 0 };

583 
sizebuff
 = (
sbuf„r
);

584 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

585 
sSe˘
[ ] = "CABLEINFO";

586 
sCaböëName
[ ] = "cablename";

589 
	`•rötf
(
sTemp
, "%s%02d", 
sCaböëName
, 
byCaböëNo
 + 1);

590 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sTemp
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

591 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0)

593 
	`¥ötf
("%†%†C⁄fig Eº‹ OK. \n", 
sCaböëIni
,
sSe˘
);

594  
FALSE
;

596 
pCab
->
wSîülNo
 = 
byCaböëNo
;

597 
	`°r˝y
(
pCab
->
sName
, 
sbuf„r
);

598 
	`RódCúcuô
(
pCab
);

599 
m_ˇbAºay
.
	`push_back
(
pCab
);

629  
TRUE
;

630 
	}
}

632 
BOOL
 
	gWidgë
::
	$RódCúcuô
(
PCABINET
 
pCab
)

634 
sCúcuôNoIni
[ 64 ] = "";

635 
	`•rötf
(
sCúcuôNoIni
, "%sCabÀ%02d.öi", 
CIRCUITNO_PATH
, 
pCab
->
wSîülNo
+1);

636 
CProfûe
 
	`Profûe
(
sCúcuôNoIni
);

637 
sSe˘
[] = "LOOPINFO";

638 
WORD
 
wLo›Num
 = 0;

640 
wLo›Num
 = (
WORD
)
Profûe
.
	`GëProfûeI¡
((*)"LOOPNUM", (*)"num", 0);

641 if(
wLo›Num
 == 0)

643 
	`¥ötf
("%†Num %d \¿", 
sCúcuôNoIni
,
wLo›Num
);

644  
TRUE
;

647 
BYTE
 
byLo›No
 = 0; byLo›Nÿ< 
wLo›Num
; byLoopNo++)

649 
PSINGALCIRCUIT
 
pCúcuô
 = 
√w
 
SINGLECIRCUIT
;

650 
iNum
;

651 
sbuf„r
[ 200 ] = { 0 };

652 
sizebuff
 = (
sbuf„r
);

653 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

654 
sTemp
[ 200 ];

655 
	`mem£t
(
sTemp
, 0, (sTemp));

657 
sLo›Name
[ ] = "loopname";

658 
sLo›Id
[ ] = "loopid";

660 
	`mem£t
(
sTemp
, 0, (sTemp));

661 
	`•rötf
(
sTemp
, "%s%02d", 
sLo›Name
, 
byLo›No
 + 1);

662 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sTemp
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

663 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0)

665 
	`¥ötf
("Gë %†%†%†Faûed. \n", 
sCúcuôNoIni
,
sSe˘
,
sTemp
);

666  
FALSE
;

668 
	`°r˝y
(
pCúcuô
->
sName
, 
sbuf„r
);

670 
	`mem£t
(
sTemp
, 0, (sTemp));

671 
	`•rötf
(
sTemp
, "%s%02d", 
sLo›Id
, 
byLo›No
 + 1);

672 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sTemp
, -1);

673 if(
iNum
 == -1)

675 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sCúcuôNoIni
,
sSe˘
,
sTemp
);

676  
FALSE
;

678 
pCúcuô
->
wSîülNo
 = 
iNum
;

680 
	`RódLo›
(
pCúcuô
);

681 
pCab
->
cúcuôAºay
[ 
pCúcuô
->
wSîülNo
 ] =ÖCircuit;

682 
m_sCúcuôAºay
.
	`push_back
(
pCúcuô
);

684  
TRUE
;

685 
	}
}

687 
BOOL
 
	gWidgë
::
	$RódLo›
(
PSINGALCIRCUIT
 
pCúcuô
)

689 
sLo›NoIni
[ 64 ] = "";

690 
	`•rötf
(
sLo›NoIni
, "%sLo›%03d.öi", 
LOOPNO_PATH
, 
pCúcuô
->
wSîülNo
+1);

691 
CProfûe
 
	`Profûe
(
sLo›NoIni
);

692 
sSe˘
[16] = "";

693 
WORD
 
wD©aNum
 = 0;

695 
wD©aNum
 = (
WORD
)
Profûe
.
	`GëProfûeI¡
((*)"DATANUM", (*)"num", 0);

696 if(
wD©aNum
 == 0)

698 
	`¥ötf
("%†Num %d \¿", 
sLo›NoIni
,
wD©aNum
);

699  
TRUE
;

702 
BYTE
 
byD©aNo
 = 0; byD©aNÿ< 
wD©aNum
; byDataNo++)

704 
iD©©y≥
, 
iBusNo
,
iAddr
,
iPoöt
;

705 
sbuf„r
[ 200 ] = { 0 };

706 
sizebuff
 = (
sbuf„r
);

707 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

708 
sTemp
[ 200 ];

709 
	`mem£t
(
sTemp
, 0, (sTemp));

711 
sTy≥
[ ] = "type";

712 
sBusNo
[ ] = "bus";

713 
sAddr
[ ] = "addr";

714 
sPoöt
[ ] = "point";

716 
	`mem£t
(
sSe˘
, 0, (sSect));

717 
	`•rötf
(
sSe˘
, "%s%04d", "DATA", 
byD©aNo
 + 1);

719 
iD©©y≥
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sTy≥
, -1);

720 if(
iD©©y≥
 == -1)

722 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sLo›NoIni
,
sSe˘
,
sTy≥
);

723  
FALSE
;

725 
iBusNo
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sBusNo
, -1);

726 if(
iBusNo
 == -1)

728 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sLo›NoIni
,
sSe˘
,
sBusNo
);

729  
FALSE
;

731 
iAddr
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sAddr
, -1);

732 if(
iAddr
 == -1)

734 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sLo›NoIni
,
sSe˘
,
sAddr
);

735  
FALSE
;

737 
iPoöt
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sPoöt
, -1);

738 if(
iPoöt
 == -1)

740 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sLo›NoIni
,
sSe˘
,
sPoöt
);

741  
FALSE
;

744 
iD©©y≥
)

746 
D©aTy≥
::
YC_DTYPE
:

748 
PD©aTy≥
 
pD©a
 = 
	`AfxGëYc
(
iBusNo
, 
iAddr
, 
iPoöt
);

749 if(!
pD©a
)

751 
	`Q_ASSERT
(
FALSE
);

752  
FALSE
;

754 
pCúcuô
->
ycAºay
.
	`push_back
(
pD©a
);

757 
D©aTy≥
::
YX_DTYPE
:

759 
PD©aTy≥
 
pD©a
 = 
	`AfxGëYx
(
iBusNo
, 
iAddr
, 
iPoöt
);

760 if(!
pD©a
)

762 
	`Q_ASSERT
(
FALSE
);

763  
FALSE
;

765 
pCúcuô
->
yxAºay
.
	`push_back
(
pD©a
);

768 
D©aTy≥
::
YM_DTYPE
:

770 
PD©aTy≥
 
pD©a
 = 
	`AfxGëYm
(
iBusNo
, 
iAddr
, 
iPoöt
);

771 if(!
pD©a
)

773 
	`Q_ASSERT
(
FALSE
);

774  
FALSE
;

776 
pCúcuô
->
ymAºay
.
	`push_back
(
pD©a
);

780 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sLo›NoIni
,
sSe˘
,
sTy≥
);

781  
FALSE
;

784  
TRUE
;

785 
	}
}

787 
BOOL
 
	gWidgë
::
	$AddPrŸoModuÀ
(
PBUS_LINEST
 
pBus
)

789 if(!
pBus
 ||ÖBus->
byBusTy≥
 =
BUS_PAUSE
)

790  
FALSE
;

792 if(!
pBus
->
pPrŸo
 || !pBus->pPrŸo->
	`IsPrŸoVÆid
())

793  
FALSE
;

795 
BYTE
 
size
 = 
pBus
->
DevAºay
.
	`size
();

796 if(!
size
)

797  
FALSE
;

799 
QDEV_ARRAY_ITOR
 
Begö_ô‹
 = 
pBus
->
DevAºay
.
	`begö
();

800 
QDEV_ARRAY_ITOR
 
End_ô‹
 = 
pBus
->
DevAºay
.
	`íd
();

801 
CPrŸocﬁ
 * 
pPrŸo
 = 
pBus
->pProto;

802 ;
Begö_ô‹
 !
End_ô‹
; Begin_itor++)

804 
PDEVST
 
pDev
 = 
Begö_ô‹
.
	`vÆue
();

805 if(!
pDev
 ||ÖDev->
wAddr
 !
Begö_ô‹
.
	`key
())

806  
FALSE
;

808 
pPrŸo
->
	`AddModuÀ
(
pDev
->
wBusNo
,ÖDev->
wAddr
,ÖDev->
wPrŸoModuÀNo
,ÖDev->
°em∂©e
);

811  
TRUE
;

812 
	}
}

814 
BOOL
 
	gWidgë
::
	$Cª©eBusPrŸocﬁ
(
PBUS_LINEST
 
pBus
)

816 if(!
pBus
 ||ÖBus->
wPrŸoTy≥
 =
PROTO_NULL
 ||

817 
pBus
->
pPrŸo
)

818  
FALSE
;

821 
CMëhod
 * 
pMëhod
 = 
m_pMëhod
;

822 * 
pH™dÀ
 = 
m_lﬂdLibøry
.
	`GëPrŸoObj
(
pBus
->
PrŸodŒP©h
, 
pMëhod
);

823 if(!
pH™dÀ
)

826  
FALSE
;

829 
CPrŸocﬁ
 * 
pPrŸo
 = (CPrŸocﬁ *)
pH™dÀ
;

830 if(!
pPrŸo
->
	`IsPrŸoVÆid
())

832 
	`Q_ASSERT
(
FALSE
);

833  
FALSE
;

836 
pBus
->
pPrŸo
 =ÖProto;

837  
TRUE
;

838 
	}
}

841 
BOOL
 
	gWidgë
::
	$Cª©eBusPr›îty
(
PBUS_LINEST
 
pBus
)

843 if(!
pBus
)

845 
	`Q_ASSERT
(
FALSE
);

846  
FALSE
;

848 
sComTy≥
[ 100 ]="";

849 
UINT
 
nP‹t
 = 0;

850 
CBa£P‹t
::
	`GëCommAârib
(
pBus
->
m_BusSåög
, 
sComTy≥
, 
nP‹t
);

854 if(
pBus
->
wPr›îtyTy≥
 =
Pr›îty
::
LAN_SERVER
)

856 
NETPARAM
 
√tP¨a
;

857 
	`AfxGëCurNëP¨a
(&
√tP¨a
);

859 
LAN_SERVER_Pr›îty
 * 
pPr›îty
 = 
√w
 LAN_SERVER_Property;

860 
pPr›îty
->
wP‹tNo
 = 
nP‹t
;

862 if(
	`°æí
(
√tP¨a
.
ù
) != 0)

863 
	`°r˝y
(
pPr›îty
->
£rvîIp
, 
√tP¨a
.
ù
);

865 
CComP‹t
 * 
pP‹t
 = 
√w
 
CT˝P‹tSîvî
;

866 
pP‹t
->
	`SëPªO≥nP¨a
(
pPr›îty
);

868 
pBus
->
pPr›îty
 =ÖProperty;

869 
pBus
->
pPr›îty
->
pComP‹t
 = 
pP‹t
;

872 if(
pBus
->
wPr›îtyTy≥
 =
Pr›îty
::
LAN_CLIENT
)

877 
LAN_CLIENT_Pr›îty
 * 
pPr›îty
 = 
√w
 LAN_CLIENT_Property;

878 
pPr›îty
->
wP‹tNo
 = 
nP‹t
;

880 if(
	`°æí
(
sComTy≥
) != 0)

881 
	`°r˝y
(
pPr›îty
->
˛õ¡Ip
, 
sComTy≥
);

883 
CComP‹t
 * 
pP‹t
 = 
√w
 
CT˝Clõ¡
;

884 
pP‹t
->
	`SëPªO≥nP¨a
(
pPr›îty
);

886 
pBus
->
pPr›îty
 =ÖProperty;

887 
pBus
->
pPr›îty
->
pComP‹t
 = 
pP‹t
;

889 
	`m_Ve˘‹T˝Clõ¡Push_back
(
pP‹t
);

891 if(
pBus
->
wPr›îtyTy≥
 =
Pr›îty
::
COMRS485
)

893 
COM_Pr›îty
 * 
pPr›îty
 = 
√w
 COM_Property;

894 
pPr›îty
->
wP‹tNo
 = 
nP‹t
;

896 
szName
[32];

897 c⁄° * 
p
 = 
sComTy≥
;

899 
i
, 
k
, 
nLí
;

900 
nLí
 = 
	`°æí
(
sComTy≥
);

901 
i
 = 0, 
k
 = 0; i < 
nLí
; i++, 
p
++)

903 if(*
p
 !','Ë{ 
szName
[
k
++] = *p; }

904 { 
szName
[
k
] = '\0';
p
++; ; }

907 
pPr›îty
->
wBaud
 = 
	`©oi
(
szName
);

908 
pPr›îty
->
byD©aBôs
 = 
	`©oi
(
p
+2);

909 
pPr›îty
->
bySt›Bôs
 = 
	`©oi
(
p
+4);

910 
pPr›îty
->
byP¨ôy
 = 
p
[0];

913 
CComP‹t
 * 
pP‹t
 = 
√w
 
CSîülP‹t
;

914 
pP‹t
->
	`SëPªO≥nP¨a
(
pPr›îty
);

916 
pBus
->
pPr›îty
 =ÖProperty;

917 
pBus
->
pPr›îty
->
pComP‹t
 = 
pP‹t
;

920 if(
pBus
->
wPr›îtyTy≥
 =
Pr›îty
::
COM_NULL
)

921  
TRUE
;

924 
	`Q_ASSERT
(
FALSE
);

925  
FALSE
;

928  
TRUE
;

929 
	}
}

931 
BOOL
 
	gWidgë
::
	$AddD©aToDev
(
CProfûe
 &
¥ofûe
, 
PDEVST
 
pDev
, 
QDEV_DATA_ARRAY
 * 
pAºay
, 
BYTE
 
byTy≥
)

933 if(!
pDev
 || !
pAºay
)

934  
FALSE
;

936 if(
pAºay
->
	`size
() != 0)

938 
	`Q_ASSERT
(
FALSE
);

939  
FALSE
;

943 
WORD
 
wYcTønsNo
 = 1;

944 
WORD
 
wYxTønsNo
 = 1;

945 
WORD
 
wYmTønsNo
 = 1;

946 
WORD
 
wYkTønsNo
 = 1;

948 
WORD
 
wsAddr
 = -1;

949 if(
wsAddr
 !
pDev
->
wAddr
)

954 
wsAddr
 = 
pDev
->
wAddr
;

956 
sSe˘
[16]="";

957 
sTemp
[16]="";

958 
sbuf„r
[ 200 ] = "";

959 
sizebuff
 = (
sbuf„r
);

960 
WORD
 
wNum
 = 0;

961 if(
byTy≥
 =
D©aTy≥
::
YC_DTYPE
)

963 
	`°r˝y
(
sSe˘
, "AI");

964 
wNum
 = 
pDev
->
wYc
;

966 if(
byTy≥
 =
D©aTy≥
::
YX_DTYPE
)

968 
	`°r˝y
(
sSe˘
, "DI");

969 
wNum
 = 
pDev
->
wYx
;

971 if(
byTy≥
 =
D©aTy≥
::
YM_DTYPE
)

973 
	`°r˝y
(
sSe˘
, "PI");

974 
wNum
 = 
pDev
->
wYm
;

976 if(
byTy≥
 =
D©aTy≥
::
YK_DTYPE
)

978 
	`°r˝y
(
sSe˘
, "DO");

979 
wNum
 = 
pDev
->
wYK
;

984 
	`Q_ASSERT
(
FALSE
);

985  
FALSE
;

988 
WORD
 
wBusNo
 = 
pDev
->wBusNo;

989 
WORD
 
wAddr
 = 
pDev
->wAddr;

992 
BYTE
 
i
 = 0; i < 
wNum
; i++)

994 
PD©aTy≥
 
pD©a
 = 
NULL
;

996 
	`•rötf
(
sTemp
, "%s%03d", 
sSe˘
, 
i
 + 1);

997 
¥ofûe
.
	`GëProfûeSåög
(
sSe˘
, 
sTemp
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

998 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0)

1000 
	`¥ötf
("%†%†C⁄fig Eº‹ OK. \n", 
¥ofûe
.
m_szFûeName
,
sTemp
);

1001  
FALSE
;

1004 if(
byTy≥
 =
D©aTy≥
::
YC_DTYPE
)

1006 
pD©a
 = 
√w
 
YCST
;

1007 
	`SëYcP¨am
(
pD©a
, 
sbuf„r
);

1009 if(
byTy≥
 =
D©aTy≥
::
YX_DTYPE
)

1011 
pD©a
 = 
√w
 
YXST
;

1012 
	`SëYxP¨am
(
pD©a
, 
sbuf„r
);

1014 if(
byTy≥
 =
D©aTy≥
::
YM_DTYPE
)

1016 
pD©a
 = 
√w
 
YMST
;

1017 
	`SëYmP¨am
(
pD©a
, 
sbuf„r
);

1019 if(
byTy≥
 =
D©aTy≥
::
YK_DTYPE
)

1021 
pD©a
 = 
√w
 
YKST
;

1022 
	`SëYkP¨am
(
pD©a
, 
sbuf„r
);

1027 
	`Q_ASSERT
(
FALSE
);

1028  
FALSE
;

1030 
pD©a
->
wBusNo
 =wBusNo;

1031 
pD©a
->
wAddr
 = wAddr;

1032 
pD©a
->
wP¡No
 = 
i
;

1045 
pAºay
->
	`push_back
(
pD©a
);

1048  
TRUE
;

1049 
	}
}

1053 
	gWidgë
::
	$SëYcP¨am
(
PD©aTy≥
 
PD©a
, *
szP¨am
)

1055 
PYCST
 
PYcD©a
 = (PYCST)
PD©a
;

1056 
i
 = 0;

1057 
nLí
 = 
	`°æí
(
szP¨am
);

1058 if(
nLí
 <= 0) ;

1059 *
p
 = 
	`°πok
(
szP¨am
, ",");

1060 
p
)

1062 
i
)

1065 
	`•rötf
(
PYcD©a
->
chName
, "%s", 
p
);

1074 
PYcD©a
->
fC€fficõ¡
 = ()
	`©of
(
p
);

1077 
PYcD©a
->
fBa£VÆue
 = ()
	`©of
(
p
);

1083 
PYcD©a
->
fThv
 = (
WORD
)
	`©oi
(
p
);

1088 
p
 = 
	`°πok
(
NULL
, ",");

1089 
i
++;

1091 
	}
}

1094 
	gWidgë
::
	$SëYxP¨am
(
PD©aTy≥
 
PD©a
, *
szP¨am
)

1096 
PYXST
 
PYxD©a
 = (PYXST)
PD©a
;

1097 
i
 = 0;

1098 
nLí
 = 
	`°æí
(
szP¨am
);

1099 if(
nLí
 <= 0) ;

1100 *
p
 = 
	`°πok
(
szP¨am
, ",");

1101 
p
)

1103 
i
)

1106 
	`•rötf
(
PYxD©a
->
chName
, "%s", 
p
);

1109 
PYxD©a
->
byRevî£
 = (
BYTE
)
	`©oi
(
p
);

1112 
PYxD©a
->
byW¨n
 = (
BYTE
)
	`©oi
(
p
);

1117 
p
 = 
	`°πok
(
NULL
, ",");

1118 
i
++;

1120 
	}
}

1123 
	gWidgë
::
	$SëYmP¨am
(
PD©aTy≥
 
PD©a
, *
szP¨am
)

1125 
PYMST
 
PYmD©a
 = (PYMST)
PD©a
;

1126 
i
 = 0;

1127 
nLí
 = 
	`°æí
(
szP¨am
);

1128 if(
nLí
 <= 0) ;

1129 *
p
 = 
	`°πok
(
szP¨am
, ",");

1130 
p
)

1132 
i
)

1135 
	`•rötf
(
PYmD©a
->
chName
, "%s", 
p
);

1144 
PYmD©a
->
fC€fficõ¡
 = ()
	`©of
(
p
);

1149 
p
 = 
	`°πok
(
NULL
, ",");

1150 
i
++;

1152 
	}
}

1155 
	gWidgë
::
	$SëYkP¨am
(
PD©aTy≥
 
PD©a
, *
szP¨am
)

1157 
PYKST
 
PYkD©a
 = (PYKST)
PD©a
;

1158 
i
 = 0;

1159 
nLí
 = 
	`°æí
(
szP¨am
);

1160 if(
nLí
 <= 0) ;

1161 *
p
 = 
	`°πok
(
szP¨am
, ",");

1162 
p
)

1164 
i
)

1167 
	`•rötf
(
PYkD©a
->
chName
, "%s", 
p
);

1175 
p
 = 
	`°πok
(
NULL
, ",");

1176 
i
++;

1178 
	}
}

1180 
	gWidgë
::
	$˛órD©a
()

1182 
	`AfxGëGlobÆ
()->
	`SëThªadRunFœg
(
FALSE
);

1184 
WORD
 
size
 = 
m_ThªadAºay
.
	`size
();

1185 
DWORD
 
dwkey
 = 
CMsg
::
MSG_REAL_CHANNEL
;

1186 
WORD
 
i
 = 0; i < 
size
; i++)

1188 
PSTHREAD_PROC
 
pProc
 = 
m_ThªadAºay
[ 
dwkey
 ];

1189 if(
pProc
)

1191 
	`±hªad_ˇn˚l
(
pProc
->
tid
);

1192 
	`±hªad_joö
(
pProc
->
tid
, 
NULL
);

1193 
pProc
->
tid
 = 0;

1194 
dñëe
 
pProc
;

1195 
pProc
 = 
NULL
;

1198 
m_ThªadAºay
.
	`ªmove
(
dwkey
);

1199 
dwkey
++;

1202 
m_lﬂdLibøry
.
	`Rñó£H™dÀ
();

1203 
	}
}

1205 
BOOL
 
	gWidgë
::
	$InôPics
()

1208 if(!
	`Cª©ePageFa˘‹y
())

1210 
	`Q_ASSERT
(
FALSE
);

1211  
FALSE
;

1214  
TRUE
;

1215 
	}
}

1217 
BOOL
 
	gWidgë
::
	$LﬂdPageD©a
()

1220 
WORD
 
wIndex
 = 
PAGE_HOME
;

1221 
WORD
 
i
 = 
wIndex
; i < 
PAGE_MAX
; i++)

1223 
CPage
 * 
pPage
 = 
m_PageMag
[ 
i
 ];

1224 if(
pPage
)

1226 if(
i
 =
PAGE_SYS_PIC
)

1227 
pPage
->
	`AddD©a
(&
m_objPageEÀmít
);

1229 
pPage
->
	`AddD©a
(
NULL
);

1233  
TRUE
;

1234 
	}
}

1236 
BOOL
 
	gWidgë
::
	$Cª©eThªad
()

1239 
m_ThªadRólProc
 = 
ThªadRólProc
;

1240 
BOOL
 
bFœg
 = 
	`Cª©eThªad
(
m_ThªadRólProc
, 
CMsg
::
MSG_REAL_CHANNEL
);

1243 
bFœg
 = 
	`Cª©eComThªad
();

1244  
bFœg
;

1245 
	}
}

1247 
BOOL
 
	gWidgë
::
	$Cª©eComThªad
()

1249 
size
 = 
m_busAºay
.
	`size
();

1250 if(!
size
)

1252 
	`Q_ASSERT
(
FALSE
);

1253  
FALSE
;

1256 
QBUS_ARRAY_ITOR
 
ô‹
 = 
m_busAºay
.
	`begö
();

1257 
QBUS_ARRAY_ITOR
 
ô‹_íd
 = 
m_busAºay
.
	`íd
();

1258 
BYTE
 
byIndex
 = 0;

1259 ;
ô‹
 !
ô‹_íd
; itor++)

1261 
PBUS_LINEST
 
pBus
 = 
ô‹
.
	`vÆue
();

1262 if(!
pBus
)

1264 
	`Q_ASSERT
(
FALSE
);

1265  
FALSE
;

1268 if(
pBus
->
byBusTy≥
 =
BUS_PAUSE
)

1271 if(!
pBus
->
pPr›îty
 || !pBus->pPr›îty->
pComP‹t
)

1277 
CMsg
::
MSG_TYPE
 
ty≥
 = (CMsg::MSG_TYPE)(CMsg::
MSG_COM_CHANNEL
 + 
byIndex
);

1278 if(!
	`Cª©eThªad
(
ThªadComProc
, 
ty≥
, 
pBus
))

1280 
	`Q_ASSERT
(
FALSE
);

1281  
FALSE
;

1284 
byIndex
++;

1287  
TRUE
;

1288 
	}
}

1290 
BOOL
 
	gWidgë
::
	$Cª©eThªad
(
THREAD_PROC
 
pProc
, 
CMsg
::
MSG_TYPE
 
dwTy≥
,

1291 
PBUS_LINEST
 
pBus
)

1293 if(!
pProc
 || 
dwTy≥
 >
CMsg
::
MSG_COM_END
 || !
pBus
)

1295 
	`Q_ASSERT
(
FALSE
);

1296  
FALSE
;

1299 
iRä
 = 0;

1300 
±hªad_t
 
tid
 = 0;

1301 
iRä
 = 
	`±hªad_¸óã
(&
tid
,

1302 
NULL
,

1303 
pProc
,

1304 (*)
pBus
);

1305 if(0 =
iRä
)

1307 if(
pBus
->
pThªadProc
 !
NULL
)

1309 
	`Q_ASSERT
(
FALSE
);

1310  
FALSE
;

1313 
PSTHREAD_PROC
 
pThªadProc
 = 
√w
 
STHREAD_PROC
;

1314 
pThªadProc
->
pMsg
 = 
√w
 
CMsg
;

1315 
pThªadProc
->
ThªadProc
 = 
pProc
;

1316 
pThªadProc
->
tid
 =Åid;

1317 
pThªadProc
->
pMsg
->
	`Cª©eMsgQueue
(
dwTy≥
);

1318 
m_ThªadAºay
[ 
dwTy≥
 ] = 
pThªadProc
;

1319 
pBus
->
pThªadProc
 =ÖThreadProc;

1320  
TRUE
;

1323  
FALSE
;

1324 
	}
}

1326 *
	$h™dÀr
(*
¨g
)

1328 
	`¶ìp
(5);

1329 
Widgë
 *
poöãr
 = (Widgë *)
¨g
;

1331 
QVe˘‹
<
CEÀmít
 *>::
ôî©‹
 
beg
 = 
poöãr
->
yc_ykvec
.
	`begö
(), 
í
 =Öoöãr->yc_ykvec.
	`íd
(); beg !=Én; beg++)

1332 (*
beg
)->
	`Com∑ªAâribuãD©a
();

1333 
QVe˘‹
<
CEÀmít
 *>::
ôî©‹
 
beg
 = 
poöãr
->
yx_ykvec
.
	`begö
(), 
í
 =Öoöãr->yx_ykvec.
	`íd
(); beg !=Én; beg++)

1334 (*
beg
)->
	`Com∑ªAâribuãD©a
();

1335 
	`¶ìp
(1);

1337 
	}
}

1339 
BOOL
 
	gWidgë
::
	$Cª©eThªad
(
THREAD_PROC
 
pProc
, 
CMsg
::
MSG_TYPE
 
dwTy≥
)

1341 if(!
pProc
 || 
dwTy≥
 >
CMsg
::
MSG_COM_END
)

1343 
	`Q_ASSERT
(
FALSE
);

1344  
FALSE
;

1347 
iRä
 = 0;

1348 
±hªad_t
 
tid
;

1350 
PSTHREAD_PROC
 
pThªadProc
 = 
√w
 
STHREAD_PROC
;

1351 
iRä
 = 
	`±hªad_¸óã
(&
tid
,

1352 
NULL
,

1353 
pProc
,

1354 (*)
pThªadProc
);

1357 
±hªad_t
 
thªad
;

1358 
	`±hªad_¸óã
(&
thªad
, 
NULL
, 
h™dÀr
, 
this
);

1360 if(0 =
iRä
)

1362 if(
pThªadProc
->
pMsg
 !
NULL
)

1364 
	`Q_ASSERT
(
FALSE
);

1365  
FALSE
;

1368 
pThªadProc
->
pMsg
 = 
√w
 
CMsg
;

1369 
pThªadProc
->
ThªadProc
 = 
pProc
;

1370 
pThªadProc
->
tid
 =Åid;

1371 
pThªadProc
->
pMsg
->
	`Cª©eMsgQueue
(
dwTy≥
);

1372 
m_ThªadAºay
[ 
dwTy≥
 ] = 
pThªadProc
;

1373  
TRUE
;

1377 if(
pThªadProc
)

1379 
dñëe
 
pThªadProc
;

1380 
pThªadProc
 = 
NULL
;

1383 
	`Q_ASSERT
(
FALSE
);

1384  
FALSE
;

1387  
FALSE
;

1388 
	}
}

1390 
CPage
 * 
	gWidgë
::
	$Cª©ePage
(
BYTE
 
byTy≥
)

1392 
CPage
 * 
pPage
 = 
NULL
;

1394 
byTy≥
)

1396 
PAGE_HOME
:

1397 
pPage
 = 
√w
 
	`CPage_Home
(
byTy≥
);

1399 
PAGE_SYS_PIC
:

1400 
pPage
 = 
√w
 
	`CPage_SysPic
(
byTy≥
);

1402 
PAGE_DATA_QUERY
:

1403 
pPage
 = 
√w
 
	`CPage_D©aQuîy
(
byTy≥
);

1405 
PAGE_DIOGNOSTIC
:

1406 
pPage
 = 
√w
 
	`CPage_Dügno°ic
(
byTy≥
);

1408 
PAGE_SYS_PARA
:

1409 
pPage
 = 
√w
 
	`CPage_SysP¨amëî
(
byTy≥
);

1413 
	`Q_ASSERT
(
FALSE
);

1414  
NULL
;

1418 
m_PageMag
[ 
byTy≥
 ] = 
pPage
;

1419  
pPage
;

1420 
	}
}

1422 
BOOL
 
	gWidgë
::
	$Cª©ePageFa˘‹y
()

1424 
	`Cª©ePage
(
PAGE_HOME
);

1425 
	`Cª©ePage
(
PAGE_SYS_PIC
);

1426 
	`Cª©ePage
(
PAGE_DATA_QUERY
);

1427 
	`Cª©ePage
(
PAGE_DIOGNOSTIC
);

1428 
	`Cª©ePage
(
PAGE_SYS_PARA
);

1430  
TRUE
;

1431 
	}
}

1433 
	gWidgë
::
	$∑ötEvít
(
QPaötEvít
 * 
pEvít
)

1436 
cxSize
 = 
Widgë
::
HOR_SIZE
;

1437 
cySize
 = 
Widgë
::
VER_SIZE
;

1438 
QImage
 
	`image
(
cxSize
, 
cySize
, QImage::
F‹m©_ARGB32
);

1439 
QPaöãr
 
	`imagePaöãr
(&
image
);

1440 
imagePaöãr
.
	`£tRídîHöt
(
QPaöãr
::
A¡ülüsög
, 
TRUE
);

1441 
imagePaöãr
.
	`îa£Re˘
(
	`ª˘
());

1443 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
();

1444 
CPage
* 
pPage
 = 
	`AfxGëS≥cifyPage
(
byIndex
);

1445 if(
pPage
){

1448 
pixm≠
.
	`lﬂd
("/usr/share/ePut800/Pics/timg.jpg");

1449 
∑öãr
.
	`døwPixm≠
(0, 0, 800, 600, 
pixm≠
);

1450 
pixm≠
.
	`dëach
();

1455 
BYTE
 
cou¡
 = 
yc_ykvec
.
	`size
();

1456 
BYTE
 
i
 = 0; i < 
cou¡
; i++)

1457 
yc_ykvec
[
i
]->
	`Com∑ªAâribuãD©a
();

1458 
cou¡
 = 
yx_ykvec
.
	`size
();

1459 
BYTE
 
i
 = 0; i < 
cou¡
; i++)

1460 
yx_ykvec
[
i
]->
	`Com∑ªAâribuãD©a
();

1463 
pPage
->
	`DøwPage
(&
imagePaöãr
);

1465 
imagePaöãr
.
	`íd
();

1467 
QPaöãr
 
	`wPaöãr
(
this
);

1468 
wPaöãr
.
	`døwImage
(0, 0, 
image
);

1471 
	}
}

1473 
	gWidgë
::
	$timîEvít
(
QTimîEvít
 *)

1478 
	`ª∑öt
();

1479 
	}
}

1481 
	gWidgë
::
	$mou£PªssEvít
(
QMou£Evít
 * 
pEvít
)

1483 if(!
pEvít
)

1485 
	`Q_ASSERT
(
FALSE
);

1489 
BYTE
 
byIndex
 = 
	`AfxGëCurPageIndex
();

1490 
CPage
* 
pPage
 = 
	`AfxGëS≥cifyPage
(
byIndex
);

1491 if(
pPage
)

1492 
pPage
->
	`mou£PªssEvít
(
pEvít
);

1493 
	}
}

1495 
BOOL
 
	gWidgë
::
	$O≥nP‹t
()

1497 
size
 = 
m_busAºay
.
	`size
();

1498 if(!
size
)

1500 
	`Q_ASSERT
(
FALSE
);

1501  
FALSE
;

1504 
QBUS_ARRAY_ITOR
 
Bô‹
 = 
m_busAºay
.
	`begö
();

1505 
QBUS_ARRAY_ITOR
 
Eô‹
 = 
m_busAºay
.
	`íd
();

1506 ; 
Bô‹
 !
Eô‹
; Bitor++)

1508 
WORD
 
wBusNo
 = 
Bô‹
.
	`key
();

1509 if(
wBusNo
 >
TOTAL_BUS
)

1511 
	`Q_ASSERT
(
FALSE
);

1512  
FALSE
;

1515 
PBUS_LINEST
 
pBus
 = 
Bô‹
.
	`vÆue
();

1516 if(
pBus
->
byBusTy≥
 =
BUS_PAUSE
)

1519 if(
pBus
->
pPr›îty
 &&ÖBus->pPr›îty->
m_ComTy≥
 !
Pr›îty
::
COM_NULL


1520 && 
pBus
->
pPr›îty
->
pComP‹t
)

1522 
buf
[ 200 ];

1523 
	`mem£t
(
buf
, 0,(buf));

1524 
BOOL
 
bÊag
 = 
pBus
->
pPr›îty
->
pComP‹t
->
	`O≥nP‹t
(
buf
);

1526 if(!
bÊag
)

1528 
	`≥º‹
(
buf
);

1533 
pBus
->
wBusCommSèã
 = 
COMM_NOMAL
;

1538  
TRUE
;

1539 
	}
}

1541 
BOOL
 
	gWidgë
::
	$OnInôülize
()

1543 
m_pMëhod
 = 
√w
 
CPublicMëhod
;

1544 
LogöDlg
 = 
√w
 
	`CLogöDlg
(
this
);

1545 
YkDlg
 = 
√w
 
	`CYkDlg
(
this
);

1546 
AœrmDlg
 = 
√w
 
	`CAœrmDlg
(
this
);

1547 
Numkeybﬂrd
 = 
√w
 
	`Keybﬂrd
(
this
);

1548 
NumkeybﬂrdFocusWödow
 = 
BOARD_WIDGET
;

1549 
	`AfxRódPwd
();

1550 
	`AfxRódNëP¨amFûe
();

1553 
	`InôDBa£
();

1557 
	`LﬂdAŒKödsOfD©a
();

1560 
	`InôPics
();

1563 
	`LﬂdBusD©a
();

1566 
	`LﬂdPageD©a
();

1569 
	`O≥nP‹t
();

1572 if(!
	`Cª©eThªad
())

1574 
	`¥ötf
("createÅhreadÉrror!\n");

1575  
FALSE
;

1577  
TRUE
;

1578 
	}
}

1580 
BOOL
 
	gWidgë
::
	$LﬂdAŒKödsOfD©a
()

1585 
	`InôPicsD©aFromMem‹y
();

1586 
	`InôPicsAâribuãFromMem‹y
();

1587  
TRUE
;

1588 
	}
}

1591 
BOOL
 
	gWidgë
::
	$InôPicsD©aFromMem‹y
()

1593 
sPicIni
[ ] = 
PIC_PATH
;

1594 
CProfûe
 
	`Profûe
(
sPicIni
);

1595 
BYTE
 
byPicPageNum
 = 0;

1597 
byPicPageNum
 = (
BYTE
)
Profûe
.
	`GëProfûeI¡
((*)"PIC_NUM", (*)"NUM", 0);

1598 if(
byPicPageNum
 == 0)

1600 
	`¥ötf
("%†NumbîÉx˚ed MaxLöê: CuºíàLöêNumbî = %d \¿", 
sPicIni
, 
byPicPageNum
);

1601  
FALSE
;

1603 
BYTE
 
byPage
 = 0; byPagê< 
byPicPageNum
; byPage++)

1605 
PPAGE_FST
 
pPageF°
 = 
√w
 
PAGE_FST
;

1608 
QVe˘‹
<
Aœrm
> 
vec_Æ¨m
;

1610 
sTemp
[ 200 ];

1611 
	`mem£t
(
sTemp
, 0, (sTemp));

1612 
sbuf„r
[ 200 ] = { 0 };

1613 
sizebuff
 = (
sbuf„r
);

1614 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

1615 
sSe˘
[ ] = "PIC_INFO";

1616 
sPicPageName
[ ] = "PICNAME";

1619 
wÆlbuf„r
[64];

1623 
	`•rötf
(
sTemp
, "%s%02d", 
sPicPageName
, 
byPage
 + 1);

1624 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sTemp
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

1627 
	`mem£t
(
sSe˘
, 0, (sSect));

1628 
	`mem£t
(
sPicPageName
, 0, (sPicPageName));

1629 
	`mem£t
(
sTemp
, 0, (sTemp));

1630 
	`°r˝y
(
sSe˘
, "WALL_PAPER");

1631 
	`°r˝y
(
sPicPageName
, "WALLNAME");

1632 
	`•rötf
(
sTemp
, "%s%02d", 
sPicPageName
, 
byPage
 + 1);

1633 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sTemp
, (*)"nuŒ", 
wÆlbuf„r
, (wallbuffer));

1635 if(
	`°rcmp
("nuŒ", 
wÆlbuf„r
) == 0){

1636 
	`¥ötf
("---------------- %s:%d:ERROR! ----------------\n", 
__FILE__
, 
__LINE__
);

1637  
FALSE
;

1642 
sPicW¨eHome
[] = "PIC_WAREHOME";

1643 
sPicW¨eHomeNum
[] = "PICWAREHOMENUM";

1644 
BYTE
 
PicW¨eHomeNum
 = 0;

1646 
	`mem£t
(
sTemp
, 0, (sTemp));

1647 
	`•rötf
(
sTemp
, "%s%02d", 
sPicW¨eHomeNum
, 
byPage
 + 1);

1648 
PicW¨eHomeNum
 = (
BYTE
)
Profûe
.
	`GëProfûeI¡
(
sPicW¨eHome
, 
sTemp
, 0);

1649 
pPageF°
->
pW¨eHome
 = 
PicW¨eHomeNum
;

1650 
	`¥ötf
("%†%d %†%d\n", 
__func__
, 
__LINE__
, 
sTemp
, 
PicW¨eHomeNum
);

1654 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0)

1656 
	`¥ötf
("%†%d %†%†C⁄fig Eº‹ OK. \n", 
__func__
, 
__LINE__
, 
sPicIni
, 
sSe˘
);

1657  
FALSE
;

1659 
pPageF°
->
wPageNo
 = 
byPage
;

1660 
	`°r˝y
(
pPageF°
->
pPageTôÀ
, 
sbuf„r
);

1661 
	`°r˝y
(
pPageF°
->
pWÆlName
, 
wÆlbuf„r
);

1663 if(
FALSE
 =
	`RódPicD©a
(
pPageF°
))

1665 
	`¥ötf
("%†%d %s%02d C⁄fig Eº‹ OK. \n", 
__func__
, 
__LINE__
, 
sPicIni
, 
pPageF°
->
wPageNo
);

1666  
FALSE
;

1669 if(
	`RódAœrmFûe
(
byPage
, 
vec_Æ¨m
Ë=
FALSE
){

1670 
	`¥ötf
("%s %d C⁄fig Eº‹ Ko.\n", 
__FILE__
, 
__LINE__
);

1673 
Æ¨mobj
[
byPage
] = 
vec_Æ¨m
;

1678 
m_objPageEÀmít
.
	`push_back
(
pPageF°
);

1683 
BYTE
 
Size
=
Æ¨mobj
.
	`size
();

1684 
BYTE
 
i
 = 0; i < 
Size
; i++){

1685 if(
Æ¨mobj
[
i
].
	`size
() != 0){

1686 autÿ
beg
 = 
Æ¨mobj
[
i
].
	`begö
(), 
í
 =áœrmobj[i].
	`íd
(); beg !=Én; beg++){

1687 
	`¥ötf
("\n\n\n\n******** %d ********\n", (*
beg
).
∑geid
);

1688 
	`¥ötf
("******** %d ********\n", (*
beg
).
objid
);

1689 
	`¥ötf
("******** %d ********\n", (*
beg
).
id
);

1690 
	`¥ötf
("******** %d ********\n", (*
beg
).
t›pﬁe
);

1691 
	`¥ötf
("******** %d ********\n", (*
beg
).
t›
);

1692 
	`¥ötf
("******** %d ********\n", (*
beg
).
vÆuë›
);

1693 
	`¥ötf
("******** %d ********\n", (*
beg
).
vÆuebŸtom
);

1694 
	`¥ötf
("******** %d ********\n", (*
beg
).
bŸtom
);

1695 
	`¥ötf
("******** %d ********\n", (*
beg
).
bŸtompﬁe
);

1696 
	`¥ötf
("******** %d ********\n", (*
beg
).
bu¢o
);

1697 
	`¥ötf
("******** %d ********\n", (*
beg
).
devaddr
);

1698 
	`¥ötf
("******** %d ********\n", (*
beg
).
poöt
);

1699 
	`¥ötf
("******** %d ********\n\n\n\n", (*
beg
).
ªœnum
);

1706  
TRUE
;

1707 
	}
}

1709 
BOOL
 
	gWidgë
::
	$RódPicD©a
(
PPAGE_FST
 
pPageF°
)

1711 
sPicNoIni
[ 64 ] = "";

1712 
	`•rötf
(
sPicNoIni
, "%•ic%02d.öi", 
PICNO_PATH
, 
pPageF°
->
wPageNo
+1);

1714 
CProfûe
 
	`Profûe
(
sPicNoIni
);

1715 
WORD
 
wSignNum
 = 0;

1717 
wSignNum
 = (
WORD
)
Profûe
.
	`GëProfûeI¡
((*)"SIGNNUM", (*)"NUM", 0);

1718 if(
wSignNum
 == 0)

1720 
	`¥ötf
("%†Num %d \¿", 
sPicNoIni
,
wSignNum
);

1721  
TRUE
;

1723 
pPageF°
->
wEÀNumbî
 = 
wSignNum
;

1724 
BYTE
 
bySignNo
 = 0; bySignNÿ< 
wSignNum
; bySignNo++)

1726 
PELE_FST
 
pEÀF°
 = 
√w
 
ELE_FST
;

1727 
iNum
;

1728 
sTemp
[ 200 ];

1729 
	`mem£t
(
sTemp
, 0, (sTemp));

1730 
sbuf„r
[ 200 ] = { 0 };

1731 
sizebuff
 = (
sbuf„r
);

1732 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

1733 
sId
[ ] = "id";

1735 
sPicTy≥
[ ] = "signid";

1739 
sDúe˘
[ ] = "direct";

1740 
sLökObje˘Id
[ ] = "LinkObjectId";

1741 
sT›
[ ] = "top";

1742 
sBŸtom
[ ] = "bottom";

1743 
sLe·
[ ] = "left";

1744 
sRight
[ ] = "right";

1745 
sText
[ ] = "text";

1748 
sRñ™um
[] = "relanum";

1751 
sSe˘
[16] = "";

1752 
	`•rötf
(
sSe˘
, "SIGN%03d",
bySignNo
+1);

1754 
pEÀF°
->
wPageNo
 = 
pPageF°
->wPageNo;

1756 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sId
, -1);

1757 if(
iNum
 == -1)

1759 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sId
);

1760  
FALSE
;

1762 
pEÀF°
->
wObje˘ID
 = 
iNum
;

1764 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sPicTy≥
, -1);

1765 if(
iNum
 == -1)

1767 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sPicTy≥
);

1768  
FALSE
;

1770 
pEÀF°
->
wEÀmítTy≥
 = (
UINT
)
iNum
;

1772 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sDúe˘
, -1);

1773 if(
iNum
 == -1)

1775 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sDúe˘
);

1776  
FALSE
;

1778 
pEÀF°
->
wDúe˘
 = 
iNum
;

1780 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sLökObje˘Id
, -1);

1781 if(
iNum
 == -1)

1783 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sLökObje˘Id
);

1784  
FALSE
;

1786 
pEÀF°
->
wLökObje˘Id
 = 
iNum
;

1788 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sT›
, -1);

1789 if(
iNum
 == -1)

1791 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sT›
);

1792  
FALSE
;

1794 
pEÀF°
->
wT›
 = 
iNum
;

1796 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sBŸtom
, -1);

1797 if(
iNum
 == -1)

1799 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sBŸtom
);

1800  
FALSE
;

1802 
pEÀF°
->
wBŸtom
 = 
iNum
;

1804 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sLe·
, -1);

1805 if(
iNum
 == -1)

1807 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sLe·
);

1808  
FALSE
;

1810 
pEÀF°
->
wLe·
 = 
iNum
;

1812 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sRight
, -1);

1813 if(
iNum
 == -1)

1815 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
,
sRight
);

1816  
FALSE
;

1818 
pEÀF°
->
wRight
 = 
iNum
;

1820 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sRñ™um
, -1);

1821 if(
iNum
 == -1)

1823 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sPicNoIni
,
sSe˘
, 
sRñ™um
);

1824  
FALSE
;

1826 
pEÀF°
->
ªœnum
 = 
iNum
;

1828 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sText
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

1834 
	`°r˝y
(
pEÀF°
->
ãxt
, 
sbuf„r
);

1837 
sPicName
[] = "picname";

1838 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

1839 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sPicName
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

1840 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0){

1841 
	`¥ötf
("Gë %†%†%†Faûed ! \n", 
sPicNoIni
, 
sSe˘
, 
sPicName
);

1842  
TRUE
;

1844 
	`°r˝y
(
pEÀF°
->
pi˙ame
, 
sbuf„r
);

1846 
sPicI¡rodu˚
[] = "picintroduce";

1847 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

1848 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sPicI¡rodu˚
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

1849 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0){

1850 
	`¥ötf
("Gë %†%†%†Faûed ! \n", 
sPicNoIni
, 
sSe˘
, 
sPicName
);

1851  
TRUE
;

1853 
	`°r˝y
(
pEÀF°
->
picöåodu˚
, 
sbuf„r
);

1860 
pPageF°
->
EÀmítAºay
.
	`push_back
(
pEÀF°
);

1862  
TRUE
;

1863 
	}
}

1875 
BOOL
 
	gWidgë
::
RódAœrmFûe
(
QVe˘‹
<
Aœrm
*> &
pAœrms
, 
BYTE
 
∑gíum
)

1877 
	gsAœrm
[64] = "";

1878 
•rötf
(
sAœrm
, "%ßœrm%02d.öi", 
ALARM_PATH
, 
∑gíum
 + 1);

1879 
CProfûe
 
Profûe
(
sAœrm
);

1880 
WORD
 
	gunônum
;

1882 
	gunônum
 = (
WORD
)
Profûe
.
GëProfûeI¡
((*)"UNITNUM", (*)"NUM", 0);

1883 if(
	gunônum
 == 0){

1884 
¥ötf
("----------- %s %d ------------\n", 
__FILE__
, 
__LINE__
);

1885 
¥ötf
("%d\n", 
unônum
);

1886  
	gFALSE
;

1889 
BYTE
 
	gunôno
 = 0; unônÿ< 
	gunônum
; unitno++){

1890 
Aœrm
 *
	gpunô
 = 
√w
 Alarm;

1891 
WORD
 
	giNum
;

1892 
	gsPageid
[] = "pageid";

1893 
	gsObjid
[] = "objid";

1894 
	gsId
[] = "id";

1895 
	gsT›pﬁe
[ ] = "toppole";

1896 
	gsT›
[ ] = "top";

1897 
	gsVÆuë›
[ ] = "valuetop";

1898 
	gsVÆuebŸtom
[ ] = "valuebottom";

1899 
	gsBŸtom
[ ] = "bottom";

1900 
	gsBŸtompﬁe
[ ] = "bottompole";

1901 
	gsBu¢o
[ ] = "busno";

1902 
	gsDevaddr
[ ] = "devaddr";

1903 
	gsPoöt
[ ] = "point";

1904 
	gsRñ™um
[] = "relanum";

1906 
	gsSe˘
[16] = "";

1907 
•rötf
(
sSe˘
, "UNIT%03d",
unôno
 + 1);

1909 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sPageid
, -1);

1910 if(
	giNum
 == -1)

1912 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sPageid
);

1913  
	gFALSE
;

1915 
	gpunô
->
	g∑geid
 = 
iNum
;

1917 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sObjid
, -1);

1918 if(
	giNum
 == -1)

1920 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sObjid
);

1921  
	gFALSE
;

1923 
	gpunô
->
	gobjid
 = 
iNum
;

1925 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sId
, -1);

1926 if(
	giNum
 == -1)

1928 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sId
);

1929  
	gFALSE
;

1931 
	gpunô
->
	gid
 = 
iNum
;

1933 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sT›pﬁe
, -1);

1934 if(
	giNum
 == -1)

1936 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sT›pﬁe
);

1937  
	gFALSE
;

1939 
	gpunô
->
	gt›pﬁe
 = 
iNum
;

1941 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sT›
, -1);

1942 if(
	giNum
 == -1)

1944 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sT›
);

1945  
	gFALSE
;

1947 
	gpunô
->
	gt›
 = 
iNum
;

1949 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sVÆuë›
, -1);

1950 if(
	giNum
 == -1)

1952 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sVÆuë›
);

1953  
	gFALSE
;

1955 
	gpunô
->
	gvÆuë›
 = 
iNum
;

1957 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sVÆuebŸtom
, -1);

1958 if(
	giNum
 == -1)

1960 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sVÆuebŸtom
);

1961  
	gFALSE
;

1963 
	gpunô
->
	gvÆuebŸtom
 = 
iNum
;

1965 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sBŸtom
, -1);

1966 if(
	giNum
 == -1)

1968 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sBŸtom
);

1969  
	gFALSE
;

1971 
	gpunô
->
	gbŸtom
 = 
iNum
;

1973 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sBŸtompﬁe
, -1);

1974 if(
	giNum
 == -1)

1976 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sBŸtompﬁe
);

1977  
	gFALSE
;

1979 
	gpunô
->
	gbŸtompﬁe
 = 
iNum
;

1981 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sBu¢o
, -1);

1982 if(
	giNum
 == -1)

1984 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sBu¢o
);

1985  
	gFALSE
;

1987 
	gpunô
->
	gbu¢o
 = 
iNum
;

1989 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sDevaddr
, -1);

1990 if(
	giNum
 == -1)

1992 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sDevaddr
);

1993  
	gFALSE
;

1995 
	gpunô
->
	gdevaddr
 = 
iNum
;

1997 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sPoöt
, -1);

1998 if(
	giNum
 == -1)

2000 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sPoöt
);

2001  
	gFALSE
;

2003 
	gpunô
->
	gpoöt
 = 
iNum
;

2005 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sRñ™um
, -1);

2006 if(
	giNum
 == -1)

2008 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sRñ™um
);

2009  
	gFALSE
;

2011 
	gpunô
->
	gªœnum
 = 
iNum
;

2013 
	gpAœrms
->
push_back
(
punô
);

2015 
¥ötf
("**** %d ****\n", (*
beg
)->
∑geid
);

2016 
¥ötf
("**** %d ****\n", (*
beg
)->
objid
);

2017 
¥ötf
("**** %d ****\n", (*
beg
)->
id
);

2018 
¥ötf
("**** %d ****\n", (*
beg
)->
t›pﬁe
);

2019 
¥ötf
("**** %d ****\n", (*
beg
)->
t›
);

2020 
¥ötf
("**** %d ****\n", (*
beg
)->
vÆuë›
);

2021 
¥ötf
("**** %d ****\n", (*
beg
)->
vÆuebŸtom
);

2022 
¥ötf
("**** %d ****\n", (*
beg
)->
bu¢o
);

2023 
¥ötf
("**** %d ****\n", (*
beg
)->
devaddr
);

2024 
¥ötf
("**** %d ****\n", (*
beg
)->
poöt
);

2027  
	gTRUE
;

2031 
BOOL
 
	gWidgë
::
RódAœrmFûe
(
BYTE
 
byPage
, 
QVe˘‹
<
Aœrm
> &
vec_Æ¨m
)

2033 
	gsAœrm
[64] = "";

2034 
•rötf
(
sAœrm
, "%ßœrm%02d.öi", 
ALARM_PATH
, 
byPage
 + 1);

2035 
CProfûe
 
Profûe
(
sAœrm
);

2036 
WORD
 
	gunônum
;

2038 
	gunônum
 = (
WORD
)
Profûe
.
GëProfûeI¡
((*)"UNITNUM", (*)"NUM", 0);

2039 if(
	gunônum
 == 0){

2040 
¥ötf
("----------- %s %d ------------\n", 
__FILE__
, 
__LINE__
);

2041 
¥ötf
("%d\n", 
unônum
);

2042  
	gFALSE
;

2045 
¥ötf
("%†%d unônum = %d\n", 
__func__
, 
__LINE__
, 
unônum
);

2046 
BYTE
 
	gunôno
 = 0; unônÿ< 
	gunônum
; unitno++){

2048 
Aœrm
 
	gunôobj
;

2049 
mem£t
(&
unôobj
, 0, (
Aœrm
));

2050 
	giNum
;

2051 
	gsPageid
[] = "pageid";

2052 
	gsObjid
[] = "objid";

2053 
	gsId
[] = "id";

2054 
	gsT›pﬁe
[ ] = "toppole";

2055 
	gsT›
[ ] = "top";

2056 
	gsVÆuë›
[ ] = "valuetop";

2057 
	gsVÆuebŸtom
[ ] = "valuebottom";

2058 
	gsBŸtom
[ ] = "bottom";

2059 
	gsBŸtompﬁe
[ ] = "bottompole";

2060 
	gsBu¢o
[ ] = "busno";

2061 
	gsDevaddr
[ ] = "devaddr";

2062 
	gsPoöt
[ ] = "point";

2063 
	gsRe£rv©i⁄
[] = "reservation";

2065 
	gsSe˘
[16] = "";

2066 
•rötf
(
sSe˘
, "UNIT%03d",
unôno
 + 1);

2069 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sPageid
, -1);

2070 if(
	giNum
 == -1){

2071 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sPageid
);

2072  
	gFALSE
;

2074 
	gunôobj
.
	g∑geid
 = 
iNum
;

2076 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sObjid
, -1);

2077 if(
	giNum
 == -1){

2078 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sObjid
);

2079  
	gFALSE
;

2081 
	gunôobj
.
	gobjid
 = 
iNum
;

2083 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sId
, -1);

2084 if(
	giNum
 == -1){

2085 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sId
);

2086  
	gFALSE
;

2088 
	gunôobj
.
	gid
 = 
iNum
;

2090 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sT›pﬁe
, -1);

2091 if(
	giNum
 == -1){

2092 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sT›pﬁe
);

2093  
	gFALSE
;

2095 
	gunôobj
.
	gt›pﬁe
 = 
iNum
;

2097 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sT›
, -1);

2098 if(
	giNum
 == -1){

2099 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sT›
);

2100  
	gFALSE
;

2102 
	gunôobj
.
	gt›
 = 
iNum
;

2104 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sVÆuë›
, -1);

2105 if(
	giNum
 == -1){

2106 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sVÆuë›
);

2107  
	gFALSE
;

2109 
	gunôobj
.
	gvÆuë›
 = 
iNum
;

2112 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sVÆuebŸtom
, -1);

2113 if(
	giNum
 == -1){

2114 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sVÆuebŸtom
);

2115  
	gFALSE
;

2117 
	gunôobj
.
	gvÆuebŸtom
 = 
iNum
;

2119 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sBŸtom
, -1);

2120 if(
	giNum
 == -1){

2121 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sBŸtom
);

2122  
	gFALSE
;

2124 
	gunôobj
.
	gbŸtom
 = 
iNum
;

2126 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sBŸtompﬁe
, -1);

2127 if(
	giNum
 == -1){

2128 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sBŸtompﬁe
);

2129  
	gFALSE
;

2131 
	gunôobj
.
	gbŸtompﬁe
 = 
iNum
;

2133 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sBu¢o
, -1);

2134 if(
	giNum
 == -1){

2135 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sBu¢o
);

2136  
	gFALSE
;

2138 
	gunôobj
.
	gbu¢o
 = 
iNum
;

2140 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sDevaddr
, -1);

2141 if(
	giNum
 == -1){

2142 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sDevaddr
);

2143  
	gFALSE
;

2145 
	gunôobj
.
	gdevaddr
 = 
iNum
;

2147 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sPoöt
, -1);

2148 if(
	giNum
 == -1){

2149 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sPoöt
);

2150  
	gFALSE
;

2152 
	gunôobj
.
	gpoöt
 = 
iNum
;

2154 
	giNum
 = 
Profûe
.
GëProfûeI¡
(
sSe˘
, 
sRe£rv©i⁄
, -1);

2155 if(
	giNum
 == -1){

2156 
¥ötf
("Gë %†%†%†Faûed ! \¿", 
sAœrm
, 
sSe˘
, 
sRe£rv©i⁄
);

2157  
	gFALSE
;

2159 
	gunôobj
.
	gª£rv©i⁄
 = 
iNum
;

2160 
¥ötf
("%†%dÑe£rv©i⁄ = %d unônÿ%d\n", 
__func__
, 
__LINE__
, 
unôobj
.
ª£rv©i⁄
, 
unôno
);

2162 
	gvec_Æ¨m
.
push_back
(
unôobj
);

2177  
	gTRUE
;

2182 
BOOL
 
	gWidgë
::
	$InôPicsAâribuãFromMem‹y
()

2184 
sObjIni
[ ] = 
OBJECT_PATH
;

2185 
CProfûe
 
	`Profûe
(
sObjIni
);

2186 
BYTE
 
byObjNum
 = 0;

2187 
sTemp
[ 200 ];

2188 
	`mem£t
(
sTemp
, 0, (sTemp));

2189 
sbuf„r
[ 200 ] = { 0 };

2190 
sizebuff
 = (
sbuf„r
);

2191 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

2192 
sSe˘
[16] = "";

2193 
sObjId
[ ] = "id";

2195 
sObjName
[ ] = "name";

2196 
sObjNodeL
[ ] = "nodenum1";

2197 
sObjNodeR
[ ] = "nodenum2";

2198 
iRä
=0;

2200 
byObjNum
 = (
BYTE
)
Profûe
.
	`GëProfûeI¡
((*)"OBJNUM", (*)"NUM", 0);

2201 if(
byObjNum
 == 0)

2203 
	`¥ötf
("%†NumbîÉx˚ed MaxLöê: CuºíàLöêNumbî = %d \¿", 
sObjIni
, 
byObjNum
);

2204  
FALSE
;

2206 
BYTE
 
byObjNo
 = 0; byObjNÿ< 
byObjNum
; byObjNo++)

2208 
PPIC_ATTRIBUT_FST
 
pPicAâF°
 = 
√w
 
PIC_ATTRIBUTE_FST
;

2211 
	`mem£t
(
sSe˘
, 0,(sSect));

2212 
	`•rötf
(
sSe˘
, "%s%03d","OBJ", 
byObjNo
 + 1);

2213 
iRä
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sObjId
, 0);

2214 if(
iRä
 == 0)

2216 
	`¥ötf
("%†%†%†C⁄fig Eº‹ OK. \n", 
sObjIni
,
sSe˘
,
sObjId
);

2217  
FALSE
;

2219 
pPicAâF°
->
wObje˘ID
 = 
iRä
;

2221 
iRä
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sObjNodeL
, -1);

2222 if(
iRä
 == -1)

2224 
	`¥ötf
("%†%†%†C⁄fig Eº‹ OK. \n", 
sObjIni
,
sSe˘
,
sObjId
);

2225  
FALSE
;

2227 
pPicAâF°
->
wObje˘NodeL
 = 
iRä
;

2229 
iRä
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sObjNodeR
, -1);

2230 if(
iRä
 == -1)

2232 
	`¥ötf
("%†%†%†C⁄fig Eº‹ OK. \n", 
sObjIni
,
sSe˘
,
sObjId
);

2233  
FALSE
;

2235 
pPicAâF°
->
wObje˘NodeR
 = 
iRä
;

2237 
Profûe
.
	`GëProfûeSåög
(
sSe˘
, 
sObjName
, (*)"nuŒ", 
sbuf„r
, 
sizebuff
);

2238 if(
	`°rcmp
("nuŒ", 
sbuf„r
) == 0)

2240 
	`¥ötf
("%†%†%†C⁄fig Eº‹ OK. \n", 
sObjIni
,
sSe˘
,
sObjName
);

2241  
FALSE
;

2243 
	`°r˝y
(
pPicAâF°
->
Obje˘Name
, 
sbuf„r
);

2247 
	`RódBödD©a
(
pPicAâF°
);

2248 
m_objAŒEÀmítAâribuã_M≠
[ 
pPicAâF°
->
wObje˘ID
 ] =ÖPicAttFst;

2352  
TRUE
;

2353 
	}
}

2355 
BOOL
 
	gWidgë
::
	$RódBödD©a
(
PPIC_ATTRIBUT_FST
 
pPicAâF°
)

2357 
sBögD©aNoIni
[ 64 ] = "";

2358 
	`•rötf
(
sBögD©aNoIni
, "%sBödD©a%03d.öi", 
BINDDATANO_PATH
, 
pPicAâF°
->
wObje˘ID
);

2359 
CProfûe
 
	`Profûe
(
sBögD©aNoIni
);

2360 
WORD
 
wObjBödD©aNum
 = 0;

2362 
wObjBödD©aNum
 = (
WORD
)
Profûe
.
	`GëProfûeI¡
((*)"BINDNUM", (*)"NUM", 0);

2363 if(
wObjBödD©aNum
 == 0)

2365 
	`¥ötf
("%†D©aNum i†%d \¿", 
sBögD©aNoIni
,
wObjBödD©aNum
);

2366  
TRUE
;

2369 
BYTE
 
byBödD©aNo
 = 0; byBödD©aNÿ< 
wObjBödD©aNum
; byBindDataNo++)

2371 
iNum
;

2372 
sbuf„r
[ 200 ] = { 0 };

2373 
sizebuff
 = (
sbuf„r
);

2374 
	`mem£t
(
sbuf„r
, 0, 
sizebuff
);

2376 
sBödId
[ ] = "bindid";

2377 
sD©aTy≥
[ ] = "datatype";

2378 
sD©aNum
[ ] = "datanum";

2379 
sBusNum
[ ] = "busnum";

2380 
sAddr
[ ] = "addr";

2381 
sPoöt
[ ] = "point";

2387 
sSe˘
[16] = "";

2388 
	`•rötf
(
sSe˘
, "BIND%03d",
byBödD©aNo
+1);

2390 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sBödId
, -1);

2391 if(
iNum
 == -1)

2393 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sBögD©aNoIni
,
sSe˘
,
sBödId
);

2394  
FALSE
;

2396 if(
iNum
 !
pPicAâF°
->
wObje˘ID
)

2398 
	`¥ötf
("Get %s %s bindid:%d!=BindData%d sPicId Failed ! \n ",

2399 
sBögD©aNoIni
, 
sSe˘
,
iNum
,
pPicAâF°
->
wObje˘ID
);

2400  
FALSE
;

2403 
PPIC_ATTRIBUTE_DATA_FST
 
Aâribuã_d©a
 = 
√w
 
PIC_ATTRIBUTE_DATA_FST
;

2405 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sD©aTy≥
, -1);

2406 if(
iNum
 == -1)

2408 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sBögD©aNoIni
,
sSe˘
,
sD©aTy≥
);

2409  
FALSE
;

2411 
Aâribuã_d©a
->
byD©aTy≥
 = 
iNum
;

2413 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sD©aNum
, -1);

2414 if(
iNum
 == -1)

2416 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sBögD©aNoIni
,
sSe˘
,
sD©aNum
);

2417  
FALSE
;

2419 
Aâribuã_d©a
->
byAâribuãD©aByã
 = 
iNum
;

2421 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sBusNum
, -1);

2422 if(
iNum
 == -1)

2424 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sBögD©aNoIni
,
sSe˘
,
sBusNum
);

2425  
FALSE
;

2427 
Aâribuã_d©a
->
wBusNo
 = 
iNum
;

2429 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sAddr
, -1);

2430 if(
iNum
 == -1)

2432 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sBögD©aNoIni
,
sSe˘
,
sAddr
);

2433  
FALSE
;

2435 
Aâribuã_d©a
->
wAddr
 = 
iNum
;

2437 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sPoöt
, -1);

2438 if(
iNum
 == -1)

2440 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sBögD©aNoIni
,
sSe˘
,
sPoöt
);

2441  
FALSE
;

2443 
Aâribuã_d©a
->
wP¡No
 = 
iNum
;

2446 
iNum
 = 
Profûe
.
	`GëProfûeI¡
(
sSe˘
, 
sRñ™um
, -1);

2447 if(
iNum
 == -1)

2449 
	`¥ötf
("Gë %†%†%†Faûed ! \¿", 
sBögD©aNoIni
,
sSe˘
,
sPoöt
);

2450  
FALSE
;

2452 
Aâribuã_d©a
->
ªœnum
 = 
iNum
;

2455 
pPicAâF°
->
D©aAºay
.
	`push_back
(
Aâribuã_d©a
);

2460  
TRUE
;

2461 
	}
}

2465 
BOOL
 
	gWidgë
::
	$Rñ©eYcYk
(
PPIC_ATTRIBUT_FST
 
pPicAâF°
, 
WORD
 
wObjBödD©aNum
)

2468 
WORD
 
cou¡
 = 
pPicAâF°
->
D©aAºay
.
	`size
();

2469 
WORD
 
i
 = 
cou¡
 - 
wObjBödD©aNum
; i < count; i++){

2470 if(
pPicAâF°
->
D©aAºay
.
	`©
(
i
)->
byD©aTy≥
 == 4){

2471 
WORD
 
j
 = 
cou¡
 - 
wObjBödD©aNum
; j < count; j++){

2472 if(
pPicAâF°
->
D©aAºay
.
	`©
(
i
)->
ªœnum
 =pPicAâF°->D©aAºay.©(
j
)->
d©™um
){

2475 
BYTE
 
m
 = 0; m < 
m_objPageEÀmít
.
	`size
(); m++){

2476 if(
m_objPageEÀmít
.
	`©
(
m
).
wPageNo
)

2483 
	}
}

2494 
BOOL
 
	gWidgë
::
	$InôDBa£
()

2496 
CDBa£M™agî
 *
pModñ
 = 
NULL
;

2497 
m_pDBa£
 = 
√w
 
CDBa£M™agî
;

2498 i‡(
NULL
 =
m_pDBa£
)

2500 
	`¥ötf
("dbaseÇewÉrror\n");

2501  
FALSE
;

2504 
pModñ
 = 
m_pDBa£
->
	`Inô
();

2505 if(
NULL
 =
pModñ
)

2507 
	`¥ötf
("dbase model initÉrror\n");

2508  
FALSE
;

2511 
m_pDBa£
->
m_pMoudÀ
 = 
pModñ
;

2513  
TRUE
;

2514 
	}
}

2523 
	gWidgë
::
	$DñëeDBa£
()

2525 if(
NULL
 !
m_pDBa£
)

2527 
dñëe
 
m_pDBa£
;

2528 
m_pDBa£
 = 
NULL
;

2530 
	}
}

	@widget.h

1 #i‚de‡
WIDGET_H


2 
	#WIDGET_H


	)

4 
	~<QWidgë
>

5 
	~"Ty≥def.h
"

6 
	~<ve˘‹
>

7 
	~"˛ogödlg.h
"

9 
	~<qcheckbox.h
>

11 
	~"lﬂdlibøry.h
"

12 
	~"PrŸo/cmëhod.h
"

13 
	~"cmsg.h
"

14 
	~"¥ofûe.h
"

15 
	~"Dba£/dba£m™agî.h
"

16 
	~"cykdlg.h
"

17 
	~"ˇœrmdlg.h
"

19 
	~"EÀmít/˚ñmít.h
"

20 
	~<QTimîEvít
>

23 
	#SYSDATAPATH
 "./c⁄fig"

	)

24 
	#DEVNAME
 "Bus"

	)

25 
˛ass
 
	gCPage
 ;

27 
«me•a˚
 
	gUi
 {

28 
˛ass
 
	gWidgë
;

31 ˛as†
	cWidgë
 : 
public
 
QWidgë


33 
Q_OBJECT


35 
public
:

36 
ex∂icô
 
Widgë
(
QWidgë
 *
∑ª¡
 = 0);

37 ~
Widgë
();

38 
BOOL
 
OnInôülize
() ;

40 
	m¥iv©e
:

41 
Ui
::
Widgë
 *
ui
;

43 
	mpublic
:

44 íum{ 
HOR_SIZE
 = 800 , 
	mVER_SIZE
 = 600 } ;

45 íum{ 
	gPAGE_HOME
 = 0x11, 
	gPAGE_SYS_PIC
 , 
	gPAGE_DATA_QUERY
 ,

46 
	gPAGE_DIOGNOSTIC
 , 
	gPAGE_SYS_PARA
 , 
	gPAGE_MAX
 } ;

47 íum{ 
	gBOARD_LOGIN_DLG
 , 
	gBOARD_WIDGET
 };

48 
	gpublic
:

49 
QPAGE_ARRAY
 
m_PageMag
 ;

50 
QTHREAD_ARRAY
 
	gm_ThªadAºay
 ;

51 
QBUS_ARRAY
 
	gm_busAºay
 ;

52 
CLﬂdLibøry
 
	gm_lﬂdLibøry
 ;

53 
CMëhod
 *
	gm_pMëhod
 ;

54 
QCAB_ARRAY
 
	gm_ˇbAºay
 ;

55 
QSCIRCUIT_ARRAY
 
	gm_sCúcuôAºay
 ;

56 
QELEMENT_PICOBJ_MAP
 
	gm_objAŒEÀmít
 ;

57 
QPAGE_FILEST_ARRAY
 
	gm_objPageEÀmít
 ;

58 
QPIC_ATTRIBUTE_FST_ARRAY
 
	gm_objAŒEÀmítAâribuã
;

59 
QPIC_ATTRIBUTE_FST_MAP
 
	gm_objAŒEÀmítAâribuã_M≠
;

62 
CLogöDlg
 * 
	gLogöDlg
;

63 
CYkDlg
 * 
	gYkDlg
;

64 
CAœrmDlg
 * 
	gAœrmDlg
;

65 
Keybﬂrd
 * 
	gNumkeybﬂrd
;

66 
BYTE
 
	gNumkeybﬂrdFocusWödow
;

67 
WORD
 
	gm_wDevNum
;

68 
	gm_°rProje˘Name
[50] ;

69 
CDBa£M™agî
 *
	gm_pDBa£
;

72 
	gQM≠
<
	gBYTE
, 
	gQVe˘‹
<
	gAœrm
> > 
	gÆ¨mobj
;

73 
	gQVe˘‹
<
	gCEÀmít
 *> 
	gyc_ykvec
;

74 
	gQVe˘‹
<
	gCEÀmít
 *> 
	gyx_ykvec
;

76 
	g¥iv©e
:

78 
BOOL
 
InôDBa£
( );

80 
DñëeDBa£
();

81 
	g¥Ÿe˘ed
:

83 
BOOL
 
LﬂdPageD©a
( );

84 
BOOL
 
InôPics
( );

86 
˛órD©a
( ) ;

87 
CPage
 * 
Cª©ePage
–
BYTE
 
byTy≥
 );

88 
BOOL
 
Cª©ePageFa˘‹y
( );

89 
BOOL
 
Cª©eThªad
( );

90 
BOOL
 
Cª©eThªad
–
THREAD_PROC
 
pProc
 , 
CMsg
::
MSG_TYPE
 
dwTy≥
 );

91 
BOOL
 
Cª©eThªad
(
THREAD_PROC
 
pProc
, 
CMsg
::
MSG_TYPE
 
dwTy≥
,

92 
PBUS_LINEST
 
pBus
 );

94 
BOOL
 
LﬂdBusD©a
();

95 
BOOL
 
O≥nP‹t
( ) ;

96 
BOOL
 
InôPicsD©aFromMem‹y
( );

97 
BOOL
 
RódPicD©a
(
PPAGE_FST
 
pPageF°
);

98 
BOOL
 
InôPicsAâribuãFromMem‹y
( ) ;

99 
BOOL
 
RódBödD©a
(
PPIC_ATTRIBUT_FST
 
pPicAâF°
);

100 
THREAD_PROC
 
	gm_ThªadRólProc
 ;

101 
BOOL
 
LﬂdAŒKödsOfD©a
( );

105 
BOOL
 
RódAœrmFûe
(
BYTE
, 
QVe˘‹
<
Aœrm
> &);

107 
	g¥Ÿe˘ed
:

108 
∑ötEvít
–
QPaötEvít
 * 
pEvít
 );

109 
mou£PªssEvít
(
QMou£Evít
 *);

111 
timîEvít
(
QTimîEvít
 *);

113 
	g¥Ÿe˘ed
:

115 
BOOL
 
AddD©aToDev
–
CProfûe
 &
¥ofûe
 , 
PDEVST
 
pDev
 , 
QDEV_DATA_ARRAY
 * 
pAºay
 , 
BYTE
 
byTy≥
 );

116 
BOOL
 
Cª©eBusPr›îty
–
PBUS_LINEST
 
pBus
 );

117 
BOOL
 
Cª©eBusPrŸocﬁ
–
PBUS_LINEST
 
pBus
 );

118 
BOOL
 
AddPrŸoModuÀ
–
PBUS_LINEST
 
pBus
 );

119 
BOOL
 
Cª©eCaböë
( );

120 
BOOL
 
RódCúcuô
(
PCABINET
 
pCab
);

121 
BOOL
 
RódLo›
(
PSINGALCIRCUIT
 
pCúcuô
);

122 
BOOL
 
Cª©eLogiˇlCúcuô
( );

123 
BOOL
 
Cª©eComThªad
( );

124 
	g¥iv©e
:

125 
BOOL
 
GëDevD©a
–
PBUS_LINEST
 
pBus
 );

126 
BOOL
 
Pro˚ssFûeD©a
–
CProfûe
 &
¥ofûe
 , 
PBUS_LINEST
 
pBus
 );

128 
BOOL
 
GëBusProfûeSåög
–
CProfûe
 &
Profûe
 , * 
sSe˘
 , * 
sKey
 , * 
sTemp
 , &
size
 );

129 
BOOL
 
AddNëP¨a
–
PBUSDATA
 
pBusD©a
 , 
CProfûe
 &
¥ofûe
 , 
BYTE
 
byNo
 );

130 
BOOL
 
AddP‹tOthîP¨a
–
PBUSDATA
 
pBusD©a
 , 
CProfûe
 &
¥ofûe
 , * 
busSåög
 , 
BYTE
 
byNo
);

131 
SëYcP¨am
(
PD©aTy≥
 
PD©a
, * 
szP¨am
);

132 
SëYxP¨am
(
PD©aTy≥
 
PD©a
, * 
szP¨am
);

133 
SëYmP¨am
(
PD©aTy≥
 
PD©a
, * 
szP¨am
);

134 
SëYkP¨am
(
PD©aTy≥
 
PD©a
, * 
szP¨am
);

135 
GëBusPrŸoI¡îvÆ
–
CProfûe
 &
Profûe
 , * 
sSe˘
 , * 
sKey
 );

137 
BOOL
 
RódP‹tP¨a
–
INITBUS
 & 
bus
 );

139 
	gtimîid
;

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/linux/input.h

8 #i‚de‡
_INPUT_H


9 
	#_INPUT_H


	)

12 
	~<sys/time.h
>

13 
	~<sys/io˘l.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<löux/ty≥s.h
>

17 
	~"öput-evít-codes.h
"

23 
	söput_evít
 {

24 
timevÆ
 
	mtime
;

25 
__u16
 
	mty≥
;

26 
__u16
 
	mcode
;

27 
__s32
 
	mvÆue
;

34 
	#EV_VERSION
 0x010001

	)

40 
	söput_id
 {

41 
__u16
 
	mbu°y≥
;

42 
__u16
 
	mvíd‹
;

43 
__u16
 
	m¥odu˘
;

44 
__u16
 
	mvîsi⁄
;

66 
	söput_absöfo
 {

67 
__s32
 
	mvÆue
;

68 
__s32
 
	mmöimum
;

69 
__s32
 
	mmaximum
;

70 
__s32
 
	mfuzz
;

71 
__s32
 
	mÊ©
;

72 
__s32
 
	mªsﬁuti⁄
;

90 
	söput_keym≠_íåy
 {

91 
	#INPUT_KEYMAP_BY_INDEX
 (1 << 0)

	)

92 
__u8
 
	mÊags
;

93 
__u8
 
	mÀn
;

94 
__u16
 
	mödex
;

95 
__u32
 
	mkeycode
;

96 
__u8
 
	msˇncode
[32];

99 
	söput_mask
 {

100 
__u32
 
	mty≥
;

101 
__u32
 
	mcodes_size
;

102 
__u64
 
	mcodes_±r
;

105 
	#EVIOCGVERSION
 
	`_IOR
('E', 0x01, Ë

	)

106 
	#EVIOCGID
 
	`_IOR
('E', 0x02, 
öput_id
Ë

	)

107 
	#EVIOCGREP
 
	`_IOR
('E', 0x03, [2]Ë

	)

108 
	#EVIOCSREP
 
	`_IOW
('E', 0x03, [2]Ë

	)

110 
	#EVIOCGKEYCODE
 
	`_IOR
('E', 0x04, [2]Ë

	)

111 
	#EVIOCGKEYCODE_V2
 
	`_IOR
('E', 0x04, 
öput_keym≠_íåy
)

	)

112 
	#EVIOCSKEYCODE
 
	`_IOW
('E', 0x04, [2]Ë

	)

113 
	#EVIOCSKEYCODE_V2
 
	`_IOW
('E', 0x04, 
öput_keym≠_íåy
)

	)

115 
	#EVIOCGNAME
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x06,ÜíË

	)

116 
	#EVIOCGPHYS
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x07,ÜíË

	)

117 
	#EVIOCGUNIQ
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x08,ÜíË

	)

118 
	#EVIOCGPROP
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x09,ÜíË

	)

144 
	#EVIOCGMTSLOTS
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x0a,Üí)

	)

146 
	#EVIOCGKEY
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x18,ÜíË

	)

147 
	#EVIOCGLED
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x19,ÜíË

	)

148 
	#EVIOCGSND
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x1a,ÜíË

	)

149 
	#EVIOCGSW
(
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x1b,ÜíË

	)

151 
	#EVIOCGBIT
(
ev
,
Àn
Ë
	`_IOC
(
_IOC_READ
, 'E', 0x20 + (ev),ÜíË

	)

152 
	#EVIOCGABS
(
abs
Ë
	`_IOR
('E', 0x40 + (abs), 
öput_absöfo
Ë

	)

153 
	#EVIOCSABS
(
abs
Ë
	`_IOW
('E', 0xc0 + (abs), 
öput_absöfo
Ë

	)

155 
	#EVIOCSFF
 
	`_IOW
('E', 0x80, 
ff_ef„˘
Ë

	)

156 
	#EVIOCRMFF
 
	`_IOW
('E', 0x81, Ë

	)

157 
	#EVIOCGEFFECTS
 
	`_IOR
('E', 0x84, Ë

	)

159 
	#EVIOCGRAB
 
	`_IOW
('E', 0x90, Ë

	)

160 
	#EVIOCREVOKE
 
	`_IOW
('E', 0x91, Ë

	)

191 
	#EVIOCGMASK
 
	`_IOR
('E', 0x92, 
öput_mask
Ë

	)

214 
	#EVIOCSMASK
 
	`_IOW
('E', 0x93, 
öput_mask
Ë

	)

216 
	#EVIOCSCLOCKID
 
	`_IOW
('E', 0xa0, Ë

	)

222 
	#ID_BUS
 0

	)

223 
	#ID_VENDOR
 1

	)

224 
	#ID_PRODUCT
 2

	)

225 
	#ID_VERSION
 3

	)

227 
	#BUS_PCI
 0x01

	)

228 
	#BUS_ISAPNP
 0x02

	)

229 
	#BUS_USB
 0x03

	)

230 
	#BUS_HIL
 0x04

	)

231 
	#BUS_BLUETOOTH
 0x05

	)

232 
	#BUS_VIRTUAL
 0x06

	)

234 
	#BUS_ISA
 0x10

	)

235 
	#BUS_I8042
 0x11

	)

236 
	#BUS_XTKBD
 0x12

	)

237 
	#BUS_RS232
 0x13

	)

238 
	#BUS_GAMEPORT
 0x14

	)

239 
	#BUS_PARPORT
 0x15

	)

240 
	#BUS_AMIGA
 0x16

	)

241 
	#BUS_ADB
 0x17

	)

242 
	#BUS_I2C
 0x18

	)

243 
	#BUS_HOST
 0x19

	)

244 
	#BUS_GSC
 0x1A

	)

245 
	#BUS_ATARI
 0x1B

	)

246 
	#BUS_SPI
 0x1C

	)

251 
	#MT_TOOL_FINGER
 0

	)

252 
	#MT_TOOL_PEN
 1

	)

253 
	#MT_TOOL_PALM
 2

	)

254 
	#MT_TOOL_MAX
 2

	)

259 
	#FF_STATUS_STOPPED
 0x00

	)

260 
	#FF_STATUS_PLAYING
 0x01

	)

261 
	#FF_STATUS_MAX
 0x01

	)

278 
	sff_ª∂ay
 {

279 
__u16
 
	mÀngth
;

280 
__u16
 
	mdñay
;

288 
	sff_åiggî
 {

289 
__u16
 
	mbuâ⁄
;

290 
__u16
 
	möãrvÆ
;

305 
	sff_ívñ›e
 {

306 
__u16
 
	m©èck_Àngth
;

307 
__u16
 
	m©èck_Àvñ
;

308 
__u16
 
	mÁde_Àngth
;

309 
__u16
 
	mÁde_Àvñ
;

317 
	sff_c⁄°™t_ef„˘
 {

318 
__s16
 
	mÀvñ
;

319 
ff_ívñ›e
 
	mívñ›e
;

328 
	sff_ømp_ef„˘
 {

329 
__s16
 
	m°¨t_Àvñ
;

330 
__s16
 
	míd_Àvñ
;

331 
ff_ívñ›e
 
	mívñ›e
;

344 
	sff_c⁄dôi⁄_ef„˘
 {

345 
__u16
 
	mright_ßtuøti⁄
;

346 
__u16
 
	mÀ·_ßtuøti⁄
;

348 
__s16
 
	mright_c€ff
;

349 
__s16
 
	mÀ·_c€ff
;

351 
__u16
 
	mdódb™d
;

352 
__s16
 
	m˚¡î
;

373 
	sff_≥riodic_ef„˘
 {

374 
__u16
 
	mwavef‹m
;

375 
__u16
 
	m≥riod
;

376 
__s16
 
	mmagnôude
;

377 
__s16
 
	moff£t
;

378 
__u16
 
	mpha£
;

380 
ff_ívñ›e
 
	mívñ›e
;

382 
__u32
 
	mcu°om_Àn
;

383 
__s16
 *
	mcu°om_d©a
;

394 
	sff_rumbÀ_ef„˘
 {

395 
__u16
 
	m°r⁄g_magnôude
;

396 
__u16
 
	mwók_magnôude
;

422 
	sff_ef„˘
 {

423 
__u16
 
	mty≥
;

424 
__s16
 
	mid
;

425 
__u16
 
	mdúe˘i⁄
;

426 
ff_åiggî
 
	måiggî
;

427 
ff_ª∂ay
 
	mª∂ay
;

430 
ff_c⁄°™t_ef„˘
 
	mc⁄°™t
;

431 
ff_ømp_ef„˘
 
	mømp
;

432 
ff_≥riodic_ef„˘
 
	m≥riodic
;

433 
ff_c⁄dôi⁄_ef„˘
 
	mc⁄dôi⁄
[2];

434 
ff_rumbÀ_ef„˘
 
	mrumbÀ
;

435 } 
	mu
;

442 
	#FF_RUMBLE
 0x50

	)

443 
	#FF_PERIODIC
 0x51

	)

444 
	#FF_CONSTANT
 0x52

	)

445 
	#FF_SPRING
 0x53

	)

446 
	#FF_FRICTION
 0x54

	)

447 
	#FF_DAMPER
 0x55

	)

448 
	#FF_INERTIA
 0x56

	)

449 
	#FF_RAMP
 0x57

	)

451 
	#FF_EFFECT_MIN
 
FF_RUMBLE


	)

452 
	#FF_EFFECT_MAX
 
FF_RAMP


	)

458 
	#FF_SQUARE
 0x58

	)

459 
	#FF_TRIANGLE
 0x59

	)

460 
	#FF_SINE
 0x5a

	)

461 
	#FF_SAW_UP
 0x5b

	)

462 
	#FF_SAW_DOWN
 0x5c

	)

463 
	#FF_CUSTOM
 0x5d

	)

465 
	#FF_WAVEFORM_MIN
 
FF_SQUARE


	)

466 
	#FF_WAVEFORM_MAX
 
FF_CUSTOM


	)

472 
	#FF_GAIN
 0x60

	)

473 
	#FF_AUTOCENTER
 0x61

	)

481 
	#FF_MAX_EFFECTS
 
FF_GAIN


	)

483 
	#FF_MAX
 0x7f

	)

484 
	#FF_CNT
 (
FF_MAX
+1)

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #ifde‡
__USE_MISC


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #ifde‡
__USE_MISC


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_MISC


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifde‡
__USE_XOPEN2K


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/sqlite3.h

33 #i‚de‡
_SQLITE3_H_


34 
	#_SQLITE3_H_


	)

35 
	~<°d¨g.h
>

40 #ifde‡
__˝lu•lus


48 #i‚de‡
SQLITE_EXTERN


49 
	#SQLITE_EXTERN
 

	)

51 #i‚de‡
SQLITE_API


52 
	#SQLITE_API


	)

54 #i‚de‡
SQLITE_CDECL


55 
	#SQLITE_CDECL


	)

57 #i‚de‡
SQLITE_STDCALL


58 
	#SQLITE_STDCALL


	)

74 
	#SQLITE_DEPRECATED


	)

75 
	#SQLITE_EXPERIMENTAL


	)

80 #ifde‡
SQLITE_VERSION


81 #unde‡
SQLITE_VERSION


83 #ifde‡
SQLITE_VERSION_NUMBER


84 #unde‡
SQLITE_VERSION_NUMBER


114 
	#SQLITE_VERSION
 "3.11.0"

	)

115 
	#SQLITE_VERSION_NUMBER
 3011000

	)

116 
	#SQLITE_SOURCE_ID
 "2016-02-15 17:29:24 3d862f207e3adc00f78066799ac5a8c282430a5f"

	)

148 
SQLITE_API
 
SQLITE_EXTERN
 c⁄° 
sqlôe3_vîsi⁄
[];

149 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_libvîsi⁄
();

150 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_sour˚id
();

151 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_libvîsi⁄_numbî
();

175 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


176 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
);

177 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_compûe›ti⁄_gë
(
N
);

216 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_thªadß„
();

232 
sqlôe3
 
	tsqlôe3
;

250 #ifde‡
SQLITE_INT64_TYPE


251 
SQLITE_INT64_TYPE
 
	tsqlôe_öt64
;

252 
	tSQLITE_INT64_TYPE
 
	tsqlôe_uöt64
;

253 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__BORLANDC__
)

254 
__öt64
 
	tsqlôe_öt64
;

255 
	t__öt64
 
	tsqlôe_uöt64
;

257 
	tsqlôe_öt64
;

258 
	tsqlôe_uöt64
;

260 
sqlôe_öt64
 
	tsqlôe3_öt64
;

261 
sqlôe_uöt64
 
	tsqlôe3_uöt64
;

267 #ifde‡
SQLITE_OMIT_FLOATING_POINT


268 
sqlôe3_öt64


	)

313 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_˛o£
(
sqlôe3
*);

314 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_˛o£_v2
(
sqlôe3
*);

321 (*
sqlôe3_ˇŒback
)(*,,**, **);

385 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_exec
(

386 
sqlôe3
*,

387 c⁄° *
sql
,

388 (*
ˇŒback
)(*,,**,**),

390 **
îrmsg


404 
	#SQLITE_OK
 0

	)

406 
	#SQLITE_ERROR
 1

	)

407 
	#SQLITE_INTERNAL
 2

	)

408 
	#SQLITE_PERM
 3

	)

409 
	#SQLITE_ABORT
 4

	)

410 
	#SQLITE_BUSY
 5

	)

411 
	#SQLITE_LOCKED
 6

	)

412 
	#SQLITE_NOMEM
 7

	)

413 
	#SQLITE_READONLY
 8

	)

414 
	#SQLITE_INTERRUPT
 9

	)

415 
	#SQLITE_IOERR
 10

	)

416 
	#SQLITE_CORRUPT
 11

	)

417 
	#SQLITE_NOTFOUND
 12

	)

418 
	#SQLITE_FULL
 13

	)

419 
	#SQLITE_CANTOPEN
 14

	)

420 
	#SQLITE_PROTOCOL
 15

	)

421 
	#SQLITE_EMPTY
 16

	)

422 
	#SQLITE_SCHEMA
 17

	)

423 
	#SQLITE_TOOBIG
 18

	)

424 
	#SQLITE_CONSTRAINT
 19

	)

425 
	#SQLITE_MISMATCH
 20

	)

426 
	#SQLITE_MISUSE
 21

	)

427 
	#SQLITE_NOLFS
 22

	)

428 
	#SQLITE_AUTH
 23

	)

429 
	#SQLITE_FORMAT
 24

	)

430 
	#SQLITE_RANGE
 25

	)

431 
	#SQLITE_NOTADB
 26

	)

432 
	#SQLITE_NOTICE
 27

	)

433 
	#SQLITE_WARNING
 28

	)

434 
	#SQLITE_ROW
 100

	)

435 
	#SQLITE_DONE
 101

	)

454 
	#SQLITE_IOERR_READ
 (
SQLITE_IOERR
 | (1<<8))

	)

455 
	#SQLITE_IOERR_SHORT_READ
 (
SQLITE_IOERR
 | (2<<8))

	)

456 
	#SQLITE_IOERR_WRITE
 (
SQLITE_IOERR
 | (3<<8))

	)

457 
	#SQLITE_IOERR_FSYNC
 (
SQLITE_IOERR
 | (4<<8))

	)

458 
	#SQLITE_IOERR_DIR_FSYNC
 (
SQLITE_IOERR
 | (5<<8))

	)

459 
	#SQLITE_IOERR_TRUNCATE
 (
SQLITE_IOERR
 | (6<<8))

	)

460 
	#SQLITE_IOERR_FSTAT
 (
SQLITE_IOERR
 | (7<<8))

	)

461 
	#SQLITE_IOERR_UNLOCK
 (
SQLITE_IOERR
 | (8<<8))

	)

462 
	#SQLITE_IOERR_RDLOCK
 (
SQLITE_IOERR
 | (9<<8))

	)

463 
	#SQLITE_IOERR_DELETE
 (
SQLITE_IOERR
 | (10<<8))

	)

464 
	#SQLITE_IOERR_BLOCKED
 (
SQLITE_IOERR
 | (11<<8))

	)

465 
	#SQLITE_IOERR_NOMEM
 (
SQLITE_IOERR
 | (12<<8))

	)

466 
	#SQLITE_IOERR_ACCESS
 (
SQLITE_IOERR
 | (13<<8))

	)

467 
	#SQLITE_IOERR_CHECKRESERVEDLOCK
 (
SQLITE_IOERR
 | (14<<8))

	)

468 
	#SQLITE_IOERR_LOCK
 (
SQLITE_IOERR
 | (15<<8))

	)

469 
	#SQLITE_IOERR_CLOSE
 (
SQLITE_IOERR
 | (16<<8))

	)

470 
	#SQLITE_IOERR_DIR_CLOSE
 (
SQLITE_IOERR
 | (17<<8))

	)

471 
	#SQLITE_IOERR_SHMOPEN
 (
SQLITE_IOERR
 | (18<<8))

	)

472 
	#SQLITE_IOERR_SHMSIZE
 (
SQLITE_IOERR
 | (19<<8))

	)

473 
	#SQLITE_IOERR_SHMLOCK
 (
SQLITE_IOERR
 | (20<<8))

	)

474 
	#SQLITE_IOERR_SHMMAP
 (
SQLITE_IOERR
 | (21<<8))

	)

475 
	#SQLITE_IOERR_SEEK
 (
SQLITE_IOERR
 | (22<<8))

	)

476 
	#SQLITE_IOERR_DELETE_NOENT
 (
SQLITE_IOERR
 | (23<<8))

	)

477 
	#SQLITE_IOERR_MMAP
 (
SQLITE_IOERR
 | (24<<8))

	)

478 
	#SQLITE_IOERR_GETTEMPPATH
 (
SQLITE_IOERR
 | (25<<8))

	)

479 
	#SQLITE_IOERR_CONVPATH
 (
SQLITE_IOERR
 | (26<<8))

	)

480 
	#SQLITE_IOERR_VNODE
 (
SQLITE_IOERR
 | (27<<8))

	)

481 
	#SQLITE_IOERR_AUTH
 (
SQLITE_IOERR
 | (28<<8))

	)

482 
	#SQLITE_LOCKED_SHAREDCACHE
 (
SQLITE_LOCKED
 | (1<<8))

	)

483 
	#SQLITE_BUSY_RECOVERY
 (
SQLITE_BUSY
 | (1<<8))

	)

484 
	#SQLITE_BUSY_SNAPSHOT
 (
SQLITE_BUSY
 | (2<<8))

	)

485 
	#SQLITE_CANTOPEN_NOTEMPDIR
 (
SQLITE_CANTOPEN
 | (1<<8))

	)

486 
	#SQLITE_CANTOPEN_ISDIR
 (
SQLITE_CANTOPEN
 | (2<<8))

	)

487 
	#SQLITE_CANTOPEN_FULLPATH
 (
SQLITE_CANTOPEN
 | (3<<8))

	)

488 
	#SQLITE_CANTOPEN_CONVPATH
 (
SQLITE_CANTOPEN
 | (4<<8))

	)

489 
	#SQLITE_CORRUPT_VTAB
 (
SQLITE_CORRUPT
 | (1<<8))

	)

490 
	#SQLITE_READONLY_RECOVERY
 (
SQLITE_READONLY
 | (1<<8))

	)

491 
	#SQLITE_READONLY_CANTLOCK
 (
SQLITE_READONLY
 | (2<<8))

	)

492 
	#SQLITE_READONLY_ROLLBACK
 (
SQLITE_READONLY
 | (3<<8))

	)

493 
	#SQLITE_READONLY_DBMOVED
 (
SQLITE_READONLY
 | (4<<8))

	)

494 
	#SQLITE_ABORT_ROLLBACK
 (
SQLITE_ABORT
 | (2<<8))

	)

495 
	#SQLITE_CONSTRAINT_CHECK
 (
SQLITE_CONSTRAINT
 | (1<<8))

	)

496 
	#SQLITE_CONSTRAINT_COMMITHOOK
 (
SQLITE_CONSTRAINT
 | (2<<8))

	)

497 
	#SQLITE_CONSTRAINT_FOREIGNKEY
 (
SQLITE_CONSTRAINT
 | (3<<8))

	)

498 
	#SQLITE_CONSTRAINT_FUNCTION
 (
SQLITE_CONSTRAINT
 | (4<<8))

	)

499 
	#SQLITE_CONSTRAINT_NOTNULL
 (
SQLITE_CONSTRAINT
 | (5<<8))

	)

500 
	#SQLITE_CONSTRAINT_PRIMARYKEY
 (
SQLITE_CONSTRAINT
 | (6<<8))

	)

501 
	#SQLITE_CONSTRAINT_TRIGGER
 (
SQLITE_CONSTRAINT
 | (7<<8))

	)

502 
	#SQLITE_CONSTRAINT_UNIQUE
 (
SQLITE_CONSTRAINT
 | (8<<8))

	)

503 
	#SQLITE_CONSTRAINT_VTAB
 (
SQLITE_CONSTRAINT
 | (9<<8))

	)

504 
	#SQLITE_CONSTRAINT_ROWID
 (
SQLITE_CONSTRAINT
 |(10<<8))

	)

505 
	#SQLITE_NOTICE_RECOVER_WAL
 (
SQLITE_NOTICE
 | (1<<8))

	)

506 
	#SQLITE_NOTICE_RECOVER_ROLLBACK
 (
SQLITE_NOTICE
 | (2<<8))

	)

507 
	#SQLITE_WARNING_AUTOINDEX
 (
SQLITE_WARNING
 | (1<<8))

	)

508 
	#SQLITE_AUTH_USER
 (
SQLITE_AUTH
 | (1<<8))

	)

517 
	#SQLITE_OPEN_READONLY
 0x00000001

	)

518 
	#SQLITE_OPEN_READWRITE
 0x00000002

	)

519 
	#SQLITE_OPEN_CREATE
 0x00000004

	)

520 
	#SQLITE_OPEN_DELETEONCLOSE
 0x00000008

	)

521 
	#SQLITE_OPEN_EXCLUSIVE
 0x00000010

	)

522 
	#SQLITE_OPEN_AUTOPROXY
 0x00000020

	)

523 
	#SQLITE_OPEN_URI
 0x00000040

	)

524 
	#SQLITE_OPEN_MEMORY
 0x00000080

	)

525 
	#SQLITE_OPEN_MAIN_DB
 0x00000100

	)

526 
	#SQLITE_OPEN_TEMP_DB
 0x00000200

	)

527 
	#SQLITE_OPEN_TRANSIENT_DB
 0x00000400

	)

528 
	#SQLITE_OPEN_MAIN_JOURNAL
 0x00000800

	)

529 
	#SQLITE_OPEN_TEMP_JOURNAL
 0x00001000

	)

530 
	#SQLITE_OPEN_SUBJOURNAL
 0x00002000

	)

531 
	#SQLITE_OPEN_MASTER_JOURNAL
 0x00004000

	)

532 
	#SQLITE_OPEN_NOMUTEX
 0x00008000

	)

533 
	#SQLITE_OPEN_FULLMUTEX
 0x00010000

	)

534 
	#SQLITE_OPEN_SHAREDCACHE
 0x00020000

	)

535 
	#SQLITE_OPEN_PRIVATECACHE
 0x00040000

	)

536 
	#SQLITE_OPEN_WAL
 0x00080000

	)

568 
	#SQLITE_IOCAP_ATOMIC
 0x00000001

	)

569 
	#SQLITE_IOCAP_ATOMIC512
 0x00000002

	)

570 
	#SQLITE_IOCAP_ATOMIC1K
 0x00000004

	)

571 
	#SQLITE_IOCAP_ATOMIC2K
 0x00000008

	)

572 
	#SQLITE_IOCAP_ATOMIC4K
 0x00000010

	)

573 
	#SQLITE_IOCAP_ATOMIC8K
 0x00000020

	)

574 
	#SQLITE_IOCAP_ATOMIC16K
 0x00000040

	)

575 
	#SQLITE_IOCAP_ATOMIC32K
 0x00000080

	)

576 
	#SQLITE_IOCAP_ATOMIC64K
 0x00000100

	)

577 
	#SQLITE_IOCAP_SAFE_APPEND
 0x00000200

	)

578 
	#SQLITE_IOCAP_SEQUENTIAL
 0x00000400

	)

579 
	#SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 0x00000800

	)

580 
	#SQLITE_IOCAP_POWERSAFE_OVERWRITE
 0x00001000

	)

581 
	#SQLITE_IOCAP_IMMUTABLE
 0x00002000

	)

590 
	#SQLITE_LOCK_NONE
 0

	)

591 
	#SQLITE_LOCK_SHARED
 1

	)

592 
	#SQLITE_LOCK_RESERVED
 2

	)

593 
	#SQLITE_LOCK_PENDING
 3

	)

594 
	#SQLITE_LOCK_EXCLUSIVE
 4

	)

622 
	#SQLITE_SYNC_NORMAL
 0x00002

	)

623 
	#SQLITE_SYNC_FULL
 0x00003

	)

624 
	#SQLITE_SYNC_DATAONLY
 0x00010

	)

637 
sqlôe3_fûe
 
	tsqlôe3_fûe
;

638 
	ssqlôe3_fûe
 {

639 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

732 
sqlôe3_io_mëhods
 
	tsqlôe3_io_mëhods
;

733 
	ssqlôe3_io_mëhods
 {

734 
iVîsi⁄
;

735 (*
xClo£
)(
sqlôe3_fûe
*);

736 (*
xRód
)(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

737 (*
xWrôe
)(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

738 (*
xTrunˇã
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

739 (*
xSync
)(
sqlôe3_fûe
*, 
Êags
);

740 (*
xFûeSize
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

741 (*
xLock
)(
sqlôe3_fûe
*, );

742 (*
xU∆ock
)(
sqlôe3_fûe
*, );

743 (*
xCheckRe£rvedLock
)(
sqlôe3_fûe
*, *
pResOut
);

744 (*
xFûeC⁄åﬁ
)(
sqlôe3_fûe
*, 
›
, *
pArg
);

745 (*
xSe˘‹Size
)(
sqlôe3_fûe
*);

746 (*
xDevi˚Ch¨a˘îi°ics
)(
sqlôe3_fûe
*);

748 (*
xShmM≠
)(
sqlôe3_fûe
*, 
iPg
, 
pgsz
, , volatile**);

749 (*
xShmLock
)(
sqlôe3_fûe
*, 
off£t
, 
n
, 
Êags
);

750 (*
xShmB¨rõr
)(
sqlôe3_fûe
*);

751 (*
xShmUnm≠
)(
sqlôe3_fûe
*, 
dñëeFœg
);

753 (*
xFëch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, 
iAmt
, **
µ
);

754 (*
xUn„tch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, *
p
);

992 
	#SQLITE_FCNTL_LOCKSTATE
 1

	)

993 
	#SQLITE_FCNTL_GET_LOCKPROXYFILE
 2

	)

994 
	#SQLITE_FCNTL_SET_LOCKPROXYFILE
 3

	)

995 
	#SQLITE_FCNTL_LAST_ERRNO
 4

	)

996 
	#SQLITE_FCNTL_SIZE_HINT
 5

	)

997 
	#SQLITE_FCNTL_CHUNK_SIZE
 6

	)

998 
	#SQLITE_FCNTL_FILE_POINTER
 7

	)

999 
	#SQLITE_FCNTL_SYNC_OMITTED
 8

	)

1000 
	#SQLITE_FCNTL_WIN32_AV_RETRY
 9

	)

1001 
	#SQLITE_FCNTL_PERSIST_WAL
 10

	)

1002 
	#SQLITE_FCNTL_OVERWRITE
 11

	)

1003 
	#SQLITE_FCNTL_VFSNAME
 12

	)

1004 
	#SQLITE_FCNTL_POWERSAFE_OVERWRITE
 13

	)

1005 
	#SQLITE_FCNTL_PRAGMA
 14

	)

1006 
	#SQLITE_FCNTL_BUSYHANDLER
 15

	)

1007 
	#SQLITE_FCNTL_TEMPFILENAME
 16

	)

1008 
	#SQLITE_FCNTL_MMAP_SIZE
 18

	)

1009 
	#SQLITE_FCNTL_TRACE
 19

	)

1010 
	#SQLITE_FCNTL_HAS_MOVED
 20

	)

1011 
	#SQLITE_FCNTL_SYNC
 21

	)

1012 
	#SQLITE_FCNTL_COMMIT_PHASETWO
 22

	)

1013 
	#SQLITE_FCNTL_WIN32_SET_HANDLE
 23

	)

1014 
	#SQLITE_FCNTL_WAL_BLOCK
 24

	)

1015 
	#SQLITE_FCNTL_ZIPVFS
 25

	)

1016 
	#SQLITE_FCNTL_RBU
 26

	)

1017 
	#SQLITE_FCNTL_VFS_POINTER
 27

	)

1018 
	#SQLITE_FCNTL_JOURNAL_POINTER
 28

	)

1021 
	#SQLITE_GET_LOCKPROXYFILE
 
SQLITE_FCNTL_GET_LOCKPROXYFILE


	)

1022 
	#SQLITE_SET_LOCKPROXYFILE
 
SQLITE_FCNTL_SET_LOCKPROXYFILE


	)

1023 
	#SQLITE_LAST_ERRNO
 
SQLITE_FCNTL_LAST_ERRNO


	)

1036 
sqlôe3_muãx
 
	tsqlôe3_muãx
;

1195 
sqlôe3_vfs
 
	tsqlôe3_vfs
;

1196 (*
sqlôe3_sysˇŒ_±r
)();

1197 
	ssqlôe3_vfs
 {

1198 
iVîsi⁄
;

1199 
szOsFûe
;

1200 
mxP©h«me
;

1201 
sqlôe3_vfs
 *
pNext
;

1202 c⁄° *
zName
;

1203 *
pAµD©a
;

1204 (*
xO≥n
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_fûe
*,

1205 
Êags
, *
pOutFœgs
);

1206 (*
xDñëe
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

1207 (*
xAc˚ss
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *
pResOut
);

1208 (*
xFuŒP©h«me
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
, *
zOut
);

1209 *(*
xDlO≥n
)(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

1210 (*
xDlEº‹
)(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

1211 (*(*
xDlSym
)(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

1212 (*
xDlClo£
)(
sqlôe3_vfs
*, *);

1213 (*
xR™dom√ss
)(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

1214 (*
xSÀï
)(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

1215 (*
xCuºítTime
)(
sqlôe3_vfs
*, *);

1216 (*
xGëLa°Eº‹
)(
sqlôe3_vfs
*, , *);

1221 (*
xCuºítTimeI¡64
)(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

1226 (*
xSëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_sysˇŒ_±r
);

1227 
sqlôe3_sysˇŒ_±r
 (*
xGëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1228 c⁄° *(*
xNextSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1256 
	#SQLITE_ACCESS_EXISTS
 0

	)

1257 
	#SQLITE_ACCESS_READWRITE
 1

	)

1258 
	#SQLITE_ACCESS_READ
 2

	)

1282 
	#SQLITE_SHM_UNLOCK
 1

	)

1283 
	#SQLITE_SHM_LOCK
 2

	)

1284 
	#SQLITE_SHM_SHARED
 4

	)

1285 
	#SQLITE_SHM_EXCLUSIVE
 8

	)

1295 
	#SQLITE_SHM_NLOCK
 8

	)

1373 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_öôülize
();

1374 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_shutdown
();

1375 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_os_öô
();

1376 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_os_íd
();

1409 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_c⁄fig
(, ...);

1428 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_db_c⁄fig
(
sqlôe3
*, 
›
, ...);

1493 
sqlôe3_mem_mëhods
 
	tsqlôe3_mem_mëhods
;

1494 
	ssqlôe3_mem_mëhods
 {

1495 *(*
xMÆloc
)();

1496 (*
xFªe
)(*);

1497 *(*
xRóŒoc
)(*,);

1498 (*
xSize
)(*);

1499 (*
xRoundup
)();

1500 (*
xInô
)(*);

1501 (*
xShutdown
)(*);

1502 *
pAµD©a
;

1825 
	#SQLITE_CONFIG_SINGLETHREAD
 1

	)

1826 
	#SQLITE_CONFIG_MULTITHREAD
 2

	)

1827 
	#SQLITE_CONFIG_SERIALIZED
 3

	)

1828 
	#SQLITE_CONFIG_MALLOC
 4

	)

1829 
	#SQLITE_CONFIG_GETMALLOC
 5

	)

1830 
	#SQLITE_CONFIG_SCRATCH
 6

	)

1831 
	#SQLITE_CONFIG_PAGECACHE
 7

	)

1832 
	#SQLITE_CONFIG_HEAP
 8

	)

1833 
	#SQLITE_CONFIG_MEMSTATUS
 9

	)

1834 
	#SQLITE_CONFIG_MUTEX
 10

	)

1835 
	#SQLITE_CONFIG_GETMUTEX
 11

	)

1837 
	#SQLITE_CONFIG_LOOKASIDE
 13

	)

1838 
	#SQLITE_CONFIG_PCACHE
 14

	)

1839 
	#SQLITE_CONFIG_GETPCACHE
 15

	)

1840 
	#SQLITE_CONFIG_LOG
 16

	)

1841 
	#SQLITE_CONFIG_URI
 17

	)

1842 
	#SQLITE_CONFIG_PCACHE2
 18

	)

1843 
	#SQLITE_CONFIG_GETPCACHE2
 19

	)

1844 
	#SQLITE_CONFIG_COVERING_INDEX_SCAN
 20

	)

1845 
	#SQLITE_CONFIG_SQLLOG
 21

	)

1846 
	#SQLITE_CONFIG_MMAP_SIZE
 22

	)

1847 
	#SQLITE_CONFIG_WIN32_HEAPSIZE
 23

	)

1848 
	#SQLITE_CONFIG_PCACHE_HDRSZ
 24

	)

1849 
	#SQLITE_CONFIG_PMASZ
 25

	)

1909 
	#SQLITE_DBCONFIG_LOOKASIDE
 1001

	)

1910 
	#SQLITE_DBCONFIG_ENABLE_FKEY
 1002

	)

1911 
	#SQLITE_DBCONFIG_ENABLE_TRIGGER
 1003

	)

1922 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
*, 
⁄off
);

1974 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_œ°_ö£π_rowid
(
sqlôe3
*);

2027 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ch™ges
(
sqlôe3
*);

2051 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_tŸÆ_ch™ges
(
sqlôe3
*);

2091 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_öãºu±
(
sqlôe3
*);

2126 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_com∂ëe
(c⁄° *
sql
);

2127 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_com∂ëe16
(c⁄° *
sql
);

2188 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_busy_h™dÀr
(
sqlôe3
*, (*)(*,), *);

2211 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_busy_timeout
(
sqlôe3
*, 
ms
);

2286 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_gë_èbÀ
(

2287 
sqlôe3
 *
db
,

2288 c⁄° *
zSql
,

2289 ***
∑zResu…
,

2290 *
≤Row
,

2291 *
≤Cﬁumn
,

2292 **
pzEºmsg


2294 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_‰ì_èbÀ
(**
ªsu…
);

2400 
SQLITE_API
 *
SQLITE_CDECL
 
sqlôe3_m¥ötf
(const *,...);

2401 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_vm¥ötf
(c⁄° *, 
va_li°
);

2402 
SQLITE_API
 *
SQLITE_CDECL
 
sqlôe3_¢¥ötf
(,*,const *, ...);

2403 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_v¢¥ötf
(,*,c⁄° *, 
va_li°
);

2493 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_mÆloc
();

2494 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_mÆloc64
(
sqlôe3_uöt64
);

2495 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_ªÆloc
(*, );

2496 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_ªÆloc64
(*, 
sqlôe3_uöt64
);

2497 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_‰ì
(*);

2498 
SQLITE_API
 
sqlôe3_uöt64
 
SQLITE_STDCALL
 
sqlôe3_msize
(*);

2523 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_mem‹y_u£d
();

2524 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_mem‹y_highw©î
(
ª£tFœg
);

2547 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_øndom√ss
(
N
, *
P
);

2630 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_£t_auth‹izî
(

2631 
sqlôe3
*,

2632 (*
xAuth
)(*,,const *,const *,const *,const *),

2633 *
pU£rD©a


2648 
	#SQLITE_DENY
 1

	)

2649 
	#SQLITE_IGNORE
 2

	)

2671 
	#SQLITE_CREATE_INDEX
 1

	)

2672 
	#SQLITE_CREATE_TABLE
 2

	)

2673 
	#SQLITE_CREATE_TEMP_INDEX
 3

	)

2674 
	#SQLITE_CREATE_TEMP_TABLE
 4

	)

2675 
	#SQLITE_CREATE_TEMP_TRIGGER
 5

	)

2676 
	#SQLITE_CREATE_TEMP_VIEW
 6

	)

2677 
	#SQLITE_CREATE_TRIGGER
 7

	)

2678 
	#SQLITE_CREATE_VIEW
 8

	)

2679 
	#SQLITE_DELETE
 9

	)

2680 
	#SQLITE_DROP_INDEX
 10

	)

2681 
	#SQLITE_DROP_TABLE
 11

	)

2682 
	#SQLITE_DROP_TEMP_INDEX
 12

	)

2683 
	#SQLITE_DROP_TEMP_TABLE
 13

	)

2684 
	#SQLITE_DROP_TEMP_TRIGGER
 14

	)

2685 
	#SQLITE_DROP_TEMP_VIEW
 15

	)

2686 
	#SQLITE_DROP_TRIGGER
 16

	)

2687 
	#SQLITE_DROP_VIEW
 17

	)

2688 
	#SQLITE_INSERT
 18

	)

2689 
	#SQLITE_PRAGMA
 19

	)

2690 
	#SQLITE_READ
 20

	)

2691 
	#SQLITE_SELECT
 21

	)

2692 
	#SQLITE_TRANSACTION
 22

	)

2693 
	#SQLITE_UPDATE
 23

	)

2694 
	#SQLITE_ATTACH
 24

	)

2695 
	#SQLITE_DETACH
 25

	)

2696 
	#SQLITE_ALTER_TABLE
 26

	)

2697 
	#SQLITE_REINDEX
 27

	)

2698 
	#SQLITE_ANALYZE
 28

	)

2699 
	#SQLITE_CREATE_VTABLE
 29

	)

2700 
	#SQLITE_DROP_VTABLE
 30

	)

2701 
	#SQLITE_FUNCTION
 31

	)

2702 
	#SQLITE_SAVEPOINT
 32

	)

2703 
	#SQLITE_COPY
 0

	)

2704 
	#SQLITE_RECURSIVE
 33

	)

2735 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_åa˚
(
sqlôe3
*, (*
xTø˚
)(*,const *), *);

2736 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 *
SQLITE_STDCALL
 
sqlôe3_¥ofûe
(
sqlôe3
*,

2737 (*
xProfûe
)(*,c⁄° *,
sqlôe3_uöt64
), *);

2771 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ogªss_h™dÀr
(
sqlôe3
*, , (*)(*), *);

3000 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_›í
(

3001 c⁄° *
fûíame
,

3002 
sqlôe3
 **
µDb


3004 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_›í16
(

3005 c⁄° *
fûíame
,

3006 
sqlôe3
 **
µDb


3008 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_›í_v2
(

3009 c⁄° *
fûíame
,

3010 
sqlôe3
 **
µDb
,

3011 
Êags
,

3012 c⁄° *
zVfs


3054 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
);

3055 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_uri_boﬁón
(c⁄° *
zFûe
, c⁄° *
zP¨am
, 
bDeÁu…
);

3056 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_uri_öt64
(const *, const *, sqlite3_int64);

3100 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_îrcode
(
sqlôe3
 *
db
);

3101 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
);

3102 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_îrmsg
(
sqlôe3
*);

3103 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_îrmsg16
(
sqlôe3
*);

3104 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_îr°r
();

3130 
sqlôe3_°mt
 
	tsqlôe3_°mt
;

3172 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_limô
(
sqlôe3
*, 
id
, 
√wVÆ
);

3230 
	#SQLITE_LIMIT_LENGTH
 0

	)

3231 
	#SQLITE_LIMIT_SQL_LENGTH
 1

	)

3232 
	#SQLITE_LIMIT_COLUMN
 2

	)

3233 
	#SQLITE_LIMIT_EXPR_DEPTH
 3

	)

3234 
	#SQLITE_LIMIT_COMPOUND_SELECT
 4

	)

3235 
	#SQLITE_LIMIT_VDBE_OP
 5

	)

3236 
	#SQLITE_LIMIT_FUNCTION_ARG
 6

	)

3237 
	#SQLITE_LIMIT_ATTACHED
 7

	)

3238 
	#SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 8

	)

3239 
	#SQLITE_LIMIT_VARIABLE_NUMBER
 9

	)

3240 
	#SQLITE_LIMIT_TRIGGER_DEPTH
 10

	)

3241 
	#SQLITE_LIMIT_WORKER_THREADS
 11

	)

3324 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e
(

3325 
sqlôe3
 *
db
,

3326 c⁄° *
zSql
,

3327 
nByã
,

3328 
sqlôe3_°mt
 **
µStmt
,

3329 c⁄° **
pzTaû


3331 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e_v2
(

3332 
sqlôe3
 *
db
,

3333 c⁄° *
zSql
,

3334 
nByã
,

3335 
sqlôe3_°mt
 **
µStmt
,

3336 c⁄° **
pzTaû


3338 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e16
(

3339 
sqlôe3
 *
db
,

3340 c⁄° *
zSql
,

3341 
nByã
,

3342 
sqlôe3_°mt
 **
µStmt
,

3343 c⁄° **
pzTaû


3345 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¥ï¨e16_v2
(

3346 
sqlôe3
 *
db
,

3347 c⁄° *
zSql
,

3348 
nByã
,

3349 
sqlôe3_°mt
 **
µStmt
,

3350 c⁄° **
pzTaû


3361 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
);

3393 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
);

3414 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_busy
(
sqlôe3_°mt
*);

3455 
Mem
 
	tsqlôe3_vÆue
;

3469 
sqlôe3_c⁄ãxt
 
	tsqlôe3_c⁄ãxt
;

3578 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_blob
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3579 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_blob64
(
sqlôe3_°mt
*, , c⁄° *, 
sqlôe3_uöt64
,

3581 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_doubÀ
(
sqlôe3_°mt
*, , );

3582 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_öt
(
sqlôe3_°mt
*, , );

3583 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_öt64
(
sqlôe3_°mt
*, , 
sqlôe3_öt64
);

3584 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_nuŒ
(
sqlôe3_°mt
*, );

3585 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_ãxt
(
sqlôe3_°mt
*,,const *,,(*)(*));

3586 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_ãxt16
(
sqlôe3_°mt
*, , const *, , (*)(*));

3587 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_ãxt64
(
sqlôe3_°mt
*, , c⁄° *, 
sqlôe3_uöt64
,

3588 (*)(*), 
ícodög
);

3589 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_vÆue
(
sqlôe3_°mt
*, , c⁄° 
sqlôe3_vÆue
*);

3590 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_zîoblob
(
sqlôe3_°mt
*, , 
n
);

3591 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_zîoblob64
(
sqlôe3_°mt
*, , 
sqlôe3_uöt64
);

3612 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
*);

3640 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
*, );

3657 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
*, c⁄° *
zName
);

3667 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
*);

3679 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3708 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
*, 
N
);

3709 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
*, 
N
);

3757 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
*,);

3758 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
*,);

3759 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
*,);

3760 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
*,);

3761 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
*,);

3762 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
*,);

3794 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
*,);

3795 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
*,);

3875 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°ï
(
sqlôe3_°mt
*);

3896 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3919 
	#SQLITE_INTEGER
 1

	)

3920 
	#SQLITE_FLOAT
 2

	)

3921 
	#SQLITE_BLOB
 4

	)

3922 
	#SQLITE_NULL
 5

	)

3923 #ifde‡
SQLITE_TEXT


3924 #unde‡
SQLITE_TEXT


3926 
	#SQLITE_TEXT
 3

	)

3928 
	#SQLITE3_TEXT
 3

	)

4086 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
*, 
iCﬁ
);

4087 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
*, 
iCﬁ
);

4088 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
*, 
iCﬁ
);

4089 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
*, 
iCﬁ
);

4090 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
*, 
iCﬁ
);

4091 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
*, 
iCﬁ
);

4092 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
*, 
iCﬁ
);

4093 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
*, 
iCﬁ
);

4094 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
*, 
iCﬁ
);

4095 
SQLITE_API
 
sqlôe3_vÆue
 *
SQLITE_STDCALL
 
sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
*, 
iCﬁ
);

4123 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
);

4150 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
);

4250 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_fun˘i⁄
(

4251 
sqlôe3
 *
db
,

4252 c⁄° *
zFun˘i⁄Name
,

4253 
nArg
,

4254 
eTextRï
,

4255 *
pAµ
,

4256 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4257 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4258 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4260 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_fun˘i⁄16
(

4261 
sqlôe3
 *
db
,

4262 c⁄° *
zFun˘i⁄Name
,

4263 
nArg
,

4264 
eTextRï
,

4265 *
pAµ
,

4266 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4267 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4268 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4270 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_fun˘i⁄_v2
(

4271 
sqlôe3
 *
db
,

4272 c⁄° *
zFun˘i⁄Name
,

4273 
nArg
,

4274 
eTextRï
,

4275 *
pAµ
,

4276 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4277 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4278 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

4279 (*
xDe°roy
)(*)

4288 
	#SQLITE_UTF8
 1

	)

4289 
	#SQLITE_UTF16LE
 2

	)

4290 
	#SQLITE_UTF16BE
 3

	)

4291 
	#SQLITE_UTF16
 4

	)

4292 
	#SQLITE_ANY
 5

	)

4293 
	#SQLITE_UTF16_ALIGNED
 8

	)

4303 
	#SQLITE_DETERMINISTIC
 0x800

	)

4315 #i‚de‡
SQLITE_OMIT_DEPRECATED


4316 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
*);

4317 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_expúed
(
sqlôe3_°mt
*);

4318 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
*, sqlite3_stmt*);

4319 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_globÆ_ªcovî
();

4320 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_thªad_˛ónup
();

4321 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_mem‹y_Æ¨m
((*)(*,
sqlôe3_öt64
,),

4322 *,
sqlôe3_öt64
);

4371 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_blob
(
sqlôe3_vÆue
*);

4372 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
*);

4373 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
*);

4374 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
*);

4375 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_öt
(
sqlôe3_vÆue
*);

4376 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
*);

4377 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
*);

4378 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
*);

4379 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
*);

4380 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
*);

4381 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
*);

4382 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
*);

4398 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_subty≥
(
sqlôe3_vÆue
*);

4414 
SQLITE_API
 
sqlôe3_vÆue
 *
SQLITE_STDCALL
 
sqlôe3_vÆue_dup
(const sqlite3_value*);

4415 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vÆue_‰ì
(
sqlôe3_vÆue
*);

4460 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
*, 
nByãs
);

4475 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
*);

4487 
SQLITE_API
 
sqlôe3
 *
SQLITE_STDCALL
 
sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
*);

4540 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
);

4541 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_£t_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
, *, (*)(*));

4558 (*
sqlôe3_de°ru˘‹_ty≥
)(*);

4559 
	#SQLITE_STATIC
 ((
sqlôe3_de°ru˘‹_ty≥
)0)

	)

4560 
	#SQLITE_TRANSIENT
 ((
sqlôe3_de°ru˘‹_ty≥
)-1)

	)

4677 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_blob
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4678 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_blob64
(
sqlôe3_c⁄ãxt
*,const *,

4679 
sqlôe3_uöt64
,(*)(*));

4680 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
*, );

4681 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
*, const *, );

4682 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
*, const *, );

4683 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
*);

4684 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
*);

4685 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
*, );

4686 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
*, );

4687 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_öt64
);

4688 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
*);

4689 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4690 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt64
(
sqlôe3_c⁄ãxt
*, c⁄° *,
sqlôe3_uöt64
,

4691 (*)(*), 
ícodög
);

4692 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt16
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4693 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt16À
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4694 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_ãxt16be
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4695 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_vÆue
*);

4696 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
*, 
n
);

4697 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_zîoblob64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_uöt64
 
n
);

4712 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªsu…_subty≥
(
sqlôe3_c⁄ãxt
*,);

4794 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_cﬁœti⁄
(

4795 
sqlôe3
*,

4796 c⁄° *
zName
,

4797 
eTextRï
,

4798 *
pArg
,

4799 (*
xCom∑ª
)(*,,const *,,const *)

4801 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_cﬁœti⁄_v2
(

4802 
sqlôe3
*,

4803 c⁄° *
zName
,

4804 
eTextRï
,

4805 *
pArg
,

4806 (*
xCom∑ª
)(*,,const *,,const *),

4807 (*
xDe°roy
)(*)

4809 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_cﬁœti⁄16
(

4810 
sqlôe3
*,

4811 c⁄° *
zName
,

4812 
eTextRï
,

4813 *
pArg
,

4814 (*
xCom∑ª
)(*,,const *,,const *)

4844 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁœti⁄_√eded
(

4845 
sqlôe3
*,

4847 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4849 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_cﬁœti⁄_√eded16
(

4850 
sqlôe3
*,

4852 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4855 #ifde‡
SQLITE_HAS_CODEC


4863 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_key
(

4864 
sqlôe3
 *
db
,

4865 c⁄° *
pKey
, 
nKey


4867 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_key_v2
(

4868 
sqlôe3
 *
db
,

4869 c⁄° *
zDbName
,

4870 c⁄° *
pKey
, 
nKey


4881 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªkey
(

4882 
sqlôe3
 *
db
,

4883 c⁄° *
pKey
, 
nKey


4885 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªkey_v2
(

4886 
sqlôe3
 *
db
,

4887 c⁄° *
zDbName
,

4888 c⁄° *
pKey
, 
nKey


4895 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_a˘iv©e_£e
(

4896 c⁄° *
zPassPhø£


4900 #ifde‡
SQLITE_ENABLE_CEROD


4905 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_a˘iv©e_˚rod
(

4906 c⁄° *
zPassPhø£


4927 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¶ìp
();

4985 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_ãmp_dúe˘‹y
;

5022 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_d©a_dúe˘‹y
;

5046 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_gë_autocommô
(
sqlôe3
*);

5059 
SQLITE_API
 
sqlôe3
 *
SQLITE_STDCALL
 
sqlôe3_db_h™dÀ
(
sqlôe3_°mt
*);

5076 
SQLITE_API
 c⁄° *
SQLITE_STDCALL
 
sqlôe3_db_fûíame
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

5086 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_ªad⁄ly
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

5102 
SQLITE_API
 
sqlôe3_°mt
 *
SQLITE_STDCALL
 
sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, sqlôe3_°mà*
pStmt
);

5151 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_commô_hook
(
sqlôe3
*, (*)(*), *);

5152 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_rﬁlback_hook
(
sqlôe3
*, (*)(*), *);

5203 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_upd©e_hook
(

5204 
sqlôe3
*,

5205 (*)(*,,c⁄° *,c⁄° *,
sqlôe3_öt64
),

5243 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_íabÀ_sh¨ed_ˇche
();

5259 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ªÀa£_mem‹y
();

5273 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_ªÀa£_mem‹y
(
sqlôe3
*);

5325 
SQLITE_API
 
sqlôe3_öt64
 
SQLITE_STDCALL
 
sqlôe3_so·_hóp_limô64
(sqlôe3_öt64 
N
);

5336 
SQLITE_API
 
SQLITE_DEPRECATED
 
SQLITE_STDCALL
 
sqlôe3_so·_hóp_limô
(
N
);

5406 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_èbÀ_cﬁumn_mëad©a
(

5407 
sqlôe3
 *
db
,

5408 c⁄° *
zDbName
,

5409 c⁄° *
zTabÀName
,

5410 c⁄° *
zCﬁumnName
,

5411 c⁄° **
pzD©aTy≥
,

5412 c⁄° **
pzCﬁlSeq
,

5413 *
pNŸNuŒ
,

5414 *
pPrim¨yKey
,

5415 *
pAutoöc


5453 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_lﬂd_exãnsi⁄
(

5454 
sqlôe3
 *
db
,

5455 c⁄° *
zFûe
,

5456 c⁄° *
zProc
,

5457 **
pzEºMsg


5474 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
);

5512 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5524 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ˇn˚l_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5532 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ª£t_auto_exãnsi⁄
();

5546 
sqlôe3_vèb
 
	tsqlôe3_vèb
;

5547 
sqlôe3_ödex_öfo
 
	tsqlôe3_ödex_öfo
;

5548 
sqlôe3_vèb_curs‹
 
	tsqlôe3_vèb_curs‹
;

5549 
sqlôe3_moduÀ
 
	tsqlôe3_moduÀ
;

5567 
	ssqlôe3_moduÀ
 {

5568 
iVîsi⁄
;

5569 (*
xCª©e
)(
sqlôe3
*, *
pAux
,

5570 
¨gc
, c⁄° *c⁄°*
¨gv
,

5571 
sqlôe3_vèb
 **
µVTab
, **);

5572 (*
xC⁄√˘
)(
sqlôe3
*, *
pAux
,

5573 
¨gc
, c⁄° *c⁄°*
¨gv
,

5574 
sqlôe3_vèb
 **
µVTab
, **);

5575 (*
xBe°Index
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_ödex_öfo
*);

5576 (*
xDisc⁄√˘
)(
sqlôe3_vèb
 *
pVTab
);

5577 (*
xDe°roy
)(
sqlôe3_vèb
 *
pVTab
);

5578 (*
xO≥n
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
);

5579 (*
xClo£
)(
sqlôe3_vèb_curs‹
*);

5580 (*
xFûãr
)(
sqlôe3_vèb_curs‹
*, 
idxNum
, c⁄° *
idxSå
,

5581 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
);

5582 (*
xNext
)(
sqlôe3_vèb_curs‹
*);

5583 (*
xEof
)(
sqlôe3_vèb_curs‹
*);

5584 (*
xCﬁumn
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_c⁄ãxt
*, );

5585 (*
xRowid
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_öt64
 *
pRowid
);

5586 (*
xUpd©e
)(
sqlôe3_vèb
 *, , 
sqlôe3_vÆue
 **, 
sqlôe3_öt64
 *);

5587 (*
xBegö
)(
sqlôe3_vèb
 *
pVTab
);

5588 (*
xSync
)(
sqlôe3_vèb
 *
pVTab
);

5589 (*
xCommô
)(
sqlôe3_vèb
 *
pVTab
);

5590 (*
xRﬁlback
)(
sqlôe3_vèb
 *
pVTab
);

5591 (*
xFödFun˘i⁄
)(
sqlôe3_vèb
 *
pVèb
, 
nArg
, c⁄° *
zName
,

5592 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

5593 **
µArg
);

5594 (*
xRíame
)(
sqlôe3_vèb
 *
pVèb
, c⁄° *
zNew
);

5597 (*
xSavïoöt
)(
sqlôe3_vèb
 *
pVTab
, );

5598 (*
xRñó£
)(
sqlôe3_vèb
 *
pVTab
, );

5599 (*
xRﬁlbackTo
)(
sqlôe3_vèb
 *
pVTab
, );

5696 
	ssqlôe3_ödex_öfo
 {

5698 
nC⁄°øöt
;

5699 
	ssqlôe3_ödex_c⁄°øöt
 {

5700 
iCﬁumn
;

5701 
›
;

5702 
ußbÀ
;

5703 
iTîmOff£t
;

5704 } *
aC⁄°øöt
;

5705 
nOrdîBy
;

5706 
	ssqlôe3_ödex_‹dîby
 {

5707 
iCﬁumn
;

5708 
desc
;

5709 } *
aOrdîBy
;

5711 
	ssqlôe3_ödex_c⁄°øöt_ußge
 {

5712 
¨gvIndex
;

5713 
omô
;

5714 } *
aC⁄°øötUßge
;

5715 
idxNum
;

5716 *
idxSå
;

5717 
√edToFªeIdxSå
;

5718 
‹dîByC⁄sumed
;

5719 
e°im©edCo°
;

5721 
sqlôe3_öt64
 
e°im©edRows
;

5723 
idxFœgs
;

5725 
sqlôe3_uöt64
 
cﬁU£d
;

5731 
	#SQLITE_INDEX_SCAN_UNIQUE
 1

	)

5741 
	#SQLITE_INDEX_CONSTRAINT_EQ
 2

	)

5742 
	#SQLITE_INDEX_CONSTRAINT_GT
 4

	)

5743 
	#SQLITE_INDEX_CONSTRAINT_LE
 8

	)

5744 
	#SQLITE_INDEX_CONSTRAINT_LT
 16

	)

5745 
	#SQLITE_INDEX_CONSTRAINT_GE
 32

	)

5746 
	#SQLITE_INDEX_CONSTRAINT_MATCH
 64

	)

5747 
	#SQLITE_INDEX_CONSTRAINT_LIKE
 65

	)

5748 
	#SQLITE_INDEX_CONSTRAINT_GLOB
 66

	)

5749 
	#SQLITE_INDEX_CONSTRAINT_REGEXP
 67

	)

5777 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_moduÀ
(

5778 
sqlôe3
 *
db
,

5779 c⁄° *
zName
,

5780 c⁄° 
sqlôe3_moduÀ
 *
p
,

5781 *
pClõ¡D©a


5783 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_¸óã_moduÀ_v2
(

5784 
sqlôe3
 *
db
,

5785 c⁄° *
zName
,

5786 c⁄° 
sqlôe3_moduÀ
 *
p
,

5787 *
pClõ¡D©a
,

5788 (*
xDe°roy
)(*)

5809 
	ssqlôe3_vèb
 {

5810 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

5811 
nRef
;

5812 *
zEºMsg
;

5833 
	ssqlôe3_vèb_curs‹
 {

5834 
sqlôe3_vèb
 *
pVèb
;

5846 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_de˛¨e_vèb
(
sqlôe3
*, c⁄° *
zSQL
);

5865 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_ovîlﬂd_fun˘i⁄
(
sqlôe3
*, c⁄° *
zFuncName
, 
nArg
);

5889 
sqlôe3_blob
 
	tsqlôe3_blob
;

5964 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_›í
(

5965 
sqlôe3
*,

5966 c⁄° *
zDb
,

5967 c⁄° *
zTabÀ
,

5968 c⁄° *
zCﬁumn
,

5969 
sqlôe3_öt64
 
iRow
,

5970 
Êags
,

5971 
sqlôe3_blob
 **
µBlob


5997 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_ª›í
(
sqlôe3_blob
 *, 
sqlôe3_öt64
);

6020 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_˛o£
(
sqlôe3_blob
 *);

6036 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_byãs
(
sqlôe3_blob
 *);

6065 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_ªad
(
sqlôe3_blob
 *, *
Z
, 
N
, 
iOff£t
);

6107 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_blob_wrôe
(
sqlôe3_blob
 *, c⁄° *
z
, 
n
, 
iOff£t
);

6138 
SQLITE_API
 
sqlôe3_vfs
 *
SQLITE_STDCALL
 
sqlôe3_vfs_föd
(c⁄° *
zVfsName
);

6139 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
*, 
makeDÊt
);

6140 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
*);

6256 
SQLITE_API
 
sqlôe3_muãx
 *
SQLITE_STDCALL
 
sqlôe3_muãx_Æloc
();

6257 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_‰ì
(
sqlôe3_muãx
*);

6258 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_íãr
(
sqlôe3_muãx
*);

6259 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_åy
(
sqlôe3_muãx
*);

6260 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_Àave
(
sqlôe3_muãx
*);

6327 
sqlôe3_muãx_mëhods
 
	tsqlôe3_muãx_mëhods
;

6328 
	ssqlôe3_muãx_mëhods
 {

6329 (*
xMuãxInô
)();

6330 (*
xMuãxEnd
)();

6331 
sqlôe3_muãx
 *(*
xMuãxAŒoc
)();

6332 (*
xMuãxFªe
)(
sqlôe3_muãx
 *);

6333 (*
xMuãxE¡î
)(
sqlôe3_muãx
 *);

6334 (*
xMuãxTry
)(
sqlôe3_muãx
 *);

6335 (*
xMuãxLóve
)(
sqlôe3_muãx
 *);

6336 (*
xMuãxHñd
)(
sqlôe3_muãx
 *);

6337 (*
xMuãxNŸhñd
)(
sqlôe3_muãx
 *);

6369 #i‚de‡
NDEBUG


6370 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_hñd
(
sqlôe3_muãx
*);

6371 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
*);

6384 
	#SQLITE_MUTEX_FAST
 0

	)

6385 
	#SQLITE_MUTEX_RECURSIVE
 1

	)

6386 
	#SQLITE_MUTEX_STATIC_MASTER
 2

	)

6387 
	#SQLITE_MUTEX_STATIC_MEM
 3

	)

6388 
	#SQLITE_MUTEX_STATIC_MEM2
 4

	)

6389 
	#SQLITE_MUTEX_STATIC_OPEN
 4

	)

6390 
	#SQLITE_MUTEX_STATIC_PRNG
 5

	)

6391 
	#SQLITE_MUTEX_STATIC_LRU
 6

	)

6392 
	#SQLITE_MUTEX_STATIC_LRU2
 7

	)

6393 
	#SQLITE_MUTEX_STATIC_PMEM
 7

	)

6394 
	#SQLITE_MUTEX_STATIC_APP1
 8

	)

6395 
	#SQLITE_MUTEX_STATIC_APP2
 9

	)

6396 
	#SQLITE_MUTEX_STATIC_APP3
 10

	)

6397 
	#SQLITE_MUTEX_STATIC_VFS1
 11

	)

6398 
	#SQLITE_MUTEX_STATIC_VFS2
 12

	)

6399 
	#SQLITE_MUTEX_STATIC_VFS3
 13

	)

6411 
SQLITE_API
 
sqlôe3_muãx
 *
SQLITE_STDCALL
 
sqlôe3_db_muãx
(
sqlôe3
*);

6446 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
*, c⁄° *
zDbName
, 
›
, *);

6465 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_ã°_c⁄åﬁ
(
›
, ...);

6478 
	#SQLITE_TESTCTRL_FIRST
 5

	)

6479 
	#SQLITE_TESTCTRL_PRNG_SAVE
 5

	)

6480 
	#SQLITE_TESTCTRL_PRNG_RESTORE
 6

	)

6481 
	#SQLITE_TESTCTRL_PRNG_RESET
 7

	)

6482 
	#SQLITE_TESTCTRL_BITVEC_TEST
 8

	)

6483 
	#SQLITE_TESTCTRL_FAULT_INSTALL
 9

	)

6484 
	#SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 10

	)

6485 
	#SQLITE_TESTCTRL_PENDING_BYTE
 11

	)

6486 
	#SQLITE_TESTCTRL_ASSERT
 12

	)

6487 
	#SQLITE_TESTCTRL_ALWAYS
 13

	)

6488 
	#SQLITE_TESTCTRL_RESERVE
 14

	)

6489 
	#SQLITE_TESTCTRL_OPTIMIZATIONS
 15

	)

6490 
	#SQLITE_TESTCTRL_ISKEYWORD
 16

	)

6491 
	#SQLITE_TESTCTRL_SCRATCHMALLOC
 17

	)

6492 
	#SQLITE_TESTCTRL_LOCALTIME_FAULT
 18

	)

6493 
	#SQLITE_TESTCTRL_EXPLAIN_STMT
 19

	)

6494 
	#SQLITE_TESTCTRL_NEVER_CORRUPT
 20

	)

6495 
	#SQLITE_TESTCTRL_VDBE_COVERAGE
 21

	)

6496 
	#SQLITE_TESTCTRL_BYTEORDER
 22

	)

6497 
	#SQLITE_TESTCTRL_ISINIT
 23

	)

6498 
	#SQLITE_TESTCTRL_SORTER_MMAP
 24

	)

6499 
	#SQLITE_TESTCTRL_IMPOSTER
 25

	)

6500 
	#SQLITE_TESTCTRL_LAST
 25

	)

6528 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
);

6529 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°©us64
(

6530 
›
,

6531 
sqlôe3_öt64
 *
pCuºít
,

6532 
sqlôe3_öt64
 *
pHighw©î
,

6533 
ª£tFœg


6620 
	#SQLITE_STATUS_MEMORY_USED
 0

	)

6621 
	#SQLITE_STATUS_PAGECACHE_USED
 1

	)

6622 
	#SQLITE_STATUS_PAGECACHE_OVERFLOW
 2

	)

6623 
	#SQLITE_STATUS_SCRATCH_USED
 3

	)

6624 
	#SQLITE_STATUS_SCRATCH_OVERFLOW
 4

	)

6625 
	#SQLITE_STATUS_MALLOC_SIZE
 5

	)

6626 
	#SQLITE_STATUS_PARSER_STACK
 6

	)

6627 
	#SQLITE_STATUS_PAGECACHE_SIZE
 7

	)

6628 
	#SQLITE_STATUS_SCRATCH_SIZE
 8

	)

6629 
	#SQLITE_STATUS_MALLOC_COUNT
 9

	)

6654 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_°©us
(
sqlôe3
*, 
›
, *
pCur
, *
pHiwå
, 
ª£tFlg
);

6746 
	#SQLITE_DBSTATUS_LOOKASIDE_USED
 0

	)

6747 
	#SQLITE_DBSTATUS_CACHE_USED
 1

	)

6748 
	#SQLITE_DBSTATUS_SCHEMA_USED
 2

	)

6749 
	#SQLITE_DBSTATUS_STMT_USED
 3

	)

6750 
	#SQLITE_DBSTATUS_LOOKASIDE_HIT
 4

	)

6751 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 5

	)

6752 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 6

	)

6753 
	#SQLITE_DBSTATUS_CACHE_HIT
 7

	)

6754 
	#SQLITE_DBSTATUS_CACHE_MISS
 8

	)

6755 
	#SQLITE_DBSTATUS_CACHE_WRITE
 9

	)

6756 
	#SQLITE_DBSTATUS_DEFERRED_FKS
 10

	)

6757 
	#SQLITE_DBSTATUS_MAX
 10

	)

6784 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_°©us
(
sqlôe3_°mt
*, 
›
,
ª£tFlg
);

6823 
	#SQLITE_STMTSTATUS_FULLSCAN_STEP
 1

	)

6824 
	#SQLITE_STMTSTATUS_SORT
 2

	)

6825 
	#SQLITE_STMTSTATUS_AUTOINDEX
 3

	)

6826 
	#SQLITE_STMTSTATUS_VM_STEP
 4

	)

6839 
sqlôe3_pˇche
 
	tsqlôe3_pˇche
;

6851 
sqlôe3_pˇche_∑ge
 
	tsqlôe3_pˇche_∑ge
;

6852 
	ssqlôe3_pˇche_∑ge
 {

6853 *
pBuf
;

6854 *
pExåa
;

7016 
sqlôe3_pˇche_mëhods2
 
	tsqlôe3_pˇche_mëhods2
;

7017 
	ssqlôe3_pˇche_mëhods2
 {

7018 
iVîsi⁄
;

7019 *
pArg
;

7020 (*
xInô
)(*);

7021 (*
xShutdown
)(*);

7022 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
szExåa
, 
bPurgóbÀ
);

7023 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

7024 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

7025 
sqlôe3_pˇche_∑ge
 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

7026 (*
xU≈ö
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*, 
disˇrd
);

7027 (*
xRekey
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*,

7028 
ﬁdKey
, 
√wKey
);

7029 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

7030 (*
xDe°roy
)(
sqlôe3_pˇche
*);

7031 (*
xShrök
)(
sqlôe3_pˇche
*);

7039 
sqlôe3_pˇche_mëhods
 
	tsqlôe3_pˇche_mëhods
;

7040 
	ssqlôe3_pˇche_mëhods
 {

7041 *
pArg
;

7042 (*
xInô
)(*);

7043 (*
xShutdown
)(*);

7044 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
bPurgóbÀ
);

7045 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

7046 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

7047 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

7048 (*
xU≈ö
)(
sqlôe3_pˇche
*, *, 
disˇrd
);

7049 (*
xRekey
)(
sqlôe3_pˇche
*, *, 
ﬁdKey
, 
√wKey
);

7050 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

7051 (*
xDe°roy
)(
sqlôe3_pˇche
*);

7065 
sqlôe3_backup
 
	tsqlôe3_backup
;

7253 
SQLITE_API
 
sqlôe3_backup
 *
SQLITE_STDCALL
 
sqlôe3_backup_öô
(

7254 
sqlôe3
 *
pDe°
,

7255 c⁄° *
zDe°Name
,

7256 
sqlôe3
 *
pSour˚
,

7257 c⁄° *
zSour˚Name


7259 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
);

7260 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
);

7261 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
);

7262 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
);

7379 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_u∆ock_nŸify
(

7380 
sqlôe3
 *
pBlocked
,

7381 (*
xNŸify
)(**
≠Arg
, 
nArg
),

7382 *
pNŸifyArg


7394 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°ricmp
(const *, const *);

7395 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°∫icmp
(const *, const *, );

7412 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°rglob
(c⁄° *
zGlob
, c⁄° *
zSå
);

7435 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°æike
(c⁄° *
zGlob
, c⁄° *
zSå
, 
cEsc
);

7458 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...);

7494 
SQLITE_API
 *
SQLITE_STDCALL
 
sqlôe3_wÆ_hook
(

7495 
sqlôe3
*,

7496 (*)(*,
sqlôe3
*,const *,),

7529 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
N
);

7551 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
);

7645 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_wÆ_checkpoöt_v2
(

7646 
sqlôe3
 *
db
,

7647 c⁄° *
zDb
,

7648 
eMode
,

7649 *
≤Log
,

7650 *
≤Ck±


7662 
	#SQLITE_CHECKPOINT_PASSIVE
 0

	)

7663 
	#SQLITE_CHECKPOINT_FULL
 1

	)

7664 
	#SQLITE_CHECKPOINT_RESTART
 2

	)

7665 
	#SQLITE_CHECKPOINT_TRUNCATE
 3

	)

7681 
SQLITE_API
 
SQLITE_CDECL
 
sqlôe3_vèb_c⁄fig
(
sqlôe3
*, 
›
, ...);

7722 
	#SQLITE_VTAB_CONSTRAINT_SUPPORT
 1

	)

7734 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *);

7748 
	#SQLITE_ROLLBACK
 1

	)

7750 
	#SQLITE_FAIL
 3

	)

7752 
	#SQLITE_REPLACE
 5

	)

7801 
	#SQLITE_SCANSTAT_NLOOP
 0

	)

7802 
	#SQLITE_SCANSTAT_NVISIT
 1

	)

7803 
	#SQLITE_SCANSTAT_EST
 2

	)

7804 
	#SQLITE_SCANSTAT_NAME
 3

	)

7805 
	#SQLITE_SCANSTAT_EXPLAIN
 4

	)

7806 
	#SQLITE_SCANSTAT_SELECTID
 5

	)

7839 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_sˇn°©us
(

7840 
sqlôe3_°mt
 *
pStmt
,

7841 
idx
,

7842 
iSˇnSètusOp
,

7843 *
pOut


7855 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_°mt_sˇn°©us_ª£t
(
sqlôe3_°mt
*);

7887 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_db_ˇcheÊush
(
sqlôe3
*);

7915 
sqlôe3_¢≠shŸ
 
	tsqlôe3_¢≠shŸ
;

7937 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
SQLITE_STDCALL
 
sqlôe3_¢≠shŸ_gë
(

7938 
sqlôe3
 *
db
,

7939 c⁄° *
zSchema
,

7940 
sqlôe3_¢≠shŸ
 **
µS«pshŸ


7962 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
SQLITE_STDCALL
 
sqlôe3_¢≠shŸ_›í
(

7963 
sqlôe3
 *
db
,

7964 c⁄° *
zSchema
,

7965 
sqlôe3_¢≠shŸ
 *
pS«pshŸ


7979 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
SQLITE_STDCALL
 
sqlôe3_¢≠shŸ_‰ì
(
sqlôe3_¢≠shŸ
*);

7985 #ifde‡
SQLITE_OMIT_FLOATING_POINT


7989 #ifde‡
__˝lu•lus


8007 #i‚de‡
_SQLITE3RTREE_H_


8008 
	#_SQLITE3RTREE_H_


	)

8011 #ifde‡
__˝lu•lus


8015 
sqlôe3_πªe_geomëry
 
	tsqlôe3_πªe_geomëry
;

8016 
sqlôe3_πªe_quîy_öfo
 
	tsqlôe3_πªe_quîy_öfo
;

8021 #ifde‡
SQLITE_RTREE_INT_ONLY


8022 
sqlôe3_öt64
 
	tsqlôe3_πªe_dbl
;

8024 
	tsqlôe3_πªe_dbl
;

8033 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_πªe_geomëry_ˇŒback
(

8034 
sqlôe3
 *
db
,

8035 c⁄° *
zGeom
,

8036 (*
xGeom
)(
sqlôe3_πªe_geomëry
*, , 
sqlôe3_πªe_dbl
*,*),

8037 *
pC⁄ãxt


8045 
	ssqlôe3_πªe_geomëry
 {

8046 *
pC⁄ãxt
;

8047 
nP¨am
;

8048 
sqlôe3_πªe_dbl
 *
aP¨am
;

8049 *
pU£r
;

8050 (*
xDñU£r
)(*);

8059 
SQLITE_API
 
SQLITE_STDCALL
 
sqlôe3_πªe_quîy_ˇŒback
(

8060 
sqlôe3
 *
db
,

8061 c⁄° *
zQuîyFunc
,

8062 (*
xQuîyFunc
)(
sqlôe3_πªe_quîy_öfo
*),

8063 *
pC⁄ãxt
,

8064 (*
xDe°ru˘‹
)(*)

8077 
	ssqlôe3_πªe_quîy_öfo
 {

8078 *
pC⁄ãxt
;

8079 
nP¨am
;

8080 
sqlôe3_πªe_dbl
 *
aP¨am
;

8081 *
pU£r
;

8082 (*
xDñU£r
)(*);

8083 
sqlôe3_πªe_dbl
 *
aCo‹d
;

8084 *
™Queue
;

8085 
nCo‹d
;

8086 
iLevñ
;

8087 
mxLevñ
;

8088 
sqlôe3_öt64
 
iRowid
;

8089 
sqlôe3_πªe_dbl
 
rP¨ítSc‹e
;

8090 
eP¨ítWôhö
;

8091 
eWôhö
;

8092 
sqlôe3_πªe_dbl
 
rSc‹e
;

8094 
sqlôe3_vÆue
 **
≠SqlP¨am
;

8100 
	#NOT_WITHIN
 0

	)

8101 
	#PARTLY_WITHIN
 1

	)

8102 
	#FULLY_WITHIN
 2

	)

8105 #ifde‡
__˝lu•lus


8131 #i‚de‡
_FTS5_H


8132 
	#_FTS5_H


	)

8135 #ifde‡
__˝lu•lus


8146 
Fts5Exãnsi⁄Api
 
	tFts5Exãnsi⁄Api
;

8147 
Fts5C⁄ãxt
 
	tFts5C⁄ãxt
;

8148 
Fts5Phø£Iãr
 
	tFts5Phø£Iãr
;

8150 (*
·s5_exãnsi⁄_fun˘i⁄
)(

8151 c⁄° 
	tFts5Exãnsi⁄Api
 *
	tpApi
,

8152 
	tFts5C⁄ãxt
 *
	tpFts
,

8153 
	tsqlôe3_c⁄ãxt
 *
	tpCtx
,

8154 
	tnVÆ
,

8155 
	tsqlôe3_vÆue
 **
	t≠VÆ


8158 
	sFts5Phø£Iãr
 {

8159 c⁄° *
a
;

8160 c⁄° *
b
;

8376 
	sFts5Exãnsi⁄Api
 {

8377 
iVîsi⁄
;

8379 *(*
xU£rD©a
)(
Fts5C⁄ãxt
*);

8381 (*
xCﬁumnCou¡
)(
Fts5C⁄ãxt
*);

8382 (*
xRowCou¡
)(
Fts5C⁄ãxt
*, 
sqlôe3_öt64
 *
≤Row
);

8383 (*
xCﬁumnTŸÆSize
)(
Fts5C⁄ãxt
*, 
iCﬁ
, 
sqlôe3_öt64
 *
≤Tokí
);

8385 (*
xTokíize
)(
Fts5C⁄ãxt
*,

8386 c⁄° *
pText
, 
nText
,

8387 *
pCtx
,

8388 (*
xTokí
)(*, , const *, , , )

8391 (*
xPhø£Cou¡
)(
Fts5C⁄ãxt
*);

8392 (*
xPhø£Size
)(
Fts5C⁄ãxt
*, 
iPhø£
);

8394 (*
xIn°Cou¡
)(
Fts5C⁄ãxt
*, *
≤In°
);

8395 (*
xIn°
)(
Fts5C⁄ãxt
*, 
iIdx
, *
piPhø£
, *
piCﬁ
, *
piOff
);

8397 
sqlôe3_öt64
 (*
xRowid
)(
Fts5C⁄ãxt
*);

8398 (*
xCﬁumnText
)(
Fts5C⁄ãxt
*, 
iCﬁ
, c⁄° **
pz
, *
≤
);

8399 (*
xCﬁumnSize
)(
Fts5C⁄ãxt
*, 
iCﬁ
, *
≤Tokí
);

8401 (*
xQuîyPhø£
)(
Fts5C⁄ãxt
*, 
iPhø£
, *
pU£rD©a
,

8402 (*)(c⁄° 
Fts5Exãnsi⁄Api
*,
Fts5C⁄ãxt
*,*)

8404 (*
xSëAuxd©a
)(
Fts5C⁄ãxt
*, *
pAux
, (*
xDñëe
)(*));

8405 *(*
xGëAuxd©a
)(
Fts5C⁄ãxt
*, 
bCÀ¨
);

8407 (*
xPhø£Fú°
)(
Fts5C⁄ãxt
*, 
iPhø£
, 
Fts5Phø£Iãr
*, *, *);

8408 (*
xPhø£Next
)(
Fts5C⁄ãxt
*, 
Fts5Phø£Iãr
*, *
piCﬁ
, *
piOff
);

8410 (*
xPhø£Fú°Cﬁumn
)(
Fts5C⁄ãxt
*, 
iPhø£
, 
Fts5Phø£Iãr
*, *);

8411 (*
xPhø£NextCﬁumn
)(
Fts5C⁄ãxt
*, 
Fts5Phø£Iãr
*, *
piCﬁ
);

8610 
Fts5Tokíizî
 
	tFts5Tokíizî
;

8611 
·s5_tokíizî
 
	t·s5_tokíizî
;

8612 
	s·s5_tokíizî
 {

8613 (*
xCª©e
)(*, c⁄° **
azArg
, 
nArg
, 
Fts5Tokíizî
 **
µOut
);

8614 (*
xDñëe
)(
Fts5Tokíizî
*);

8615 (*
xTokíize
)(
Fts5Tokíizî
*,

8616 *
pCtx
,

8617 
Êags
,

8618 c⁄° *
pText
, 
nText
,

8619 (*
xTokí
)(

8620 *
pCtx
,

8621 
tÊags
,

8622 c⁄° *
pTokí
,

8623 
nTokí
,

8624 
iSèπ
,

8625 
iEnd


8631 
	#FTS5_TOKENIZE_QUERY
 0x0001

	)

8632 
	#FTS5_TOKENIZE_PREFIX
 0x0002

	)

8633 
	#FTS5_TOKENIZE_DOCUMENT
 0x0004

	)

8634 
	#FTS5_TOKENIZE_AUX
 0x0008

	)

8638 
	#FTS5_TOKEN_COLOCATED
 0x0001

	)

8647 
·s5_≠i
 
	t·s5_≠i
;

8648 
	s·s5_≠i
 {

8649 
iVîsi⁄
;

8652 (*
xCª©eTokíizî
)(

8653 
·s5_≠i
 *
pApi
,

8654 c⁄° *
zName
,

8655 *
pC⁄ãxt
,

8656 
·s5_tokíizî
 *
pTokíizî
,

8657 (*
xDe°roy
)(*)

8661 (*
xFödTokíizî
)(

8662 
·s5_≠i
 *
pApi
,

8663 c⁄° *
zName
,

8664 **
µC⁄ãxt
,

8665 
·s5_tokíizî
 *
pTokíizî


8669 (*
xCª©eFun˘i⁄
)(

8670 
·s5_≠i
 *
pApi
,

8671 c⁄° *
zName
,

8672 *
pC⁄ãxt
,

8673 
·s5_exãnsi⁄_fun˘i⁄
 
xFun˘i⁄
,

8674 (*
xDe°roy
)(*)

8682 #ifde‡
__˝lu•lus


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_MISC


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/msg.h

18 #i‚de‡
_SYS_MSG_H


19 
	#_SYS_MSG_H


	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/msq.h
>

33 
	#__√ed_time_t


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

41 #i‚de‡
__ssize_t_deföed


42 
__ssize_t
 
	tssize_t
;

43 
	#__ssize_t_deföed


	)

49 #ifde‡
__USE_GNU


51 
	smsgbuf


53 
__sysˇŒ_¶⁄g_t
 
	mmty≥
;

54 
	mmãxt
[1];

59 
__BEGIN_DECLS


62 
	$msg˘l
 (
__msqid
, 
__cmd
, 
msqid_ds
 *
__buf
Ë
__THROW
;

65 
	$msggë
 (
key_t
 
__key
, 
__msgÊg
Ë
__THROW
;

71 
ssize_t
 
	`msgrcv
 (
__msqid
, *
__msgp
, 
size_t
 
__msgsz
,

72 
__msgtyp
, 
__msgÊg
);

78 
	`msg¢d
 (
__msqid
, c⁄° *
__msgp
, 
size_t
 
__msgsz
,

79 
__msgÊg
);

81 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‡!
deföed
 
MAXHOSTNAMELEN
 && deföed 
HOST_NAME_MAX


54 
	#MAXHOSTNAMELEN
 
HOST_NAME_MAX


	)

56 #i‚de‡
NCARGS


57 #ifde‡
ARG_MAX


58 
	#NCARGS
 
ARG_MAX


	)

62 
	#NCARGS
 
INT_MAX


	)

68 #i‚de‡
NOGROUP


69 
	#NOGROUP
 65535

	)

71 #i‚de‡
NODEV


72 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

77 #i‚de‡
DEV_BSIZE


78 
	#DEV_BSIZE
 512

	)

83 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

84 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

85 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

86 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

89 #i‚de‡
howm™y


90 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

92 #ifde‡
__GNUC__


93 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

94 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

95 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

97 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

99 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

102 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

103 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<sys/uio.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

29 #ifde‡
__USE_GNU


31 
	~<bôs/sig£t.h
>

38 
	~<bôs/sockë.h
>

40 #ifde‡
__USE_MISC


43 
	sosockaddr


45 
	mß_Ámûy
;

46 
	mß_d©a
[14];

54 
	mSHUT_RD
 = 0,

55 
	#SHUT_RD
 
SHUT_RD


	)

56 
	mSHUT_WR
,

57 
	#SHUT_WR
 
SHUT_WR


	)

58 
	mSHUT_RDWR


59 
	#SHUT_RDWR
 
SHUT_RDWR


	)

68 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


69 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

70 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

74 
	#__SOCKADDR_ALLTYPES
 \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

89 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

90 uni⁄ { 
	m__SOCKADDR_ALLTYPES


91 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

92 #unde‡
__SOCKADDR_ONETYPE


93 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

94 uni⁄ { 
	m__SOCKADDR_ALLTYPES


95 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

96 #unde‡
__SOCKADDR_ONETYPE


99 #ifde‡
__USE_GNU


101 
	smmsghdr


103 
msghdr
 
	mmsg_hdr
;

104 
	mmsg_Àn
;

113 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

119 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

120 
__fds
[2]Ë
__THROW
;

123 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

124 
__THROW
;

127 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

128 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

141 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

142 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

149 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

156 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

163 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 
__addr_Àn
);

174 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

175 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

176 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

184 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

185 
__Êags
);

187 #ifde‡
__USE_GNU


193 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

194 
__vÀn
, 
__Êags
);

202 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

204 #ifde‡
__USE_GNU


210 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

211 
__vÀn
, 
__Êags
,

212 
time•ec
 *
__tmo
);

219 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

220 *
__ª°ri˘
 
__›tvÆ
,

221 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

226 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

227 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

233 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

243 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

244 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

246 #ifde‡
__USE_GNU


251 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

252 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

261 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

264 #ifde‡
__USE_XOPEN2K


266 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

270 #ifde‡
__USE_MISC


274 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

279 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


280 
	~<bôs/sockë2.h
>

283 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_ATFILE


30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

33 #ifde‡
__USE_ATFILE


34 
	#__√ed_time•ec


	)

36 
	~<time.h
>

39 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


42 #i‚de‡
__dev_t_deföed


43 
__dev_t
 
	tdev_t
;

44 
	#__dev_t_deföed


	)

47 #i‚de‡
__gid_t_deföed


48 
__gid_t
 
	tgid_t
;

49 
	#__gid_t_deföed


	)

52 #i‚de‡
__öo_t_deföed


53 #i‚de‡
__USE_FILE_OFFSET64


54 
__öo_t
 
	töo_t
;

56 
__öo64_t
 
	töo_t
;

58 
	#__öo_t_deföed


	)

61 #i‚de‡
__mode_t_deföed


62 
__mode_t
 
	tmode_t
;

63 
	#__mode_t_deföed


	)

66 #i‚de‡
__∆ök_t_deföed


67 
__∆ök_t
 
	t∆ök_t
;

68 
	#__∆ök_t_deföed


	)

71 #i‚de‡
__off_t_deföed


72 #i‚de‡
__USE_FILE_OFFSET64


73 
__off_t
 
	toff_t
;

75 
__off64_t
 
	toff_t
;

77 
	#__off_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

86 #ifde‡
__USE_UNIX98


87 #i‚de‡
__blk˙t_t_deföed


88 #i‚de‡
__USE_FILE_OFFSET64


89 
__blk˙t_t
 
	tblk˙t_t
;

91 
__blk˙t64_t
 
	tblk˙t_t
;

93 
	#__blk˙t_t_deföed


	)

96 #i‚de‡
__blksize_t_deföed


97 
__blksize_t
 
	tblksize_t
;

98 
	#__blksize_t_deföed


	)

102 
	g__BEGIN_DECLS


104 
	~<bôs/°©.h
>

106 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


107 
	#S_IFMT
 
__S_IFMT


	)

108 
	#S_IFDIR
 
__S_IFDIR


	)

109 
	#S_IFCHR
 
__S_IFCHR


	)

110 
	#S_IFBLK
 
__S_IFBLK


	)

111 
	#S_IFREG
 
__S_IFREG


	)

112 #ifde‡
__S_IFIFO


113 
	#S_IFIFO
 
__S_IFIFO


	)

115 #ifde‡
__S_IFLNK


116 
	#S_IFLNK
 
__S_IFLNK


	)

118 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

119 && 
deföed
 
	g__S_IFSOCK


120 
	#S_IFSOCK
 
__S_IFSOCK


	)

126 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

128 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

129 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

130 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

131 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

132 #ifde‡
__S_IFIFO


133 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

135 #ifde‡
__S_IFLNK


136 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

139 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


140 
	#S_ISLNK
(
mode
Ë0

	)

143 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

144 && 
deföed
 
	g__S_IFSOCK


145 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

146 #ñi‡
deföed
 
__USE_XOPEN2K


147 
	#S_ISSOCK
(
mode
Ë0

	)

154 #ifdef 
__USE_POSIX199309


155 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

156 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

157 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

163 
	#S_ISUID
 
__S_ISUID


	)

164 
	#S_ISGID
 
__S_ISGID


	)

166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
	#S_ISVTX
 
__S_ISVTX


	)

171 
	#S_IRUSR
 
__S_IREAD


	)

172 
	#S_IWUSR
 
__S_IWRITE


	)

173 
	#S_IXUSR
 
__S_IEXEC


	)

175 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

177 #ifde‡
__USE_MISC


178 
	#S_IREAD
 
S_IRUSR


	)

179 
	#S_IWRITE
 
S_IWUSR


	)

180 
	#S_IEXEC
 
S_IXUSR


	)

183 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

184 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

185 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

187 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

189 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

190 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

191 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

193 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

196 #ifdef 
__USE_MISC


198 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

199 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

200 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

202 
	#S_BLKSIZE
 512

	)

206 #i‚de‡
__USE_FILE_OFFSET64


208 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

209 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

213 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

215 #ifde‡
__REDIRECT_NTH


216 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

217 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

218 
	`__n⁄nuŒ
 ((1, 2));

219 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

220 
	`__n⁄nuŒ
 ((2));

222 
	#°©
 
°©64


	)

223 
	#f°©
 
f°©64


	)

226 #ifde‡
__USE_LARGEFILE64


227 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

228 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

229 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

232 #ifde‡
__USE_ATFILE


236 #i‚de‡
__USE_FILE_OFFSET64


237 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

238 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

239 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

243 
°©
 *
__ª°ri˘
 
__buf
,

244 
__Êag
),

245 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

247 
	#f°©©
 
f°©©64


	)

251 #ifde‡
__USE_LARGEFILE64


252 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

253 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

254 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

258 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


259 #i‚de‡
__USE_FILE_OFFSET64


262 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

263 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

265 #ifde‡
__REDIRECT_NTH


266 
	`__REDIRECT_NTH
 (
l°©
,

267 (c⁄° *
__ª°ri˘
 
__fûe
,

268 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 
	#l°©
 
l°©64


	)

274 #ifde‡
__USE_LARGEFILE64


275 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

276 
°©64
 *
__ª°ri˘
 
__buf
)

277 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

283 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

286 #ifde‡
__USE_MISC


290 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

295 #ifde‡
__USE_POSIX


296 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

299 #ifde‡
__USE_ATFILE


302 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

303 
__Êag
)

304 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

313 #ifdef 
__USE_GNU


316 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

320 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1));

323 #ifde‡
__USE_ATFILE


327 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

328 
__THROW
 
	`__n⁄nuŒ
 ((2));

334 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


335 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_ATFILE


342 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

343 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

349 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1));

352 #ifde‡
__USE_ATFILE


356 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 #ifde‡
__USE_ATFILE


363 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

364 c⁄° 
time•ec
 
__times
[2],

365 
__Êags
)

366 
__THROW
 
	`__n⁄nuŒ
 ((2));

369 #ifde‡
__USE_XOPEN2K8


371 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

389 #i‚de‡
_STAT_VER


390 
	#_STAT_VER
 0

	)

392 #i‚de‡
_MKNOD_VER


393 
	#_MKNOD_VER
 0

	)

397 #i‚de‡
__USE_FILE_OFFSET64


398 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

399 
__THROW
 
	`__n⁄nuŒ
 ((3));

400 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

401 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

402 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

403 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

404 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

405 
°©
 *
__°©_buf
, 
__Êag
)

406 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

408 #ifde‡
__REDIRECT_NTH


409 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

410 
°©
 *
__°©_buf
), 
__fx°©64
)

411 
	`__n⁄nuŒ
 ((3));

412 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__x°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__lx°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

419 c⁄° *
__fûíame
,

420 
°©
 *
__°©_buf
, 
__Êag
),

421 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

424 
	#__fx°©
 
__fx°©64


	)

425 
	#__x°©
 
__x°©64


	)

426 
	#__lx°©
 
__lx°©64


	)

430 #ifde‡
__USE_LARGEFILE64


431 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

432 
__THROW
 
	`__n⁄nuŒ
 ((3));

433 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

434 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

435 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

436 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

437 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

438 
°©64
 *
__°©_buf
, 
__Êag
)

439 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

441 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

442 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

444 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

445 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

446 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

448 #ifde‡
__USE_EXTERN_INLINES


451 
__exã∫_ölöe
 

452 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

454  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

455 
	}
}

457 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


458 
__exã∫_ölöe
 

459 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

461  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

462 
	}
}

465 
__exã∫_ölöe
 

466 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

468  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

469 
	}
}

471 #ifde‡
__USE_ATFILE


472 
__exã∫_ölöe
 

473 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

474 
__Êag
))

476  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

477 
	}
}

480 #ifde‡
__USE_MISC


481 
__exã∫_ölöe
 

482 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

484  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

485 
	}
}

488 #ifde‡
__USE_ATFILE


489 
__exã∫_ölöe
 

490 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

491 
__dev_t
 
__dev
))

493  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

494 
	}
}

497 #i‡
deföed
 
__USE_LARGEFILE64
 \

498 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

499 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

500 
__exã∫_ölöe
 

501 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

503  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

504 
	}
}

506 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


507 
__exã∫_ölöe
 

508 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

510  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

511 
	}
}

514 
__exã∫_ölöe
 

515 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

517  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

518 
	}
}

520 #ifde‡
__USE_ATFILE


521 
__exã∫_ölöe
 

522 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

523 
__Êag
))

525  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

526 
	}
}

533 
	g__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	#__√ed_timevÆ


	)

27 
	~<bôs/time.h
>

29 
	~<sys/£À˘.h
>

31 #i‚de‡
__su£c⁄ds_t_deföed


32 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

33 
	#__su£c⁄ds_t_deföed


	)

37 
	g__BEGIN_DECLS


39 #ifde‡
__USE_GNU


41 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

42 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

43 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

44 }

	)

45 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

46 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

47 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

48 }

	)

52 #ifde‡
__USE_MISC


55 
	stimez⁄e


57 
	mtz_möuãswe°
;

58 
	mtz_d°time
;

61 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

63 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

71 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__USE_MISC


77 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

78 c⁄° 
timez⁄e
 *
__tz
)

79 
__THROW
;

85 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

138 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

141 #ifde‡
__USE_MISC


143 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

144 
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

150 #ifde‡
__USE_GNU


154 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

155 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

159 #ifde‡
__USE_MISC


162 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

163 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

164 
	#timîcmp
(
a
, 
b
, 
CMP
) \

165 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

166 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

167 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

168 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

170 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

171 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

172 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

174 ++(
ªsu…
)->
tv_£c
; \

175 (
ªsu…
)->
tv_u£c
 -= 1000000; \

177 
	}
} 0)

	)

178 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

180 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

181 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

182 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

183 --(
ªsu…
)->
tv_£c
; \

184 (
ªsu…
)->
tv_u£c
 += 1000000; \

186 } 0)

	)

189 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_MISC


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_MISC


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_MISC


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_MISC


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dlfcn.h

19 #i‚de‡
_DLFCN_H


24 
	#RTLD_LAZY
 0x00001

	)

25 
	#RTLD_NOW
 0x00002

	)

26 
	#RTLD_BINDING_MASK
 0x3

	)

27 
	#RTLD_NOLOAD
 0x00004

	)

28 
	#RTLD_DEEPBIND
 0x00008

	)

33 
	#RTLD_GLOBAL
 0x00100

	)

38 
	#RTLD_LOCAL
 0

	)

41 
	#RTLD_NODELETE
 0x01000

	)

43 #ifde‡
__USE_GNU


54 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

55 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

57 
__BEGIN_DECLS


60 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


29 #i‡
deföed
 
_UAPI_LINUX_IN6_H
 || deföed 
_UAPI_IPV6_H


33 
	#__USE_KERNEL_IPV6_DEFS


	)

39 
	#IP_OPTIONS
 4

	)

40 
	#IP_HDRINCL
 3

	)

41 
	#IP_TOS
 1

	)

42 
	#IP_TTL
 2

	)

43 
	#IP_RECVOPTS
 6

	)

45 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

46 
	#IP_RETOPTS
 7

	)

47 
	#IP_MULTICAST_IF
 32

	)

48 
	#IP_MULTICAST_TTL
 33

	)

49 
	#IP_MULTICAST_LOOP
 34

	)

50 
	#IP_ADD_MEMBERSHIP
 35

	)

51 
	#IP_DROP_MEMBERSHIP
 36

	)

52 
	#IP_UNBLOCK_SOURCE
 37

	)

53 
	#IP_BLOCK_SOURCE
 38

	)

54 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

55 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

56 
	#IP_MSFILTER
 41

	)

57 #ifde‡
__USE_MISC


58 
	#MCAST_JOIN_GROUP
 42

	)

59 
	#MCAST_BLOCK_SOURCE
 43

	)

60 
	#MCAST_UNBLOCK_SOURCE
 44

	)

61 
	#MCAST_LEAVE_GROUP
 45

	)

62 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

63 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

64 
	#MCAST_MSFILTER
 48

	)

65 
	#IP_MULTICAST_ALL
 49

	)

66 
	#IP_UNICAST_IF
 50

	)

68 
	#MCAST_EXCLUDE
 0

	)

69 
	#MCAST_INCLUDE
 1

	)

72 
	#IP_ROUTER_ALERT
 5

	)

73 
	#IP_PKTINFO
 8

	)

74 
	#IP_PKTOPTIONS
 9

	)

75 
	#IP_PMTUDISC
 10

	)

76 
	#IP_MTU_DISCOVER
 10

	)

77 
	#IP_RECVERR
 11

	)

78 
	#IP_RECVTTL
 12

	)

79 
	#IP_RECVTOS
 13

	)

80 
	#IP_MTU
 14

	)

81 
	#IP_FREEBIND
 15

	)

82 
	#IP_IPSEC_POLICY
 16

	)

83 
	#IP_XFRM_POLICY
 17

	)

84 
	#IP_PASSSEC
 18

	)

85 
	#IP_TRANSPARENT
 19

	)

86 
	#IP_MULTICAST_ALL
 49

	)

89 
	#IP_ORIGDSTADDR
 20

	)

90 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

92 
	#IP_MINTTL
 21

	)

93 
	#IP_NODEFRAG
 22

	)

94 
	#IP_CHECKSUM
 23

	)

95 
	#IP_BIND_ADDRESS_NO_PORT
 24

	)

98 
	#IP_PMTUDISC_DONT
 0

	)

99 
	#IP_PMTUDISC_WANT
 1

	)

100 
	#IP_PMTUDISC_DO
 2

	)

101 
	#IP_PMTUDISC_PROBE
 3

	)

105 
	#IP_PMTUDISC_INTERFACE
 4

	)

107 
	#IP_PMTUDISC_OMIT
 5

	)

109 
	#IP_MULTICAST_IF
 32

	)

110 
	#IP_MULTICAST_TTL
 33

	)

111 
	#IP_MULTICAST_LOOP
 34

	)

112 
	#IP_ADD_MEMBERSHIP
 35

	)

113 
	#IP_DROP_MEMBERSHIP
 36

	)

114 
	#IP_UNBLOCK_SOURCE
 37

	)

115 
	#IP_BLOCK_SOURCE
 38

	)

116 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

117 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

118 
	#IP_MSFILTER
 41

	)

119 
	#IP_MULTICAST_ALL
 49

	)

120 
	#IP_UNICAST_IF
 50

	)

123 
	#SOL_IP
 0

	)

125 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

126 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

127 
	#IP_MAX_MEMBERSHIPS
 20

	)

129 #ifde‡
__USE_MISC


133 
	sù_›ts


135 
ö_addr
 
	mù_d°
;

136 
	mù_›ts
[40];

140 
	sù_mªqn


142 
ö_addr
 
	mimr_mu…üddr
;

143 
ö_addr
 
	mimr_addªss
;

144 
	mimr_ifödex
;

148 
	sö_pktöfo


150 
	mùi_ifödex
;

151 
ö_addr
 
	mùi_•ec_d°
;

152 
ö_addr
 
	mùi_addr
;

159 
	#IPV6_ADDRFORM
 1

	)

160 
	#IPV6_2292PKTINFO
 2

	)

161 
	#IPV6_2292HOPOPTS
 3

	)

162 
	#IPV6_2292DSTOPTS
 4

	)

163 
	#IPV6_2292RTHDR
 5

	)

164 
	#IPV6_2292PKTOPTIONS
 6

	)

165 
	#IPV6_CHECKSUM
 7

	)

166 
	#IPV6_2292HOPLIMIT
 8

	)

168 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

170 
	#IPV6_NEXTHOP
 9

	)

171 
	#IPV6_AUTHHDR
 10

	)

172 
	#IPV6_UNICAST_HOPS
 16

	)

173 
	#IPV6_MULTICAST_IF
 17

	)

174 
	#IPV6_MULTICAST_HOPS
 18

	)

175 
	#IPV6_MULTICAST_LOOP
 19

	)

176 
	#IPV6_JOIN_GROUP
 20

	)

177 
	#IPV6_LEAVE_GROUP
 21

	)

178 
	#IPV6_ROUTER_ALERT
 22

	)

179 
	#IPV6_MTU_DISCOVER
 23

	)

180 
	#IPV6_MTU
 24

	)

181 
	#IPV6_RECVERR
 25

	)

182 
	#IPV6_V6ONLY
 26

	)

183 
	#IPV6_JOIN_ANYCAST
 27

	)

184 
	#IPV6_LEAVE_ANYCAST
 28

	)

185 
	#IPV6_IPSEC_POLICY
 34

	)

186 
	#IPV6_XFRM_POLICY
 35

	)

189 
	#IPV6_RECVPKTINFO
 49

	)

190 
	#IPV6_PKTINFO
 50

	)

191 
	#IPV6_RECVHOPLIMIT
 51

	)

192 
	#IPV6_HOPLIMIT
 52

	)

193 
	#IPV6_RECVHOPOPTS
 53

	)

194 
	#IPV6_HOPOPTS
 54

	)

195 
	#IPV6_RTHDRDSTOPTS
 55

	)

196 
	#IPV6_RECVRTHDR
 56

	)

197 
	#IPV6_RTHDR
 57

	)

198 
	#IPV6_RECVDSTOPTS
 58

	)

199 
	#IPV6_DSTOPTS
 59

	)

200 
	#IPV6_RECVPATHMTU
 60

	)

201 
	#IPV6_PATHMTU
 61

	)

202 
	#IPV6_DONTFRAG
 62

	)

205 
	#IPV6_RECVTCLASS
 66

	)

206 
	#IPV6_TCLASS
 67

	)

209 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

210 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

211 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

212 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

215 
	#IPV6_PMTUDISC_DONT
 0

	)

216 
	#IPV6_PMTUDISC_WANT
 1

	)

217 
	#IPV6_PMTUDISC_DO
 2

	)

218 
	#IPV6_PMTUDISC_PROBE
 3

	)

219 
	#IPV6_PMTUDISC_INTERFACE
 4

	)

220 
	#IPV6_PMTUDISC_OMIT
 5

	)

223 
	#SOL_IPV6
 41

	)

224 
	#SOL_ICMPV6
 58

	)

227 
	#IPV6_RTHDR_LOOSE
 0

	)

228 
	#IPV6_RTHDR_STRICT
 1

	)

230 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 #ifde‡
__USE_ISOC99


26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 #ifde‡
__NO_LONG_DOUBLE_MATH


29 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

31 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

36 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


38 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

40 #ifde‡
__USE_ISOC99


41 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

42 #ifde‡
__MATH_DECLARE_LDOUBLE


43 #ifde‡
__NO_LONG_DOUBLE_MATH


44 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

46 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

52 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

53 #ifde‡
__USE_ISOC99


54 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

55 #ifde‡
__MATH_DECLARE_LDOUBLE


56 #ifde‡
__NO_LONG_DOUBLE_MATH


57 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

59 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

65 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

66 #ifde‡
__USE_ISOC99


67 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

68 #ifde‡
__MATH_DECLARE_LDOUBLE


69 #ifde‡
__NO_LONG_DOUBLE_MATH


70 
__REDIRECT_NTH
 (
©™2l
, (, ),

71 
__©™2_föôe
);

73 
__REDIRECT_NTH
 (
©™2l
, (, ),

74 
__©™2l_föôe
);

79 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


81 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

83 #ifde‡
__USE_ISOC99


84 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

85 #ifde‡
__MATH_DECLARE_LDOUBLE


86 #ifde‡
__NO_LONG_DOUBLE_MATH


87 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

89 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

95 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

96 #ifde‡
__USE_ISOC99


97 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

102 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

108 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

109 #ifde‡
__USE_ISOC99


110 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

111 #ifde‡
__MATH_DECLARE_LDOUBLE


112 #ifde‡
__NO_LONG_DOUBLE_MATH


113 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

115 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

120 #ifde‡
__USE_GNU


122 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

123 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

124 #ifde‡
__MATH_DECLARE_LDOUBLE


125 #ifde‡
__NO_LONG_DOUBLE_MATH


126 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

128 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

133 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

134 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

135 #ifde‡
__MATH_DECLARE_LDOUBLE


136 #ifde‡
__NO_LONG_DOUBLE_MATH


137 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

139 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

144 #ifde‡
__USE_ISOC99


146 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

147 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

148 #ifde‡
__MATH_DECLARE_LDOUBLE


149 #ifde‡
__NO_LONG_DOUBLE_MATH


150 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

152 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

158 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

159 #ifde‡
__USE_ISOC99


160 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

161 #ifde‡
__MATH_DECLARE_LDOUBLE


162 #ifde‡
__NO_LONG_DOUBLE_MATH


163 
__REDIRECT_NTH
 (
fmodl
, (, ),

164 
__fmod_föôe
);

166 
__REDIRECT_NTH
 (
fmodl
, (, ),

167 
__fmodl_föôe
);

172 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


174 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

176 #ifde‡
__USE_ISOC99


177 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

178 #ifde‡
__MATH_DECLARE_LDOUBLE


179 #ifde‡
__NO_LONG_DOUBLE_MATH


180 
__REDIRECT_NTH
 (
hypŸl
, (, ),

181 
__hypŸ_föôe
);

183 
__REDIRECT_NTH
 (
hypŸl
, (, ),

184 
__hypŸl_föôe
);

189 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


191 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

193 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


194 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 #ifde‡
__NO_LONG_DOUBLE_MATH


197 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

199 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

204 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


206 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

208 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


209 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

210 #ifde‡
__MATH_DECLARE_LDOUBLE


211 #ifde‡
__NO_LONG_DOUBLE_MATH


212 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

214 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


221 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

223 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


224 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

225 #ifde‡
__MATH_DECLARE_LDOUBLE


226 #ifde‡
__NO_LONG_DOUBLE_MATH


227 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

229 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

238 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


239 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

240 #ifde‡
__MATH_DECLARE_LDOUBLE


241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

244 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


251 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

253 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


254 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

255 #ifde‡
__MATH_DECLARE_LDOUBLE


256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

259 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

268 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


269 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

270 #ifde‡
__MATH_DECLARE_LDOUBLE


271 #ifde‡
__NO_LONG_DOUBLE_MATH


272 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

274 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

279 #ifde‡
__USE_MISC


281 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

282 #ifde‡
__USE_ISOC99


283 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 #ifde‡
__NO_LONG_DOUBLE_MATH


286 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

287 
__lgamma_r_föôe
);

289 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

290 
__lgammÆ_r_föôe
);

296 
__lgamma_r_föôe
 (, *);

297 
__lgammaf_r_föôe
 (, *);

298 #ifde‡
__NO_LONG_DOUBLE_MATH


299 
__REDIRECT_NTH
 (
__lgammÆ_r_föôe
, (, *),

300 
__lgamma_r_föôe
);

302 
__lgammÆ_r_föôe
 (, *);

305 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

306 && 
deföed
 
	g__exã∫_Æways_ölöe
)

308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

310 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


311  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

313 
__loˇl_signgam
 = 0;

314  
	`__lgamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

316 
	}
}

318 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


319 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

321 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


322  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

324 
__loˇl_signgam
 = 0;

325  
	`__lgammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

327 
	}
}

328 #ifde‡
__MATH_DECLARE_LDOUBLE


329 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


332  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

334 
__loˇl_signgam
 = 0;

335  
	`__lgammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

337 
	}
}

341 #i‡((
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)) \

342 && 
deföed
 
	g__exã∫_Æways_ölöe
)

344 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

346  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

347 
	}
}

348 #ifde‡
__USE_ISOC99


349 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

351  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

352 
	}
}

353 #ifde‡
__MATH_DECLARE_LDOUBLE


354 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

356  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

357 
	}
}

363 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

364 #ifde‡
__USE_ISOC99


365 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

366 #ifde‡
__MATH_DECLARE_LDOUBLE


367 #ifde‡
__NO_LONG_DOUBLE_MATH


368 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

370 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

376 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

377 #ifde‡
__USE_ISOC99


378 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

379 #ifde‡
__MATH_DECLARE_LDOUBLE


380 #ifde‡
__NO_LONG_DOUBLE_MATH


381 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

383 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

388 #ifde‡
__USE_ISOC99


390 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

391 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

396 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

402 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

403 #ifde‡
__USE_ISOC99


404 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

405 #ifde‡
__MATH_DECLARE_LDOUBLE


406 #ifde‡
__NO_LONG_DOUBLE_MATH


407 
__REDIRECT_NTH
 (
powl
, (, ),

408 
__pow_föôe
);

410 
__REDIRECT_NTH
 (
powl
, (, ),

411 
__powl_föôe
);

416 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


418 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

420 #ifde‡
__USE_ISOC99


421 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

422 #ifde‡
__MATH_DECLARE_LDOUBLE


423 #ifde‡
__NO_LONG_DOUBLE_MATH


424 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

425 
__ªmaödî_föôe
);

427 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

428 
__ªmaödîl_föôe
);

433 #i‡(
deföed
 
__USE_MISC
 \

434 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K8
))

436 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

438 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


439 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

440 #ifde‡
__MATH_DECLARE_LDOUBLE


441 #ifde‡
__NO_LONG_DOUBLE_MATH


442 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

443 
__sˇlb_föôe
);

445 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

446 
__sˇlbl_föôe
);

452 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

453 #ifde‡
__USE_ISOC99


454 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

455 #ifde‡
__MATH_DECLARE_LDOUBLE


456 #ifde‡
__NO_LONG_DOUBLE_MATH


457 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

459 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

465 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

466 #ifde‡
__USE_ISOC99


467 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

468 #ifde‡
__MATH_DECLARE_LDOUBLE


469 #ifde‡
__NO_LONG_DOUBLE_MATH


470 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

472 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

477 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


479 
__gamma_r_föôe
 (, *);

480 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

482 
__loˇl_signgam
 = 0;

483 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

484  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

485 
	}
}

486 
__gammaf_r_föôe
 (, *);

487 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

489 
__loˇl_signgam
 = 0;

490 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

491  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

492 
	}
}

493 #ifde‡
__MATH_DECLARE_LDOUBLE


494 
__gammÆ_r_föôe
 (, *);

495 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

497 
__loˇl_signgam
 = 0;

498 #ifde‡
__NO_LONG_DOUBLE_MATH


499 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

501 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

503  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

504 
	}
}

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL_VEC
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


199 #i‡(!
deföed
 
__˝lu•lus
 \

200 || 
	g__˝lu•lus
 < 201103L \

201 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

204 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

211 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

215 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

218 #ifde‡
__USE_ISOC99


219 
__BEGIN_NAMESPACE_C99


221 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

222 
	g__END_NAMESPACE_C99


225 #ifde‡
__USE_ISOC99


226 
__BEGIN_NAMESPACE_C99


228 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

229 
	g__END_NAMESPACE_C99


234 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

236 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

237 #i‡(!
deföed
 
__˝lu•lus
 \

238 || 
	g__˝lu•lus
 < 201103L \

239 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

241 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

245 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

247 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

248 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

249 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

250 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

256 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

260 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

261 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

262 
	g__END_NAMESPACE_C99


265 #ifde‡
__USE_ISOC99


266 
__BEGIN_NAMESPACE_C99


268 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

269 
	g__END_NAMESPACE_C99


272 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

274 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

277 #ifde‡
__USE_MISC


281 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

285 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


286 
__BEGIN_NAMESPACE_C99


289 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

292 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

293 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


294 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

298 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

309 #ifde‡
__USE_ISOC99


311 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

315 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

319 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

323 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

328 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

335 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

336 
__exãnsi⁄__


337 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

341 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

342 
__exãnsi⁄__


343 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

347 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

350 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

353 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

357 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

358 
__©åibuã__
 ((
__c⁄°__
));

361 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

362 
__©åibuã__
 ((
__c⁄°__
));

366 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

369 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


370 
	g__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


375 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

376 
__©åibuã__
 ((
__c⁄°__
));

379 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

380 && 
	g__MATH_DECLARING_DOUBLE
 \

381 && !
deföed
 
	g__USE_XOPEN2K8
)

383 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #ifde‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #ifde‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #ifde‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


390 #i‡!
deföed
 
__SSE2_MATH__
 && !deföed 
__x86_64__


391 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

392 && 
deföed
 
	g__OPTIMIZE__
)

396 #unde‡
m©h_îrh™dlög


405 #ifde‡
__USE_ISOC99


406 
	#__ölöe_m©h›
(
func
, 
›
) \

407 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

408 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

409 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›NP
(
func
, 
›
) \

411 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

412 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

415 
	#__ölöe_m©h›
(
func
, 
›
) \

416 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

417 
	#__ölöe_m©h›NP
(
func
, 
›
) \

418 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

421 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

422 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

423 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

424 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

427 #ifde‡
__USE_ISOC99


428 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

429 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

434 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

437 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

438 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

439 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

440 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

443 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

444 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

445 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

447 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

448 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

450 
Êﬂt_ty≥
 
__ªsu…
; \

451 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

452  
__ªsu…
; \

453 }

	)

456 #ifde‡
__USE_ISOC99


457 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

460 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

461 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

462 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

463 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

464 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

465 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

469 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

470 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

471 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

472 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

473 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

478 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

479 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

480 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

482 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

483 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

484 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

485 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

486 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

487 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

488 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

489 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

490 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

491 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

492 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

493 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

496 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

497 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

498 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

500 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

501 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

503 
code
; \

504 }

	)

507 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

508 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

509 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

511 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

512 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

514 
code
; \

515 }

	)

517 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

518 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

519 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

521 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

522 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

523 
Êﬂt_ty≥
 
¨g3
)) \

525 
code
; \

526 }

	)

530 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


534 #ifde‡
__FAST_MATH__


535 #ifde‡
__USE_GNU


536 
	#__söcos_code
 \

537 
__co§
; \

538 
__sör
; \

539 
__swtmp
; \

540 
__asm
 
__vﬁ©ûe__
 \

555 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

556 *
__söx
 = 
__sör
; \

557 *
__cosx
 = 
__co§


	)

559 
__MATH_INLINE
 

560 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

562 
__söcos_code
;

563 
	}
}

565 
__MATH_INLINE
 

566 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

568 
__söcos_code
;

569 
	}
}

571 
__MATH_INLINE
 

572 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

574 
__söcos_code
;

575 
	}
}

582 #i‡
__GNUC_PREREQ
 (3, 5)

583 
	#__expm1_code
 \

584 
__ãmp
; \

585 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

586  
__ãmp
 ? __ãm∞: 
__x


	)

588 
	#__expm1_code
 \

589 
__vÆue
; \

590 
__exp⁄ít
; \

591 
__ãmp
; \

592 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

602 
__asm
 
__vﬁ©ûe__
 \

604 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

605 
__ãmp
 -= 1.0; \

606 
__ãmp
 +
__vÆue
; \

607  
__ãmp
 ? __ãm∞: 
__x


	)

609 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

611 #i‡
	`__GNUC_PREREQ
 (3, 4)

612 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

614 
	#__exp_code
 \

615 
__vÆue
; \

616 
__exp⁄ít
; \

617 
__asm
 
__vﬁ©ûe__
 \

625 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

626 
__vÆue
 += 1.0; \

627 
__asm
 
__vﬁ©ûe__
 \

629 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

630  
__vÆue


	)

631 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

632 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

636 #i‡!
	`__GNUC_PREREQ
 (3, 5)

637 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

638 
__vÆue
; \

639 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

640 
__asm
 
__vﬁ©ûe__
 \

642 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

643  
__vÆue
)

648 #i‡
	`__GNUC_PREREQ
 (3, 4)

649 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

650  
	$__buûtö_©™2l
 (
__y
, 
__x
))

652 
	#__©™2_code
 \

653 
__vÆue
; \

654 
__asm
 
__vﬁ©ûe__
 \

656 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

657  
__vÆue


	)

658 #ifde‡
__FAST_MATH__


659 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

661 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

665 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

666 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

667 
__vÆue
; \

668 
__asm
 
__vﬁ©ûe__
 \

673 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

674  
__vÆue
)

678 #ifde‡
__FAST_MATH__


679 #i‡!
	`__GNUC_PREREQ
 (3,3)

680 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

681 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

682 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

684 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

688 #i‡
	`__GNUC_PREREQ
 (2, 8)

689 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

690 #ifde‡
__USE_ISOC99


691 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

692 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

694 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

696 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

697 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

700 #ifde‡
__FAST_MATH__


701 #i‡!
	`__GNUC_PREREQ
 (3, 4)

703 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

705 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

707 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 #i‡!
	`__GNUC_PREREQ
 (3, 5)

711 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

713 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

714 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

717 #i‡!
	`__GNUC_PREREQ
 (3, 4)

718 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

722 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

723 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

724 { 
__xld
: 
__x
 
	}
}; \

725 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

726 
	g__n
.
	g__xi
[1] = 0x80000000; \

727 
	g__n
.
	g__xi
[0] = 0; \

728  
	g__n
.
	g__xld
)

731 #ifde‡
__FAST_MATH__


733 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

734 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

735  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

737 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

738 
__ex
 = 
	`__ex∂
 (
__x
); \

739  0.5 * (
__ex
 + 1.0 / __ex))

741 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

742 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

743  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

746 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

747 
__vÆue
; \

748 
__ign‹e
; \

749 
__cw
; \

750 
__cwtmp
; \

751 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

759 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

760 "=m" (
__cw
) \

761 : "0" (
__x
)); \

762  
__vÆue
)

764 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

765 
__vÆue
; \

766 
__ign‹e
; \

767 
__cw
; \

768 
__cwtmp
; \

769 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

777 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

778 "=m" (
__cw
) \

779 : "0" (
__x
)); \

780  
__vÆue
)

782 #ifde‡
__FAST_MATH__


783 
	#__ldexp_code
 \

784 
__vÆue
; \

785 
__asm
 
__vﬁ©ûe__
 \

787 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

788  
__vÆue


	)

790 
__MATH_INLINE
 

791 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

793 
__ldexp_code
;

794 
	}
}

799 #ifde‡
__USE_ISOC99


801 #ifde‡
__FAST_MATH__


802 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

806 
	#__M_SQRT2
 1.41421356237309504880L

	)

808 #i‡!
	`__GNUC_PREREQ
 (3, 5)

809 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

810 
__vÆue
; \

811 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

812 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

814 
__asm
 
__vﬁ©ûe__
 \

818 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

819  
__vÆue
)

824 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

825 
__y
 = 
	`__Áb¶
 (
__x
); \

826  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

827 * 
	$__sgn1l
 (
__x
)))

829 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

830  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

832 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

833 
__y
 = 
	`__Áb¶
 (
__x
); \

834  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

837 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

838  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

840 #i‡!
	`__GNUC_PREREQ
 (3, 5)

841 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

842 
__vÆue
; \

843 
__junk
; \

844 
__asm
 
__vﬁ©ûe__
 \

846 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

847  
__vÆue
)

853 #ifde‡
__USE_ISOC99


854 #ifde‡
__FAST_MATH__


856 #i‡!
	`__GNUC_PREREQ
 (3, 5)

857 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

860 
__MATH_INLINE
 

861 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

863 
__ldexp_code
;

864 
	}
}

866 
__MATH_INLINE
 

867 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

869 
__ldexp_code
;

870 
	}
}

872 
__ölöe_m©h›NP
 (
röt
, "frndint")

875 
	#__Ãöt_code
 \

876 
__Ãöåes
; \

877 
__asm__
 
__vﬁ©ûe__
 \

879 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

880  
__Ãöåes


	)

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãötf
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöt
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 
__MATH_INLINE
 

892 
__NTH
 (
	$Ãöé
 (
__x
))

894 
__Ãöt_code
;

895 
	}
}

896 #unde‡
__Ãöt_code


898 
	#__Œröt_code
 \

899 
__Œröåes
; \

900 
__asm__
 
__vﬁ©ûe__
 \

902 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

903  
__Œröåes


	)

904 
__exãnsi⁄__


905 
__MATH_INLINE
 

906 
__NTH
 (
	$Œrötf
 (
__x
))

908 
__Œröt_code
;

909 
	}
}

910 
__exãnsi⁄__


911 
__MATH_INLINE
 

912 
__NTH
 (
	$Œröt
 (
__x
))

914 
__Œröt_code
;

915 
	}
}

916 
__exãnsi⁄__


917 
__MATH_INLINE
 

918 
__NTH
 (
	$Œröé
 (
__x
))

920 
__Œröt_code
;

921 
	}
}

922 #unde‡
__Œröt_code


927 #ifde‡
__USE_MISC


929 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

930 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

931 
__vÆue
; \

932 
__˛obbîed
; \

933 
__asm
 
__vﬁ©ûe__
 \

938 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

939  
__vÆue
)

944 
__MATH_INLINE
 

945 
__NTH
 (
	$__föôe
 (
__x
))

947  (
__exãnsi⁄__


948 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

950 
	}
}

955 #unde‡
__©™2_code


956 #ifde‡
__FAST_MATH__


957 #unde‡
__expm1_code


958 #unde‡
__exp_code


959 #unde‡
__söcos_code


966 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


967 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

968 
__ölöe_m©hcode2_
 (, 
__õì754_©™2l
, 
__y
, 
__x
,

969 
__vÆue
;

970 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

971 : "Ò" (
__vÆue
)

972 : "0" (
__x
), "u" (
__y
) : "st(1)");

973  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 #ifde‡
__USE_MISC


28 
	#MAP_32BIT
 0x40

	)

32 #ifde‡
__USE_MISC


33 
	#MAP_GROWSDOWN
 0x00100

	)

34 
	#MAP_DENYWRITE
 0x00800

	)

35 
	#MAP_EXECUTABLE
 0x01000

	)

36 
	#MAP_LOCKED
 0x02000

	)

37 
	#MAP_NORESERVE
 0x04000

	)

38 
	#MAP_POPULATE
 0x08000

	)

39 
	#MAP_NONBLOCK
 0x10000

	)

40 
	#MAP_STACK
 0x20000

	)

41 
	#MAP_HUGETLB
 0x40000

	)

45 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/msq.h

18 #i‚de‡
_SYS_MSG_H


22 
	~<bôs/ty≥s.h
>

25 
	#MSG_NOERROR
 010000

	)

26 #ifde‡
__USE_GNU


27 
	#MSG_EXCEPT
 020000

	)

28 
	#MSG_COPY
 040000

	)

32 
__sysˇŒ_ul⁄g_t
 
	tmsgqnum_t
;

33 
__sysˇŒ_ul⁄g_t
 
	tmsgÀn_t
;

37 
	smsqid_ds


39 
ùc_≥rm
 
	mmsg_≥rm
;

40 
__time_t
 
	mmsg_°ime
;

41 #i‚de‡
__x86_64__


42 
	m__glibc_ª£rved1
;

44 
__time_t
 
	mmsg_πime
;

45 #i‚de‡
__x86_64__


46 
	m__glibc_ª£rved2
;

48 
__time_t
 
	mmsg_˘ime
;

49 #i‚de‡
__x86_64__


50 
	m__glibc_ª£rved3
;

52 
__sysˇŒ_ul⁄g_t
 
	m__msg_cbyãs
;

53 
msgqnum_t
 
	mmsg_qnum
;

54 
msgÀn_t
 
	mmsg_qbyãs
;

55 
__pid_t
 
	mmsg_l•id
;

56 
__pid_t
 
	mmsg_Ãpid
;

57 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved4
;

58 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved5
;

61 #ifde‡
__USE_MISC


63 
	#msg_cbyãs
 
__msg_cbyãs


	)

66 
	#MSG_STAT
 11

	)

67 
	#MSG_INFO
 12

	)

70 
	smsgöfo


72 
	mmsgpoﬁ
;

73 
	mmsgm≠
;

74 
	mmsgmax
;

75 
	mmsgmnb
;

76 
	mmsgmni
;

77 
	mmsgssz
;

78 
	mmsgtql
;

79 
	mmsg£g
;

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 sig√d 
	m__rwñisi⁄
;

188 #ifde‡ 
__ILP32__


189 
	m__∑d1
[3];

190 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

192 
	m__∑d1
[7];

193 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

195 
	m__∑d2
;

198 
	m__Êags
;

199 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

200 } 
	m__d©a
;

204 
	m__lock
;

205 
	m__ƒ_ªadîs
;

206 
	m__ªadîs_wakeup
;

207 
	m__wrôî_wakeup
;

208 
	m__ƒ_ªadîs_queued
;

209 
	m__ƒ_wrôîs_queued
;

212 
	m__Êags
;

213 
	m__sh¨ed
;

214 sig√d 
	m__rwñisi⁄
;

215 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

216 
	m__∑d2
;

217 
	m__wrôî
;

218 } 
	m__d©a
;

220 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

221 
	m__Æign
;

222 } 
	t±hªad_rwlock_t
;

226 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

227 
	m__Æign
;

228 } 
	t±hªad_rwlock©å_t
;

232 #ifde‡
__USE_XOPEN2K


234 vﬁ©ûê
	t±hªad_•ölock_t
;

241 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

242 
	m__Æign
;

243 } 
	t±hªad_b¨rõr_t
;

247 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

248 
	m__Æign
;

249 } 
	t±hªad_b¨rõøâr_t
;

253 #i‚de‡
__x86_64__


255 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 
si_addr_lsb
;

113 *
_lowî
;

114 *
_uµî
;

115 } 
si_addr_bnd
;

116 } 
_sigÁu…
;

121 
si_b™d
;

122 
si_fd
;

123 } 
_sigpﬁl
;

128 *
_ˇŒ_addr
;

129 
_sysˇŒ
;

130 
_¨ch
;

131 } 
_sigsys
;

132 } 
_sifõlds
;

133 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

137 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

138 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

139 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

140 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

141 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

142 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

143 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

144 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

145 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

146 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

147 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

148 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

149 
	#si_lowî
 
_sifõlds
.
_sigÁu…
.
si_addr_bnd
.
_lowî


	)

150 
	#si_uµî
 
_sifõlds
.
_sigÁu…
.
si_addr_bnd
.
_uµî


	)

151 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

152 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

153 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

154 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

155 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

162 
SI_ASYNCNL
 = -60,

163 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

164 
SI_TKILL
 = -6,

165 
	#SI_TKILL
 
SI_TKILL


	)

166 
SI_SIGIO
,

167 
	#SI_SIGIO
 
SI_SIGIO


	)

168 
SI_ASYNCIO
,

169 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

170 
SI_MESGQ
,

171 
	#SI_MESGQ
 
SI_MESGQ


	)

172 
SI_TIMER
,

173 
	#SI_TIMER
 
SI_TIMER


	)

174 
SI_QUEUE
,

175 
	#SI_QUEUE
 
SI_QUEUE


	)

176 
SI_USER
,

177 
	#SI_USER
 
SI_USER


	)

178 
SI_KERNEL
 = 0x80

179 
	#SI_KERNEL
 
SI_KERNEL


	)

183 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


187 
ILL_ILLOPC
 = 1,

188 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

189 
ILL_ILLOPN
,

190 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

191 
ILL_ILLADR
,

192 
	#ILL_ILLADR
 
ILL_ILLADR


	)

193 
ILL_ILLTRP
,

194 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

195 
ILL_PRVOPC
,

196 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

197 
ILL_PRVREG
,

198 
	#ILL_PRVREG
 
ILL_PRVREG


	)

199 
ILL_COPROC
,

200 
	#ILL_COPROC
 
ILL_COPROC


	)

201 
ILL_BADSTK


202 
	#ILL_BADSTK
 
ILL_BADSTK


	)

208 
FPE_INTDIV
 = 1,

209 
	#FPE_INTDIV
 
FPE_INTDIV


	)

210 
FPE_INTOVF
,

211 
	#FPE_INTOVF
 
FPE_INTOVF


	)

212 
FPE_FLTDIV
,

213 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

214 
FPE_FLTOVF
,

215 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

216 
FPE_FLTUND
,

217 
	#FPE_FLTUND
 
FPE_FLTUND


	)

218 
FPE_FLTRES
,

219 
	#FPE_FLTRES
 
FPE_FLTRES


	)

220 
FPE_FLTINV
,

221 
	#FPE_FLTINV
 
FPE_FLTINV


	)

222 
FPE_FLTSUB


223 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

229 
SEGV_MAPERR
 = 1,

230 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

231 
SEGV_ACCERR


232 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

238 
BUS_ADRALN
 = 1,

239 
	#BUS_ADRALN
 
BUS_ADRALN


	)

240 
BUS_ADRERR
,

241 
	#BUS_ADRERR
 
BUS_ADRERR


	)

242 
BUS_OBJERR
,

243 
	#BUS_OBJERR
 
BUS_OBJERR


	)

244 
BUS_MCEERR_AR
,

245 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

246 
BUS_MCEERR_AO


247 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

251 #ifde‡
__USE_XOPEN_EXTENDED


255 
TRAP_BRKPT
 = 1,

256 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

257 
TRAP_TRACE


258 
	#TRAP_TRACE
 
TRAP_TRACE


	)

262 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


266 
CLD_EXITED
 = 1,

267 
	#CLD_EXITED
 
CLD_EXITED


	)

268 
CLD_KILLED
,

269 
	#CLD_KILLED
 
CLD_KILLED


	)

270 
CLD_DUMPED
,

271 
	#CLD_DUMPED
 
CLD_DUMPED


	)

272 
CLD_TRAPPED
,

273 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

274 
CLD_STOPPED
,

275 
	#CLD_STOPPED
 
CLD_STOPPED


	)

276 
CLD_CONTINUED


277 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

283 
POLL_IN
 = 1,

284 
	#POLL_IN
 
POLL_IN


	)

285 
POLL_OUT
,

286 
	#POLL_OUT
 
POLL_OUT


	)

287 
POLL_MSG
,

288 
	#POLL_MSG
 
POLL_MSG


	)

289 
POLL_ERR
,

290 
	#POLL_ERR
 
POLL_ERR


	)

291 
POLL_PRI
,

292 
	#POLL_PRI
 
POLL_PRI


	)

293 
POLL_HUP


294 
	#POLL_HUP
 
POLL_HUP


	)

298 #unde‡
__√ed_sigöfo_t


302 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

303 && !
deföed
 
__have_sigevít_t


304 
	#__have_sigevít_t
 1

	)

307 
	#__SIGEV_MAX_SIZE
 64

	)

308 #i‡
__WORDSIZE
 == 64

309 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

311 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

315 #i‚de‡
__have_±hªad_©å_t


316 
±hªad_©å_t
 
	t±hªad_©å_t
;

317 
	#__have_±hªad_©å_t
 1

	)

320 
	ssigevít


322 
sigvÆ_t
 
sigev_vÆue
;

323 
sigev_signo
;

324 
sigev_nŸify
;

328 
_∑d
[
__SIGEV_PAD_SIZE
];

332 
__pid_t
 
_tid
;

336 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

337 
±hªad_©å_t
 *
_©åibuã
;

338 } 
_sigev_thªad
;

339 } 
_sigev_un
;

340 } 
	tsigevít_t
;

343 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

344 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

349 
SIGEV_SIGNAL
 = 0,

350 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

351 
SIGEV_NONE
,

352 
	#SIGEV_NONE
 
SIGEV_NONE


	)

353 
SIGEV_THREAD
,

354 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

356 
SIGEV_THREAD_ID
 = 4

357 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_IB
 27

	)

72 
	#PF_MPLS
 28

	)

73 
	#PF_CAN
 29

	)

74 
	#PF_TIPC
 30

	)

75 
	#PF_BLUETOOTH
 31

	)

76 
	#PF_IUCV
 32

	)

77 
	#PF_RXRPC
 33

	)

78 
	#PF_ISDN
 34

	)

79 
	#PF_PHONET
 35

	)

80 
	#PF_IEEE802154
 36

	)

81 
	#PF_CAIF
 37

	)

82 
	#PF_ALG
 38

	)

83 
	#PF_NFC
 39

	)

84 
	#PF_VSOCK
 40

	)

85 
	#PF_MAX
 41

	)

88 
	#AF_UNSPEC
 
PF_UNSPEC


	)

89 
	#AF_LOCAL
 
PF_LOCAL


	)

90 
	#AF_UNIX
 
PF_UNIX


	)

91 
	#AF_FILE
 
PF_FILE


	)

92 
	#AF_INET
 
PF_INET


	)

93 
	#AF_AX25
 
PF_AX25


	)

94 
	#AF_IPX
 
PF_IPX


	)

95 
	#AF_APPLETALK
 
PF_APPLETALK


	)

96 
	#AF_NETROM
 
PF_NETROM


	)

97 
	#AF_BRIDGE
 
PF_BRIDGE


	)

98 
	#AF_ATMPVC
 
PF_ATMPVC


	)

99 
	#AF_X25
 
PF_X25


	)

100 
	#AF_INET6
 
PF_INET6


	)

101 
	#AF_ROSE
 
PF_ROSE


	)

102 
	#AF_DEC√t
 
PF_DEC√t


	)

103 
	#AF_NETBEUI
 
PF_NETBEUI


	)

104 
	#AF_SECURITY
 
PF_SECURITY


	)

105 
	#AF_KEY
 
PF_KEY


	)

106 
	#AF_NETLINK
 
PF_NETLINK


	)

107 
	#AF_ROUTE
 
PF_ROUTE


	)

108 
	#AF_PACKET
 
PF_PACKET


	)

109 
	#AF_ASH
 
PF_ASH


	)

110 
	#AF_ECONET
 
PF_ECONET


	)

111 
	#AF_ATMSVC
 
PF_ATMSVC


	)

112 
	#AF_RDS
 
PF_RDS


	)

113 
	#AF_SNA
 
PF_SNA


	)

114 
	#AF_IRDA
 
PF_IRDA


	)

115 
	#AF_PPPOX
 
PF_PPPOX


	)

116 
	#AF_WANPIPE
 
PF_WANPIPE


	)

117 
	#AF_LLC
 
PF_LLC


	)

118 
	#AF_IB
 
PF_IB


	)

119 
	#AF_MPLS
 
PF_MPLS


	)

120 
	#AF_CAN
 
PF_CAN


	)

121 
	#AF_TIPC
 
PF_TIPC


	)

122 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

123 
	#AF_IUCV
 
PF_IUCV


	)

124 
	#AF_RXRPC
 
PF_RXRPC


	)

125 
	#AF_ISDN
 
PF_ISDN


	)

126 
	#AF_PHONET
 
PF_PHONET


	)

127 
	#AF_IEEE802154
 
PF_IEEE802154


	)

128 
	#AF_CAIF
 
PF_CAIF


	)

129 
	#AF_ALG
 
PF_ALG


	)

130 
	#AF_NFC
 
PF_NFC


	)

131 
	#AF_VSOCK
 
PF_VSOCK


	)

132 
	#AF_MAX
 
PF_MAX


	)

138 
	#SOL_RAW
 255

	)

139 
	#SOL_DECNET
 261

	)

140 
	#SOL_X25
 262

	)

141 
	#SOL_PACKET
 263

	)

142 
	#SOL_ATM
 264

	)

143 
	#SOL_AAL
 265

	)

144 
	#SOL_IRDA
 266

	)

147 
	#SOMAXCONN
 128

	)

150 
	~<bôs/sockaddr.h
>

153 
	ssockaddr


155 
__SOCKADDR_COMMON
 (
ß_
);

156 
	mß_d©a
[14];

162 
	#__ss_Æig¡y≥
 

	)

163 
	#_SS_PADSIZE
 \

164 (
_SS_SIZE
 - 
__SOCKADDR_COMMON_SIZE
 -  (
__ss_Æig¡y≥
))

	)

166 
	ssockaddr_°‹age


168 
__SOCKADDR_COMMON
 (
ss_
);

169 
	m__ss_∑ddög
[
_SS_PADSIZE
];

170 
__ss_Æig¡y≥
 
	m__ss_Æign
;

177 
	mMSG_OOB
 = 0x01,

178 
	#MSG_OOB
 
MSG_OOB


	)

179 
	mMSG_PEEK
 = 0x02,

180 
	#MSG_PEEK
 
MSG_PEEK


	)

181 
	mMSG_DONTROUTE
 = 0x04,

182 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

183 #ifde‡
__USE_GNU


185 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

186 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

188 
	mMSG_CTRUNC
 = 0x08,

189 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

190 
	mMSG_PROXY
 = 0x10,

191 
	#MSG_PROXY
 
MSG_PROXY


	)

192 
	mMSG_TRUNC
 = 0x20,

193 
	#MSG_TRUNC
 
MSG_TRUNC


	)

194 
	mMSG_DONTWAIT
 = 0x40,

195 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

196 
	mMSG_EOR
 = 0x80,

197 
	#MSG_EOR
 
MSG_EOR


	)

198 
	mMSG_WAITALL
 = 0x100,

199 
	#MSG_WAITALL
 
MSG_WAITALL


	)

200 
	mMSG_FIN
 = 0x200,

201 
	#MSG_FIN
 
MSG_FIN


	)

202 
	mMSG_SYN
 = 0x400,

203 
	#MSG_SYN
 
MSG_SYN


	)

204 
	mMSG_CONFIRM
 = 0x800,

205 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

206 
	mMSG_RST
 = 0x1000,

207 
	#MSG_RST
 
MSG_RST


	)

208 
	mMSG_ERRQUEUE
 = 0x2000,

209 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

210 
	mMSG_NOSIGNAL
 = 0x4000,

211 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

212 
	mMSG_MORE
 = 0x8000,

213 
	#MSG_MORE
 
MSG_MORE


	)

214 
	mMSG_WAITFORONE
 = 0x10000,

215 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

216 
	mMSG_FASTOPEN
 = 0x20000000,

217 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

219 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

222 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

228 
	smsghdr


230 *
	mmsg_«me
;

231 
sockÀn_t
 
	mmsg_«mñí
;

233 
iovec
 *
	mmsg_iov
;

234 
size_t
 
	mmsg_iovÀn
;

236 *
	mmsg_c⁄åﬁ
;

237 
size_t
 
	mmsg_c⁄åﬁÀn
;

242 
	mmsg_Êags
;

246 
	scmsghdr


248 
size_t
 
	mcmsg_Àn
;

253 
	mcmsg_Àvñ
;

254 
	mcmsg_ty≥
;

255 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

256 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

261 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

262 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

264 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

266 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

267 
	#CMSG_FIRSTHDR
(
mhdr
) \

268 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

269 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

270 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

271 & (
size_t
Ë~( (size_tË- 1))

	)

272 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

273 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

274 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

276 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

277 
cmsghdr
 *
__cmsg
Ë
__THROW
;

278 #ifde‡
__USE_EXTERN_INLINES


279 #i‚de‡
_EXTERN_INLINE


280 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

282 
_EXTERN_INLINE
 
cmsghdr
 *

283 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

285 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

287  (
cmsghdr
 *) 0;

289 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

290 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

291 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


292 + 
__mhdr
->
msg_c⁄åﬁÀn
)

293 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

294 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

296  (
cmsghdr
 *) 0;

297  
__cmsg
;

298 
	}
}

305 
	mSCM_RIGHTS
 = 0x01

306 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

307 #ifde‡
__USE_GNU


308 , 
	mSCM_CREDENTIALS
 = 0x02

309 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

313 #ifde‡
__USE_GNU


315 
	su¸ed


317 
pid_t
 
	mpid
;

318 
uid_t
 
	muid
;

319 
gid_t
 
	mgid
;

324 #i‚de‡
__USE_MISC


325 #i‚de‡
FIOGETOWN


326 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

328 #i‚de‡
FIOSETOWN


329 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

331 #i‚de‡
SIOCATMARK


332 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

334 #i‚de‡
SIOCGPGRP


335 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

337 #i‚de‡
SIOCGSTAMP


338 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

340 #i‚de‡
SIOCGSTAMPNS


341 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

343 #i‚de‡
SIOCSPGRP


344 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

349 
	~<asm/sockë.h
>

351 #i‚de‡
__USE_MISC


352 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


353 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


354 #unde‡
FIOGETOWN


356 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


357 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


358 #unde‡
FIOSETOWN


360 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


361 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


362 #unde‡
SIOCATMARK


364 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


365 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


366 #unde‡
SIOCGPGRP


368 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


369 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


370 #unde‡
SIOCGSTAMP


372 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


373 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


374 #unde‡
SIOCGSTAMPNS


376 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


377 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


378 #unde‡
SIOCSPGRP


383 
	slögî


385 
	ml_⁄off
;

386 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #ifde‡
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #ifde‡
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_INLINE_u«lig√d
 1

	)

27 
	#_HAVE_STRING_ARCH_memp˝y
 1

	)

31 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

32 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

33 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

34 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

35 || 
deföed
 
	g__ßndybridge__
 || deföed 
	g__haswñl__
 \

36 || 
deföed
 
	g__b⁄√Œ__
 || deföed 
	g__sûvîm⁄t__
 \

37 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

38 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

39 || 
deföed
 
	g__amdÁm10__
 || deföed 
	g__bdvî1__
 \

40 || 
deföed
 
	g__bdvî2__
 || deföed 
	g__bdvî3__
 \

41 || 
deföed
 
	g__bdvî4__
 || deföed 
	g__btvî1__
 \

42 || 
deföed
 
	g__btvî2__
)

46 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

47 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

49 #i‚de‡
__STRING_INLINE


50 #i‚de‡
__exã∫_ölöe


51 
	#__STRING_INLINE
 
ölöe


	)

53 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

58 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

59 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

60 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

62 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

63 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

64 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

65 | ((c⁄° *Ë(
§c
))[
idx
])

	)

69 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

70 
	#mem˝y
(
de°
, 
§c
, 
n
) \

71 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

72 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

73 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

74 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

75 ((
n
) == 0 \

76 ? (
de°
) \

77 : (((
n
) % 4 == 0) \

78 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

79 : (((
n
) % 2 == 0) \

80 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

81 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

83 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

84 
size_t
 
__n
);

86 
__STRING_INLINE
 *

87 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

89 
__d0
, 
__d1
;

90 *
__tmp
 = 
__de°
;

91 
__asm__
 
__vﬁ©ûe__


99 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

100 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

102  
__de°
;

103 
	}
}

105 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

106 
size_t
 
__n
);

108 
__STRING_INLINE
 *

109 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

111 
__d0
, 
__d1
;

112 *
__tmp
 = 
__de°
;

113 
__asm__
 
__vﬁ©ûe__


126 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

127 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

129  
__de°
;

130 
	}
}

132 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

134 
__STRING_INLINE
 *

135 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

137 
__d0
, 
__d1
, 
__d2
;

138 *
__tmp
 = 
__de°
;

139 
__asm__
 
__vﬁ©ûe__


150 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

151 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

152 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

153 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

155  
__de°
;

156 
	}
}

158 
	#_HAVE_STRING_ARCH_memmove
 1

	)

159 #i‚de‡
_FORCE_INLINES


162 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

164 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

165 
	`__asm__
 ("memmove");

167 
__STRING_INLINE
 *

168 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

170 
__d0
, 
__d1
, 
__d2
;

171 *
__tmp
 = 
__de°
;

172 i‡(
__de°
 < 
__§c
)

173 
__asm__
 
__vﬁ©ûe__


176 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

177 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

178 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

179 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

181 
__asm__
 
__vﬁ©ûe__


187 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

188 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

189 : "0" (
__n
), "1" (__¿+ (c⁄° *Ë
__§c
),

190 "2" (
__n
 + (*Ë
__tmp
),

191 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

192  
__de°
;

193 
	}
}

197 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

198 #i‚de‡
_FORCE_INLINES


199 #i‚de‡
__PIC__


201 
__STRING_INLINE
 

202 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

204 
__d0
, 
__d1
, 
__d2
;

205 
__ªs
;

206 
__asm__
 
__vﬁ©ûe__


214 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

215 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

216 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

217 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

219  
__ªs
;

220 
	}
}

225 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

226 
	#_USE_STRING_ARCH_mem£t
 1

	)

227 
	#mem£t
(
s
, 
c
, 
n
) \

228 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

229 ? ((
n
) == 1 \

230 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

231 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

232 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

233 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

234 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

235 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

236 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

237 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

238 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

240 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

241 *((*Ë
__s
Ë(Ë(
c
); \

242 
__s
; })

	)

244 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

245 ({ *
__s
 = (
s
); \

247 
__ui
; \

248 
__usi
; \

249 
__uc
; \

250 } *
__u
 = 
__s
; \

251 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

257 i‡((
n
) == 3 || (n) >= 5) \

258 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

261 
n
) \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__ui
 = 
__c
; \

268 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

270 
__u
->
__ui
 = 
__c
; \

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

273 
__u
->
__usi
 = (Ë
__c
; \

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

275 
__u
->
__uc
 = (Ë
__c
; \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__usi
 = (Ë
__c
; \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__uc
 = (Ë
__c
; \

305 
__u
->
__ui
 = 
__c
; \

306 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

308 
__u
->
__ui
 = 
__c
; \

309 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

311 
__u
->
__ui
 = 
__c
; \

312 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

314 
__u
->
__ui
 = 
__c
; \

319 
__s
; })

	)

321 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

322 (((
n
) % 4 == 0) \

323 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

324 
n
) \

325 : (((
n
) % 2 == 0) \

326 ? 
	`__mem£t_c˙_by2
 (
s
, \

327 ((Ë((Ë(
c
))) * 0x01010101,\

328 
n
) \

329 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

331 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

332 
size_t
 
__n
);

334 
__STRING_INLINE
 *

335 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

337 *
__tmp
 = 
__s
;

338 
__d0
;

339 #ifde‡
__i686__


340 
__asm__
 
__vﬁ©ûe__


343 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

344 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

345 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

348 
__asm__
 
__vﬁ©ûe__


354 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359  
__s
;

360 
	}
}

362 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

363 
size_t
 
__n
);

365 
__STRING_INLINE
 *

366 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

368 
__d0
, 
__d1
;

369 *
__tmp
 = 
__s
;

370 #ifde‡
__i686__


371 
__asm__
 
__vﬁ©ûe__


375 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

376 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

377 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

380 
__asm__
 
__vﬁ©ûe__


386 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

387 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

388 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

391  
__s
;

392 
	}
}

394 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

395 (((
n
) % 4 == 0) \

396 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

397 : (((
n
) % 2 == 0) \

398 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

399 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

401 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

403 
__STRING_INLINE
 *

404 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

406 *
__tmp
 = 
__s
;

407 
__d0
;

408 
__asm__
 
__vﬁ©ûe__


418 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

419 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

420 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

422  
__s
;

423 
	}
}

425 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

427 
__STRING_INLINE
 *

428 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

430 
__d0
, 
__d1
;

431 *
__tmp
 = 
__s
;

432 
__asm__
 
__vﬁ©ûe__


443 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

444 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

445 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

447  
__s
;

448 
	}
}

452 
	#_HAVE_STRING_ARCH_memchr
 1

	)

453 #i‚de‡
_FORCE_INLINES


454 
__STRING_INLINE
 *

455 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

457 
__d0
;

458 #ifde‡
__i686__


459 
__d1
;

461 *
__ªs
;

462 i‡(
__n
 == 0)

463  
NULL
;

464 #ifde‡
__i686__


465 
__asm__
 
__vﬁ©ûe__


469 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

470 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

471 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

474 
__asm__
 
__vﬁ©ûe__


480 : "=D" (
__ªs
), "=&c" (
__d0
)

481 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

482 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

485  
__ªs
 - 1;

486 
	}
}

489 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

490 #i‚de‡
_FORCE_INLINES


491 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

493 
__STRING_INLINE
 *

494 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

496 
__d0
;

497 #ifde‡
__i686__


498 
__d1
;

500 *
__ªs
;

501 i‡(
__n
 == 0)

502  
NULL
;

503 #ifde‡
__i686__


504 
__asm__
 
__vﬁ©ûe__


510 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

511 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

512 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

515 
__asm__
 
__vﬁ©ûe__


522 : "=D" (
__ªs
), "=&c" (
__d0
)

523 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

524 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

527  
__ªs
;

528 
	}
}

529 #ifde‡
__USE_GNU


530 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

535 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

536 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

538 #i‚de‡
_FORCE_INLINES


539 
__STRING_INLINE
 *

540 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

542 
__d0
;

543 *
__ªs
;

544 
__asm__
 
__vﬁ©ûe__


547 : "=D" (
__ªs
), "=&c" (
__d0
)

548 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

549 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

551  
__ªs
 - 1;

552 
	}
}

553 #ifde‡
__USE_GNU


554 
__STRING_INLINE
 *

555 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

557  
	`__øwmemchr
 (
__s
, 
__c
);

558 
	}
}

564 
	#_HAVE_STRING_ARCH_°æí
 1

	)

565 
	#°æí
(
°r
) \

566 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

567 ? 
	`__buûtö_°æí
 (
°r
) \

568 : 
	`__°æí_g
 (
°r
)))

	)

569 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

571 
__STRING_INLINE
 
size_t


572 
	$__°æí_g
 (c⁄° *
__°r
)

574 
__dummy
;

575 c⁄° *
__tmp
 = 
__°r
;

576 
__asm__
 
__vﬁ©ûe__


582 : "Ù" (
__tmp
), "=&q" (
__dummy
)

583 : "0" (
__°r
),

584 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

586  
__tmp
 - 
__°r
 - 1;

587 
	}
}

591 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

592 
	#°r˝y
(
de°
, 
§c
) \

593 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

594 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

595 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

596 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

597 (c⁄° *Ë(
§c
), \

598 
	`°æí
 (
§c
) + 1)) \

599 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

601 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

602 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

604 
__ui
; \

605 
__usi
; \

606 
__uc
; \

607 
__c
; \

608 } *
__u
 = (*Ë
__de°
; \

609 
§˛í
) \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

618 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

619 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

620 
__u
->
__uc
 = '\0'; \

623 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__uc
 = '\0'; \

631 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

633 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

636 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

637 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

638 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

640 
__u
->
__uc
 = '\0'; \

643 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

645 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

648 (*Ë
__de°
; }))

	)

650 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

652 
__STRING_INLINE
 *

653 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

655 *
__tmp
 = 
__de°
;

656 
__dummy
;

657 
__asm__
 
__vﬁ©ûe__


666 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

667 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

668 : "0" (
__§c
), "1" (
__tmp
),

669 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

671  
__de°
;

672 
	}
}

675 #ifde‡
__USE_GNU


676 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

678 
	#__°p˝y
(
de°
, 
§c
) \

679 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

680 ? (
	`°æí
 (
§c
) + 1 <= 8 \

681 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

682 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

683 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

684 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

685 ((
§˛í
) % 4 == 0 \

686 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

687 : ((
§˛í
) % 2 == 0 \

688 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

689 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

692 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

694 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

695 (
	`__exãnsi⁄__
 ({ union { \

696 
__ui
; \

697 
__usi
; \

698 
__uc
; \

699 
__c
; \

700 } *
__u
 = (*Ë(
de°
); \

701 
§˛í
) \

704 
__u
->
__uc
 = '\0'; \

707 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

708 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

713 
__u
->
__uc
 = '\0'; \

716 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

717 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

720 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

721 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

722 
__u
->
__uc
 = '\0'; \

725 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

726 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

727 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

728 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

731 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

732 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

733 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

734 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

735 
__u
->
__uc
 = '\0'; \

738 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

739 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

740 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

741 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

744 (*Ë
__u
; }))

	)

746 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

747 
size_t
 
__§˛í
);

749 
__STRING_INLINE
 *

750 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

752 *
__tmp
 = 
__de°
;

753 
__d0
, 
__d1
;

754 
__asm__
 
__vﬁ©ûe__


762 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

763 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

765  
__tmp
;

766 
	}
}

768 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

769 
size_t
 
__§˛í
);

771 
__STRING_INLINE
 *

772 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

774 *
__tmp
 = 
__de°
;

775 
__d0
, 
__d1
;

776 
__asm__
 
__vﬁ©ûe__


789 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

790 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

791 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

792 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

794  
__tmp
 + 2;

795 
	}
}

797 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

798 
size_t
 
__§˛í
);

800 
__STRING_INLINE
 *

801 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

803 
__d0
, 
__d1
;

804 *
__tmp
 = 
__de°
;

805 
__asm__
 
__vﬁ©ûe__


816 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

817 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

818 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

819 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

821  
__tmp
;

822 
	}
}

824 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

826 
__STRING_INLINE
 *

827 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

829 *
__tmp
 = 
__de°
;

830 
__dummy
;

831 
__asm__
 
__vﬁ©ûe__


840 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

841 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

842 : "0" (
__§c
), "1" (
__tmp
),

843 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

845  
__tmp
 - 1;

846 
	}
}

851 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

852 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

853 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

854 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

855 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

856 (c⁄° *Ë(
§c
), 
n
) \

857 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

858 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

859 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

860 (((
§˛í
) % 4 == 0) \

861 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

862 : (((
§˛í
) % 2 == 0) \

863 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

864 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

866 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

867 
size_t
 
__§˛í
, size_à
__n
);

869 
__STRING_INLINE
 *

870 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

872 *
__tmp
 = 
__de°
;

873 
__dummy1
, 
__dummy2
;

874 
__asm__
 
__vﬁ©ûe__


882 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

883 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

884 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

885 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

887 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

888  
__de°
;

889 
	}
}

891 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

892 
size_t
 
__§˛í
, size_à
__n
);

894 
__STRING_INLINE
 *

895 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

897 *
__tmp
 = 
__de°
;

898 
__dummy1
, 
__dummy2
;

899 
__asm__
 
__vﬁ©ûe__


912 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

913 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

914 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

915 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

917 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

918  
__de°
;

919 
	}
}

921 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

922 
size_t
 
__§˛í
, size_à
__n
);

924 
__STRING_INLINE
 *

925 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

927 
__d0
, 
__d1
;

928 *
__tmp
 = 
__de°
;

929 
__asm__
 
__vﬁ©ûe__


940 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

941 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

942 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

943 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

945 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

946  
__de°
;

947 
	}
}

949 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

950 
size_t
 
__n
);

952 
__STRING_INLINE
 *

953 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

955 *
__tmp
 = 
__de°
;

956 
__dummy
;

957 i‡(
__n
 > 0)

958 
__asm__
 
__vﬁ©ûe__


974 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

975 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

978  
__de°
;

979 
	}
}

983 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

984 
	#°rˇt
(
de°
, 
§c
) \

985 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

986 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

987 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

989 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

990 
size_t
 
__§˛í
);

992 
__STRING_INLINE
 *

993 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

995 #ifde‡
__i686__


996 
__d0
;

997 *
__tmp
;

998 
__asm__
 
__vﬁ©ûe__


1000 : "=D" (
__tmp
), "=&c" (
__d0
),

1001 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1002 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

1003 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1005 --
__tmp
;

1007 *
__tmp
 = 
__de°
;

1008 
__asm__
 
__vﬁ©ûe__


1014 : "Ù" (
__tmp
),

1015 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1016 : "0" (
__tmp
),

1017 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1020 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1021  
__de°
;

1022 
	}
}

1024 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1026 
__STRING_INLINE
 *

1027 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1029 *
__tmp
 = 
__de°
;

1030 
__dummy
;

1031 
__asm__
 
__vﬁ©ûe__


1044 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1045 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1046 : "1" (
__tmp
), "2" (
__§c
),

1047 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1049  
__de°
;

1050 
	}
}

1054 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1055 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1056 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1057 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1058 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1059 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1060 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1061 (c⁄° *Ë(
§c
), \

1062 (
n
)Ë0, 
__de°
)) \

1063 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1065 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1066 
size_t
 
__n
);

1068 
__STRING_INLINE
 *

1069 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1071 *
__tmp
 = 
__de°
;

1072 
__dummy
;

1073 #ifde‡
__i686__


1074 
__asm__
 
__vﬁ©ûe__


1088 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1089 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1092 --
__tmp
;

1093 
__asm__
 
__vﬁ©ûe__


1110 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1111 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1114  
__de°
;

1115 
	}
}

1119 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1120 
	#°rcmp
(
s1
, 
s2
) \

1121 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1122 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1123 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1124 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1125 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1126 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1127 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1128 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1129 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1130 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s1
)) \

1133 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1134 (c⁄° *Ë(
s2
), \

1135 
	`°æí
 (
s1
))) \

1136 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1137 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1138 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1139 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1140 (c⁄° *Ë(
s2
), \

1141 
	`°æí
 (
s2
)) \

1142 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1143 (c⁄° *Ë(
s2
), \

1144 
	`°æí
 (
s2
))) \

1145 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1147 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1148 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1149 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1151 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1152 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1155 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1156 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1159 
__ªsu…
; }))

	)

1161 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1162 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1163 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1164 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1166 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1167 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1170 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1171 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1174 
__ªsu…
; }))

	)

1176 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1177 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1178 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1179 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1181 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1182 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1184 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1185 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1186 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1189 
__ªsu…
; }))

	)

1191 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1193 
__STRING_INLINE
 

1194 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1196 
__ªs
;

1197 
__asm__
 
__vﬁ©ûe__


1213 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1214 : "1" (
__s1
), "2" (
__s2
),

1215 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1216 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1218  
__ªs
;

1219 
	}
}

1223 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1224 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1225 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1226 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1227 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1228 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1229 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1231 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1232 
size_t
 
__n
);

1234 
__STRING_INLINE
 

1235 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1237 
__ªs
;

1238 
__asm__
 
__vﬁ©ûe__


1257 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1258 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1259 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1260 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1262  
__ªs
;

1263 
	}
}

1267 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1268 
	#_USE_STRING_ARCH_°rchr
 1

	)

1269 
	#°rchr
(
s
, 
c
) \

1270 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1271 ? ((
c
) == '\0' \

1272 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1273 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1274 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1276 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1278 
__STRING_INLINE
 *

1279 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1281 
__d0
;

1282 *
__ªs
;

1283 
__asm__
 
__vﬁ©ûe__


1293 : "Ù" (
__ªs
), "=&a" (
__d0
)

1294 : "0" (
__s
), "1" (
__c
),

1295 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1297  
__ªs
;

1298 
	}
}

1300 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1302 
__STRING_INLINE
 *

1303 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1305 
__d0
;

1306 *
__ªs
;

1307 
__asm__
 
__vﬁ©ûe__


1318 : "Ù" (
__ªs
), "=&a" (
__d0
)

1319 : "0" (
__s
), "1" (
__c
),

1320 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1322  
__ªs
;

1323 
	}
}

1327 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1328 
	#__°rch∫ul
(
s
, 
c
) \

1329 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1330 ? ((
c
) == '\0' \

1331 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1332 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1333 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1335 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1337 
__STRING_INLINE
 *

1338 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1340 
__d0
;

1341 *
__ªs
;

1342 
__asm__
 
__vﬁ©ûe__


1352 : "Ù" (
__ªs
), "=&a" (
__d0
)

1353 : "0" (
__s
), "1" (
__c
),

1354 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1356  
__ªs
;

1357 
	}
}

1359 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1361 
__STRING_INLINE
 *

1362 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1364 
__d0
;

1365 *
__ªs
;

1366 
__asm__
 
__vﬁ©ûe__


1377 : "Ù" (
__ªs
), "=&a" (
__d0
)

1378 : "0" (
__s
), "1" (
__c
),

1379 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1381  
__ªs
;

1382 
	}
}

1383 #ifde‡
__USE_GNU


1384 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1390 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1391 
	#ödex
(
s
, 
c
) \

1392 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1393 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1394 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1399 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1400 
	#°ºchr
(
s
, 
c
) \

1401 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1402 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1403 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1405 #ifde‡
__i686__


1406 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1408 
__STRING_INLINE
 *

1409 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1411 
__d0
, 
__d1
;

1412 *
__ªs
;

1413 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1444 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1445 : "0" (1), "1" (
__s
), "2" (
__c
),

1446 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1448  
__ªs
 - 1;

1449 
	}
}

1451 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1453 
__STRING_INLINE
 *

1454 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1456 
__d0
, 
__d1
;

1457 *
__ªs
;

1458 
__asm__
 
__vﬁ©ûe__


1468 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1469 : "0" (0), "1" (
__s
), "2" (
__c
),

1470 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1472  
__ªs
;

1473 
	}
}

1475 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1477 
__STRING_INLINE
 *

1478 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1480 
__d0
, 
__d1
;

1481 *
__ªs
;

1482 
__asm__
 
__vﬁ©ûe__


1493 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1494 : "0" (0), "1" (
__s
), "2" (
__c
),

1495 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1497  
__ªs
;

1498 
	}
}

1502 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1504 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1505 
	#rödex
(
s
, 
c
) \

1506 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1507 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1508 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1514 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1515 
	#°rc•n
(
s
, 
ªje˘
) \

1516 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1517 ? ((
ªje˘
)[0] == '\0' \

1518 ? 
	`°æí
 (
s
) \

1519 : ((
ªje˘
)[1] == '\0' \

1520 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1521 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1522 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1524 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1526 #i‚de‡
_FORCE_INLINES


1527 
__STRING_INLINE
 
size_t


1528 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1530 
__d0
;

1531 *
__ªs
;

1532 
__asm__
 
__vﬁ©ûe__


1541 : "Ù" (
__ªs
), "=&a" (
__d0
)

1542 : "0" (
__s
), "1" (
__ªje˘
),

1543 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1545  (
__ªs
 - 1Ë- 
__s
;

1546 
	}
}

1549 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1550 
size_t
 
__ªje˘_Àn
);

1552 
__STRING_INLINE
 
size_t


1553 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1555 
__d0
, 
__d1
, 
__d2
;

1556 c⁄° *
__ªs
;

1557 
__asm__
 
__vﬁ©ûe__


1568 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1569 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1571  (
__ªs
 - 1Ë- 
__s
;

1572 
	}
}

1574 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1575 #ifde‡
__PIC__


1577 
__STRING_INLINE
 
size_t


1578 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1580 
__d0
, 
__d1
, 
__d2
;

1581 c⁄° *
__ªs
;

1582 
__asm__
 
__vﬁ©ûe__


1599 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1600 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1602  (
__ªs
 - 1Ë- 
__s
;

1603 
	}
}

1605 
__STRING_INLINE
 
size_t


1606 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1608 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1609 c⁄° *
__ªs
;

1610 
__asm__
 
__vﬁ©ûe__


1624 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1625 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1628  (
__ªs
 - 1Ë- 
__s
;

1629 
	}
}

1635 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1636 
	#°r•n
(
s
, 
ac˚±
) \

1637 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1638 ? ((
ac˚±
)[0] == '\0' \

1639 ? ((Ë(
s
), 0) \

1640 : ((
ac˚±
)[1] == '\0' \

1641 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1642 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1643 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1645 #i‚de‡
_FORCE_INLINES


1646 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1651 
__d0
;

1652 *
__ªs
;

1654 
__asm__
 
__vﬁ©ûe__


1660 : "Ù" (
__ªs
), "=&q" (
__d0
)

1661 : "0" (
__s
), "1" (
__ac˚±
),

1662 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1664  (
__ªs
 - 1Ë- 
__s
;

1665 
	}
}

1668 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1669 
size_t
 
__ac˚±_Àn
);

1671 
__STRING_INLINE
 
size_t


1672 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1674 
__d0
, 
__d1
, 
__d2
;

1675 c⁄° *
__ªs
;

1676 
__asm__
 
__vﬁ©ûe__


1687 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1688 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1691 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1692 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1694  (
__ªs
 - 1Ë- 
__s
;

1695 
	}
}

1697 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1698 #ifde‡
__PIC__


1700 
__STRING_INLINE
 
size_t


1701 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1703 
__d0
, 
__d1
, 
__d2
;

1704 c⁄° *
__ªs
;

1705 
__asm__
 
__vﬁ©ûe__


1721 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1722 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1724  (
__ªs
 - 1Ë- 
__s
;

1725 
	}
}

1727 
__STRING_INLINE
 
size_t


1728 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1730 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1731 c⁄° *
__ªs
;

1732 
__asm__
 
__vﬁ©ûe__


1746 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1747 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1749  (
__ªs
 - 1Ë- 
__s
;

1750 
	}
}

1755 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1756 
	#°Ωbrk
(
s
, 
ac˚±
) \

1757 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1758 ? ((
ac˚±
)[0] == '\0' \

1759 ? ((Ë(
s
), (*) 0) \

1760 : ((
ac˚±
)[1] == '\0' \

1761 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1762 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1763 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1765 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1766 
size_t
 
__ac˚±_Àn
);

1768 
__STRING_INLINE
 *

1769 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1771 
__d0
, 
__d1
, 
__d2
;

1772 *
__ªs
;

1773 
__asm__
 
__vﬁ©ûe__


1788 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1789 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1791  
__ªs
;

1792 
	}
}

1794 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1795 #ifde‡
__PIC__


1797 
__STRING_INLINE
 *

1798 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1800 
__d0
, 
__d1
, 
__d2
;

1801 *
__ªs
;

1802 
__asm__
 
__vﬁ©ûe__


1823 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1824 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1826  
__ªs
;

1827 
	}
}

1829 
__STRING_INLINE
 *

1830 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1832 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1833 *
__ªs
;

1834 
__asm__
 
__vﬁ©ûe__


1853 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1854 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1856  
__ªs
;

1857 
	}
}

1862 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1863 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1864 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1865 ? ((
√edÀ
)[0] == '\0' \

1866 ? (
hay°ack
) \

1867 : ((
√edÀ
)[1] == '\0' \

1868 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1869 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1870 
	`°æí
 (
√edÀ
)))) \

1871 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1875 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1876 c⁄° 
__√edÀ
[],

1877 
size_t
 
__√edÀ_Àn
);

1879 
__STRING_INLINE
 *

1880 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1881 
size_t
 
__√edÀ_Àn
)

1883 
__d0
, 
__d1
, 
__d2
;

1884 *
__ªs
;

1885 
__asm__
 
__vﬁ©ûe__


1898 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1899 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1901  
__ªs
;

1902 
	}
}

1904 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1905 c⁄° *
__√edÀ
);

1906 #ifde‡
__PIC__


1908 
__STRING_INLINE
 *

1909 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1911 
__d0
, 
__d1
, 
__d2
;

1912 *
__ªs
;

1913 
__asm__
 
__vﬁ©ûe__


1932 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1933 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1934 "d" (
__√edÀ
)

1936  
__ªs
;

1937 
	}
}

1939 
__STRING_INLINE
 *

1940 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1942 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1943 *
__ªs
;

1944 
__asm__
 
__vﬁ©ûe__


1961 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1962 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1963 "b" (
__√edÀ
)

1965  
__ªs
;

1966 
	}
}

1972 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1973 #ifde‡
__i686__


1974 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1975 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1976 ? 
	`__buûtö_ffs
 (
w‹d
) \

1977 : ({ 
__˙t
, 
__tmp
; \

1978 
__asm__
 
__vﬁ©ûe__
 \

1981 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1982 : "rm" (
w‹d
), "1" (-1)); \

1983 
__˙t
 + 1; }))

	)

1985 #i‚de‡
ff¶


1986 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1991 #i‚de‡
_FORCE_INLINES


1992 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_INLINE_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_INLINE_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_INLINE_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_INLINE_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_INLINE_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #ifde‡
__USE_POSIX


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_MISC


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_XOPEN2K8


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

19 #i‚de‡
_TERMIOS_H


23 
	tcc_t
;

24 
	t•ìd_t
;

25 
	ttcÊag_t
;

27 
	#NCCS
 32

	)

28 
	sãrmios


30 
tcÊag_t
 
	mc_iÊag
;

31 
tcÊag_t
 
	mc_oÊag
;

32 
tcÊag_t
 
	mc_cÊag
;

33 
tcÊag_t
 
	mc_lÊag
;

34 
cc_t
 
	mc_löe
;

35 
cc_t
 
	mc_cc
[
NCCS
];

36 
•ìd_t
 
	mc_i•ìd
;

37 
•ìd_t
 
	mc_o•ìd
;

38 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

39 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

43 
	#VINTR
 0

	)

44 
	#VQUIT
 1

	)

45 
	#VERASE
 2

	)

46 
	#VKILL
 3

	)

47 
	#VEOF
 4

	)

48 
	#VTIME
 5

	)

49 
	#VMIN
 6

	)

50 
	#VSWTC
 7

	)

51 
	#VSTART
 8

	)

52 
	#VSTOP
 9

	)

53 
	#VSUSP
 10

	)

54 
	#VEOL
 11

	)

55 
	#VREPRINT
 12

	)

56 
	#VDISCARD
 13

	)

57 
	#VWERASE
 14

	)

58 
	#VLNEXT
 15

	)

59 
	#VEOL2
 16

	)

62 
	#IGNBRK
 0000001

	)

63 
	#BRKINT
 0000002

	)

64 
	#IGNPAR
 0000004

	)

65 
	#PARMRK
 0000010

	)

66 
	#INPCK
 0000020

	)

67 
	#ISTRIP
 0000040

	)

68 
	#INLCR
 0000100

	)

69 
	#IGNCR
 0000200

	)

70 
	#ICRNL
 0000400

	)

71 
	#IUCLC
 0001000

	)

72 
	#IXON
 0002000

	)

73 
	#IXANY
 0004000

	)

74 
	#IXOFF
 0010000

	)

75 
	#IMAXBEL
 0020000

	)

76 
	#IUTF8
 0040000

	)

79 
	#OPOST
 0000001

	)

80 
	#OLCUC
 0000002

	)

81 
	#ONLCR
 0000004

	)

82 
	#OCRNL
 0000010

	)

83 
	#ONOCR
 0000020

	)

84 
	#ONLRET
 0000040

	)

85 
	#OFILL
 0000100

	)

86 
	#OFDEL
 0000200

	)

87 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


88 
	#NLDLY
 0000400

	)

89 
	#NL0
 0000000

	)

90 
	#NL1
 0000400

	)

91 
	#CRDLY
 0003000

	)

92 
	#CR0
 0000000

	)

93 
	#CR1
 0001000

	)

94 
	#CR2
 0002000

	)

95 
	#CR3
 0003000

	)

96 
	#TABDLY
 0014000

	)

97 
	#TAB0
 0000000

	)

98 
	#TAB1
 0004000

	)

99 
	#TAB2
 0010000

	)

100 
	#TAB3
 0014000

	)

101 
	#BSDLY
 0020000

	)

102 
	#BS0
 0000000

	)

103 
	#BS1
 0020000

	)

104 
	#FFDLY
 0100000

	)

105 
	#FF0
 0000000

	)

106 
	#FF1
 0100000

	)

109 
	#VTDLY
 0040000

	)

110 
	#VT0
 0000000

	)

111 
	#VT1
 0040000

	)

113 #ifde‡
__USE_MISC


114 
	#XTABS
 0014000

	)

118 #ifde‡
__USE_MISC


119 
	#CBAUD
 0010017

	)

121 
	#B0
 0000000

	)

122 
	#B50
 0000001

	)

123 
	#B75
 0000002

	)

124 
	#B110
 0000003

	)

125 
	#B134
 0000004

	)

126 
	#B150
 0000005

	)

127 
	#B200
 0000006

	)

128 
	#B300
 0000007

	)

129 
	#B600
 0000010

	)

130 
	#B1200
 0000011

	)

131 
	#B1800
 0000012

	)

132 
	#B2400
 0000013

	)

133 
	#B4800
 0000014

	)

134 
	#B9600
 0000015

	)

135 
	#B19200
 0000016

	)

136 
	#B38400
 0000017

	)

137 #ifde‡
__USE_MISC


138 
	#EXTA
 
B19200


	)

139 
	#EXTB
 
B38400


	)

141 
	#CSIZE
 0000060

	)

142 
	#CS5
 0000000

	)

143 
	#CS6
 0000020

	)

144 
	#CS7
 0000040

	)

145 
	#CS8
 0000060

	)

146 
	#CSTOPB
 0000100

	)

147 
	#CREAD
 0000200

	)

148 
	#PARENB
 0000400

	)

149 
	#PARODD
 0001000

	)

150 
	#HUPCL
 0002000

	)

151 
	#CLOCAL
 0004000

	)

152 #ifde‡
__USE_MISC


153 
	#CBAUDEX
 0010000

	)

155 
	#B57600
 0010001

	)

156 
	#B115200
 0010002

	)

157 
	#B230400
 0010003

	)

158 
	#B460800
 0010004

	)

159 
	#B500000
 0010005

	)

160 
	#B576000
 0010006

	)

161 
	#B921600
 0010007

	)

162 
	#B1000000
 0010010

	)

163 
	#B1152000
 0010011

	)

164 
	#B1500000
 0010012

	)

165 
	#B2000000
 0010013

	)

166 
	#B2500000
 0010014

	)

167 
	#B3000000
 0010015

	)

168 
	#B3500000
 0010016

	)

169 
	#B4000000
 0010017

	)

170 
	#__MAX_BAUD
 
B4000000


	)

171 #ifde‡
__USE_MISC


172 
	#CIBAUD
 002003600000

	)

173 
	#CMSPAR
 010000000000

	)

174 
	#CRTSCTS
 020000000000

	)

178 
	#ISIG
 0000001

	)

179 
	#ICANON
 0000002

	)

180 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


181 
	#XCASE
 0000004

	)

183 
	#ECHO
 0000010

	)

184 
	#ECHOE
 0000020

	)

185 
	#ECHOK
 0000040

	)

186 
	#ECHONL
 0000100

	)

187 
	#NOFLSH
 0000200

	)

188 
	#TOSTOP
 0000400

	)

189 #ifde‡
__USE_MISC


190 
	#ECHOCTL
 0001000

	)

191 
	#ECHOPRT
 0002000

	)

192 
	#ECHOKE
 0004000

	)

193 
	#FLUSHO
 0010000

	)

194 
	#PENDIN
 0040000

	)

196 
	#IEXTEN
 0100000

	)

197 #ifde‡
__USE_MISC


198 
	#EXTPROC
 0200000

	)

202 
	#TCOOFF
 0

	)

203 
	#TCOON
 1

	)

204 
	#TCIOFF
 2

	)

205 
	#TCION
 3

	)

208 
	#TCIFLUSH
 0

	)

209 
	#TCOFLUSH
 1

	)

210 
	#TCIOFLUSH
 2

	)

213 
	#TCSANOW
 0

	)

214 
	#TCSADRAIN
 1

	)

215 
	#TCSAFLUSH
 2

	)

218 
	#_IOT_ãrmios
 \

219 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_MISC


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/ipc.h

18 #i‚de‡
_SYS_IPC_H


19 
	#_SYS_IPC_H
 1

	)

21 
	~<„©uªs.h
>

23 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

28 
	~<bôs/ù˘y≥s.h
>

29 
	~<bôs/ùc.h
>

31 #i‚de‡
__uid_t_deföed


32 
__uid_t
 
	tuid_t
;

33 
	#__uid_t_deföed


	)

36 #i‚de‡
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

41 #i‚de‡
__mode_t_deföed


42 
__mode_t
 
	tmode_t
;

43 
	#__mode_t_deföed


	)

46 #i‚de‡
__key_t_deföed


47 
__key_t
 
	tkey_t
;

48 
	#__key_t_deföed


	)

51 
__BEGIN_DECLS


54 
key_t
 
	$·ok
 (c⁄° *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

56 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

18 #i‚de‡
_SYS_UIO_H


19 
	#_SYS_UIO_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	g__BEGIN_DECLS


28 
	~<bôs/uio.h
>

39 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

40 
__wur
;

50 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

51 
__wur
;

54 #ifde‡
__USE_MISC


55 #i‚de‡
__USE_FILE_OFFSET64


65 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

66 
__off_t
 
__off£t
Ë
__wur
;

77 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

78 
__off_t
 
__off£t
Ë
__wur
;

80 #ifde‡
__REDIRECT


81 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

82 
__cou¡
, 
__off64_t
 
__off£t
),

83 
¥ódv64
Ë
__wur
;

84 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

85 
__cou¡
, 
__off64_t
 
__off£t
),

86 
pwrôev64
Ë
__wur
;

88 
	#¥ódv
 
¥ódv64


	)

89 
	#pwrôev
 
pwrôev64


	)

93 #ifde‡
__USE_LARGEFILE64


103 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

104 
__off64_t
 
__off£t
Ë
__wur
;

115 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

116 
__off64_t
 
__off£t
Ë
__wur
;

120 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

206 #ifde‡
__USE_XOPEN2K8


207 
	#F_DUPFD_CLOEXEC
 1030

	)

212 
	#FD_CLOEXEC
 1

	)

214 #i‚de‡
F_RDLCK


216 
	#F_RDLCK
 0

	)

217 
	#F_WRLCK
 1

	)

218 
	#F_UNLCK
 2

	)

223 #i‚de‡
F_EXLCK


224 
	#F_EXLCK
 4

	)

225 
	#F_SHLCK
 8

	)

228 #ifde‡
__USE_MISC


230 
	#LOCK_SH
 1

	)

231 
	#LOCK_EX
 2

	)

232 
	#LOCK_NB
 4

	)

234 
	#LOCK_UN
 8

	)

237 #ifde‡
__USE_GNU


238 
	#LOCK_MAND
 32

	)

239 
	#LOCK_READ
 64

	)

240 
	#LOCK_WRITE
 128

	)

241 
	#LOCK_RW
 192

	)

244 #ifde‡
__USE_GNU


246 
	#DN_ACCESS
 0x00000001

	)

247 
	#DN_MODIFY
 0x00000002

	)

248 
	#DN_CREATE
 0x00000004

	)

249 
	#DN_DELETE
 0x00000008

	)

250 
	#DN_RENAME
 0x00000010

	)

251 
	#DN_ATTRIB
 0x00000020

	)

252 
	#DN_MULTISHOT
 0x80000000

	)

256 #ifde‡
__USE_GNU


258 
	e__pid_ty≥


260 
	mF_OWNER_TID
 = 0,

261 
	mF_OWNER_PID
,

262 
	mF_OWNER_PGRP
,

263 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


267 
	sf_ow√r_ex


269 
__pid_ty≥
 
	mty≥
;

270 
__pid_t
 
	mpid
;

276 #ifdef 
__USE_MISC


277 
	#FAPPEND
 
O_APPEND


	)

278 
	#FFSYNC
 
O_FSYNC


	)

279 
	#FASYNC
 
O_ASYNC


	)

280 
	#FNONBLOCK
 
O_NONBLOCK


	)

281 
	#FNDELAY
 
O_NDELAY


	)

284 #i‚de‡
__POSIX_FADV_DONTNEED


285 
	#__POSIX_FADV_DONTNEED
 4

	)

286 
	#__POSIX_FADV_NOREUSE
 5

	)

289 #ifde‡
__USE_XOPEN2K


290 
	#POSIX_FADV_NORMAL
 0

	)

291 
	#POSIX_FADV_RANDOM
 1

	)

292 
	#POSIX_FADV_SEQUENTIAL
 2

	)

293 
	#POSIX_FADV_WILLNEED
 3

	)

294 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

295 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

299 #ifde‡
__USE_GNU


301 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

304 
	#SYNC_FILE_RANGE_WRITE
 2

	)

307 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

312 
	#SPLICE_F_MOVE
 1

	)

313 
	#SPLICE_F_NONBLOCK
 2

	)

316 
	#SPLICE_F_MORE
 4

	)

317 
	#SPLICE_F_GIFT
 8

	)

321 
	#FALLOC_FL_KEEP_SIZE
 1

	)

324 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

325 
	#FALLOC_FL_COLLAPSE_RANGE
 8

	)

328 
	#FALLOC_FL_ZERO_RANGE
 16

	)

333 
	sfûe_h™dÀ


335 
	mh™dÀ_byãs
;

336 
	mh™dÀ_ty≥
;

338 
	mf_h™dÀ
[0];

342 
	#MAX_HANDLE_SZ
 128

	)

346 #ifde‡
__USE_ATFILE


347 
	#AT_FDCWD
 -100

	)

350 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

351 
	#AT_REMOVEDIR
 0x200

	)

353 
	#AT_SYMLINK_FOLLOW
 0x400

	)

354 #ifde‡
__USE_GNU


355 
	#AT_NO_AUTOMOUNT
 0x800

	)

357 
	#AT_EMPTY_PATH
 0x1000

	)

359 
	#AT_EACCESS
 0x200

	)

363 
	g__BEGIN_DECLS


365 #ifde‡
__USE_GNU


368 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

369 
__THROW
;

376 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

377 
__Êags
);

384 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

385 
size_t
 
__cou¡
, 
__Êags
);

391 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

392 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

393 
__Êags
);

399 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

400 
__Êags
);

406 #i‚de‡
__USE_FILE_OFFSET64


407 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

409 #ifde‡
__REDIRECT


410 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

411 
__off64_t
 
__Àn
),

412 
ÁŒoˇã64
);

414 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

417 #ifde‡
__USE_LARGEFILE64


418 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

419 
__off64_t
 
__Àn
);

424 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

425 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

426 
__Êags
Ë
__THROW
;

432 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

433 
__Êags
);

437 
__END_DECLS


	@/usr/include/bits/ipc.h

18 #i‚de‡
_SYS_IPC_H


22 
	~<bôs/ty≥s.h
>

25 
	#IPC_CREAT
 01000

	)

26 
	#IPC_EXCL
 02000

	)

27 
	#IPC_NOWAIT
 04000

	)

30 
	#IPC_RMID
 0

	)

31 
	#IPC_SET
 1

	)

32 
	#IPC_STAT
 2

	)

33 #ifde‡
__USE_GNU


34 
	#IPC_INFO
 3

	)

38 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

42 
	sùc_≥rm


44 
__key_t
 
	m__key
;

45 
__uid_t
 
	muid
;

46 
__gid_t
 
	mgid
;

47 
__uid_t
 
	mcuid
;

48 
__gid_t
 
	mcgid
;

49 
	mmode
;

50 
	m__∑d1
;

51 
	m__£q
;

52 
	m__∑d2
;

53 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved1
;

54 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved2
;

	@/usr/include/bits/ipctypes.h

19 #i‚de‡
_SYS_IPC_H


23 #i‚de‡
_BITS_IPCTYPES_H


24 
	#_BITS_IPCTYPES_H
 1

	)

27 #ifde‡
__x86_64__


28 
	t__ùc_pid_t
;

30 
	t__ùc_pid_t
;

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

40 
	#__DECL_SIMD_sö


	)

41 
	#__DECL_SIMD_söf


	)

42 
	#__DECL_SIMD_söl


	)

44 
	#__DECL_SIMD_söcos


	)

45 
	#__DECL_SIMD_söcosf


	)

46 
	#__DECL_SIMD_söco¶


	)

48 
	#__DECL_SIMD_log


	)

49 
	#__DECL_SIMD_logf


	)

50 
	#__DECL_SIMD_logl


	)

52 
	#__DECL_SIMD_exp


	)

53 
	#__DECL_SIMD_expf


	)

54 
	#__DECL_SIMD_ex∂


	)

56 
	#__DECL_SIMD_pow


	)

57 
	#__DECL_SIMD_powf


	)

58 
	#__DECL_SIMD_powl


	)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


35 
	#PROT_READ
 0x1

	)

36 
	#PROT_WRITE
 0x2

	)

37 
	#PROT_EXEC
 0x4

	)

38 
	#PROT_NONE
 0x0

	)

39 
	#PROT_GROWSDOWN
 0x01000000

	)

41 
	#PROT_GROWSUP
 0x02000000

	)

45 
	#MAP_SHARED
 0x01

	)

46 
	#MAP_PRIVATE
 0x02

	)

47 #ifde‡
__USE_MISC


48 
	#MAP_TYPE
 0x0‡

	)

52 
	#MAP_FIXED
 0x10

	)

53 #ifde‡
__USE_MISC


54 
	#MAP_FILE
 0

	)

55 #ifde‡
__MAP_ANONYMOUS


56 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

58 
	#MAP_ANONYMOUS
 0x20

	)

60 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

62 
	#MAP_HUGE_SHIFT
 26

	)

63 
	#MAP_HUGE_MASK
 0x3f

	)

67 
	#MS_ASYNC
 1

	)

68 
	#MS_SYNC
 4

	)

69 
	#MS_INVALIDATE
 2

	)

72 #ifde‡
__USE_GNU


73 
	#MREMAP_MAYMOVE
 1

	)

74 
	#MREMAP_FIXED
 2

	)

78 #ifde‡
__USE_MISC


79 
	#MADV_NORMAL
 0

	)

80 
	#MADV_RANDOM
 1

	)

81 
	#MADV_SEQUENTIAL
 2

	)

82 
	#MADV_WILLNEED
 3

	)

83 
	#MADV_DONTNEED
 4

	)

84 
	#MADV_REMOVE
 9

	)

85 
	#MADV_DONTFORK
 10

	)

86 
	#MADV_DOFORK
 11

	)

87 
	#MADV_MERGEABLE
 12

	)

88 
	#MADV_UNMERGEABLE
 13

	)

89 
	#MADV_HUGEPAGE
 14

	)

90 
	#MADV_NOHUGEPAGE
 15

	)

91 
	#MADV_DONTDUMP
 16

	)

93 
	#MADV_DODUMP
 17

	)

94 
	#MADV_HWPOISON
 100

	)

98 #ifde‡
__USE_XOPEN2K


99 
	#POSIX_MADV_NORMAL
 0

	)

100 
	#POSIX_MADV_RANDOM
 1

	)

101 
	#POSIX_MADV_SEQUENTIAL
 2

	)

102 
	#POSIX_MADV_WILLNEED
 3

	)

103 
	#POSIX_MADV_DONTNEED
 4

	)

107 #i‚de‡
MCL_CURRENT


108 
	#MCL_CURRENT
 1

	)

109 
	#MCL_FUTURE
 2

	)

111 
	#MCL_ONFAULT
 4

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
	$˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
__CPU_MASK_TYPE
 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

40 
	#_SS_SIZE
 128

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_SETOFFSET
 0x0100

	)

64 
	#ADJ_MICRO
 0x1000

	)

65 
	#ADJ_NANO
 0x2000

	)

66 
	#ADJ_TICK
 0x4000

	)

67 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

68 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

71 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

72 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

73 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

74 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

75 
	#MOD_STATUS
 
ADJ_STATUS


	)

76 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

77 
	#MOD_CLKB
 
ADJ_TICK


	)

78 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

79 
	#MOD_TAI
 
ADJ_TAI


	)

80 
	#MOD_MICRO
 
ADJ_MICRO


	)

81 
	#MOD_NANO
 
ADJ_NANO


	)

85 
	#STA_PLL
 0x0001

	)

86 
	#STA_PPSFREQ
 0x0002

	)

87 
	#STA_PPSTIME
 0x0004

	)

88 
	#STA_FLL
 0x0008

	)

90 
	#STA_INS
 0x0010

	)

91 
	#STA_DEL
 0x0020

	)

92 
	#STA_UNSYNC
 0x0040

	)

93 
	#STA_FREQHOLD
 0x0080

	)

95 
	#STA_PPSSIGNAL
 0x0100

	)

96 
	#STA_PPSJITTER
 0x0200

	)

97 
	#STA_PPSWANDER
 0x0400

	)

98 
	#STA_PPSERROR
 0x0800

	)

100 
	#STA_CLOCKERR
 0x1000

	)

101 
	#STA_NANO
 0x2000

	)

102 
	#STA_MODE
 0x4000

	)

103 
	#STA_CLK
 0x8000

	)

106 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

107 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 #i‡(!
deföed
 
_N‹ëu∫
 \

393 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

394 && !
	$__GNUC_PREREQ
 (4,7))

395 #i‡
	`__GNUC_PREREQ
 (2,8)

396 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

398 
	#_N‹ëu∫


	)

402 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

403 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

404 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

405 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

406 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

407 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

410 
	~<bôs/w‹dsize.h
>

412 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


413 
	#__LDBL_COMPAT
 1

	)

414 #ifde‡
__REDIRECT


415 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

416 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

417 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

418 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

419 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

420 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

421 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

422 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

423 
	#__LDBL_REDIR_DECL
(
«me
) \

424 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

425 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

426 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

427 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

428 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

431 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


432 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

433 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

434 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

435 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

436 
	#__LDBL_REDIR_DECL
(
«me
)

	)

437 #ifde‡
__REDIRECT


438 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

439 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

440 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

77 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

78 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

79 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#FIONCLEX
 0x5450

	)

82 
	#FIOCLEX
 0x5451

	)

83 
	#FIOASYNC
 0x5452

	)

84 
	#TIOCSERCONFIG
 0x5453

	)

85 
	#TIOCSERGWILD
 0x5454

	)

86 
	#TIOCSERSWILD
 0x5455

	)

87 
	#TIOCGLCKTRMIOS
 0x5456

	)

88 
	#TIOCSLCKTRMIOS
 0x5457

	)

89 
	#TIOCSERGSTRUCT
 0x5458

	)

90 
	#TIOCSERGETLSR
 0x5459

	)

91 
	#TIOCSERGETMULTI
 0x545A

	)

92 
	#TIOCSERSETMULTI
 0x545B

	)

94 
	#TIOCMIWAIT
 0x545C

	)

95 
	#TIOCGICOUNT
 0x545D

	)

101 #i‚de‡
FIOQSIZE


102 
	#FIOQSIZE
 0x5460

	)

106 
	#TIOCPKT_DATA
 0

	)

107 
	#TIOCPKT_FLUSHREAD
 1

	)

108 
	#TIOCPKT_FLUSHWRITE
 2

	)

109 
	#TIOCPKT_STOP
 4

	)

110 
	#TIOCPKT_START
 8

	)

111 
	#TIOCPKT_NOSTOP
 16

	)

112 
	#TIOCPKT_DOSTOP
 32

	)

113 
	#TIOCPKT_IOCTL
 64

	)

115 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

26 #i‚de‡
SO_PASSCRED


27 
	#SO_PASSCRED
 16

	)

28 
	#SO_PEERCRED
 17

	)

29 
	#SO_RCVLOWAT
 18

	)

30 
	#SO_SNDLOWAT
 19

	)

31 
	#SO_RCVTIMEO
 20

	)

32 
	#SO_SNDTIMEO
 21

	)

36 
	#SO_SECURITY_AUTHENTICATION
 22

	)

37 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

38 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

40 
	#SO_BINDTODEVICE
 25

	)

43 
	#SO_ATTACH_FILTER
 26

	)

44 
	#SO_DETACH_FILTER
 27

	)

45 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_WIFI_STATUS
 41

	)

69 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

70 
	#SO_PEEK_OFF
 42

	)

73 
	#SO_NOFCS
 43

	)

75 
	#SO_LOCK_FILTER
 44

	)

77 
	#SO_SELECT_ERR_QUEUE
 45

	)

79 
	#SO_BUSY_POLL
 46

	)

81 
	#SO_MAX_PACING_RATE
 47

	)

83 
	#SO_BPF_EXTENSIONS
 48

	)

85 
	#SO_INCOMING_CPU
 49

	)

87 
	#SO_ATTACH_BPF
 50

	)

88 
	#SO_DETACH_BPF
 
SO_DETACH_FILTER


	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

6 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~<asm/posix_ty≥s_32.h
>

3 #ñi‡
deföed
(
__ILP32__
)

4 
	~<asm/posix_ty≥s_x32.h
>

6 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_quîy_moduÀ


	)

14 
	#__°ub___com∑t_u£lib


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gëmsg


	)

20 
	#__°ub_gây


	)

21 
	#__°ub_lchmod


	)

22 
	#__°ub_nfs£rv˘l


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@/usr/include/linux/stddef.h

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

17 
	#ENOSYS
 38

	)

19 
	#ENOTEMPTY
 39

	)

20 
	#ELOOP
 40

	)

21 
	#EWOULDBLOCK
 
EAGAIN


	)

22 
	#ENOMSG
 42

	)

23 
	#EIDRM
 43

	)

24 
	#ECHRNG
 44

	)

25 
	#EL2NSYNC
 45

	)

26 
	#EL3HLT
 46

	)

27 
	#EL3RST
 47

	)

28 
	#ELNRNG
 48

	)

29 
	#EUNATCH
 49

	)

30 
	#ENOCSI
 50

	)

31 
	#EL2HLT
 51

	)

32 
	#EBADE
 52

	)

33 
	#EBADR
 53

	)

34 
	#EXFULL
 54

	)

35 
	#ENOANO
 55

	)

36 
	#EBADRQC
 56

	)

37 
	#EBADSLT
 57

	)

39 
	#EDEADLOCK
 
EDEADLK


	)

41 
	#EBFONT
 59

	)

42 
	#ENOSTR
 60

	)

43 
	#ENODATA
 61

	)

44 
	#ETIME
 62

	)

45 
	#ENOSR
 63

	)

46 
	#ENONET
 64

	)

47 
	#ENOPKG
 65

	)

48 
	#EREMOTE
 66

	)

49 
	#ENOLINK
 67

	)

50 
	#EADV
 68

	)

51 
	#ESRMNT
 69

	)

52 
	#ECOMM
 70

	)

53 
	#EPROTO
 71

	)

54 
	#EMULTIHOP
 72

	)

55 
	#EDOTDOT
 73

	)

56 
	#EBADMSG
 74

	)

57 
	#EOVERFLOW
 75

	)

58 
	#ENOTUNIQ
 76

	)

59 
	#EBADFD
 77

	)

60 
	#EREMCHG
 78

	)

61 
	#ELIBACC
 79

	)

62 
	#ELIBBAD
 80

	)

63 
	#ELIBSCN
 81

	)

64 
	#ELIBMAX
 82

	)

65 
	#ELIBEXEC
 83

	)

66 
	#EILSEQ
 84

	)

67 
	#ERESTART
 85

	)

68 
	#ESTRPIPE
 86

	)

69 
	#EUSERS
 87

	)

70 
	#ENOTSOCK
 88

	)

71 
	#EDESTADDRREQ
 89

	)

72 
	#EMSGSIZE
 90

	)

73 
	#EPROTOTYPE
 91

	)

74 
	#ENOPROTOOPT
 92

	)

75 
	#EPROTONOSUPPORT
 93

	)

76 
	#ESOCKTNOSUPPORT
 94

	)

77 
	#EOPNOTSUPP
 95

	)

78 
	#EPFNOSUPPORT
 96

	)

79 
	#EAFNOSUPPORT
 97

	)

80 
	#EADDRINUSE
 98

	)

81 
	#EADDRNOTAVAIL
 99

	)

82 
	#ENETDOWN
 100

	)

83 
	#ENETUNREACH
 101

	)

84 
	#ENETRESET
 102

	)

85 
	#ECONNABORTED
 103

	)

86 
	#ECONNRESET
 104

	)

87 
	#ENOBUFS
 105

	)

88 
	#EISCONN
 106

	)

89 
	#ENOTCONN
 107

	)

90 
	#ESHUTDOWN
 108

	)

91 
	#ETOOMANYREFS
 109

	)

92 
	#ETIMEDOUT
 110

	)

93 
	#ECONNREFUSED
 111

	)

94 
	#EHOSTDOWN
 112

	)

95 
	#EHOSTUNREACH
 113

	)

96 
	#EALREADY
 114

	)

97 
	#EINPROGRESS
 115

	)

98 
	#ESTALE
 116

	)

99 
	#EUCLEAN
 117

	)

100 
	#ENOTNAM
 118

	)

101 
	#ENAVAIL
 119

	)

102 
	#EISNAM
 120

	)

103 
	#EREMOTEIO
 121

	)

104 
	#EDQUOT
 122

	)

106 
	#ENOMEDIUM
 123

	)

107 
	#EMEDIUMTYPE
 124

	)

108 
	#ECANCELED
 125

	)

109 
	#ENOKEY
 126

	)

110 
	#EKEYEXPIRED
 127

	)

111 
	#EKEYREVOKED
 128

	)

112 
	#EKEYREJECTED
 129

	)

115 
	#EOWNERDEAD
 130

	)

116 
	#ENOTRECOVERABLE
 131

	)

118 
	#ERFKILL
 132

	)

120 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 #i‚de‡
EXEC_PAGESIZE


9 
	#EXEC_PAGESIZE
 4096

	)

12 #i‚de‡
NOGROUP


13 
	#NOGROUP
 (-1)

	)

16 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/posix_types_32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_32_H


2 
	#_ASM_X86_POSIX_TYPES_32_H


	)

10 
	t__kî√l_mode_t
;

11 
	#__kî√l_mode_t
 
__kî√l_mode_t


	)

13 
	t__kî√l_ùc_pid_t
;

14 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

16 
	t__kî√l_uid_t
;

17 
	t__kî√l_gid_t
;

18 
	#__kî√l_uid_t
 
__kî√l_uid_t


	)

20 
	t__kî√l_ﬁd_dev_t
;

21 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

23 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_64.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_64_H


2 
	#_ASM_X86_POSIX_TYPES_64_H


	)

10 
	t__kî√l_ﬁd_uid_t
;

11 
	t__kî√l_ﬁd_gid_t
;

12 
	#__kî√l_ﬁd_uid_t
 
__kî√l_ﬁd_uid_t


	)

14 
	t__kî√l_ﬁd_dev_t
;

15 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

17 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_x32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_X32_H


2 
	#_ASM_X86_POSIX_TYPES_X32_H


	)

13 
	t__kî√l_l⁄g_t
;

14 
	t__kî√l_ul⁄g_t
;

15 
	#__kî√l_l⁄g_t
 
__kî√l_l⁄g_t


	)

17 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/posix_types.h

1 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


2 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

4 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__kî√l_l⁄g_t


14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

18 #i‚de‡
__kî√l_öo_t


19 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

22 #i‚de‡
__kî√l_mode_t


23 
	t__kî√l_mode_t
;

26 #i‚de‡
__kî√l_pid_t


27 
	t__kî√l_pid_t
;

30 #i‚de‡
__kî√l_ùc_pid_t


31 
	t__kî√l_ùc_pid_t
;

34 #i‚de‡
__kî√l_uid_t


35 
	t__kî√l_uid_t
;

36 
	t__kî√l_gid_t
;

39 #i‚de‡
__kî√l_su£c⁄ds_t


40 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

43 #i‚de‡
__kî√l_daddr_t


44 
	t__kî√l_daddr_t
;

47 #i‚de‡
__kî√l_uid32_t


48 
	t__kî√l_uid32_t
;

49 
	t__kî√l_gid32_t
;

52 #i‚de‡
__kî√l_ﬁd_uid_t


53 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

54 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

57 #i‚de‡
__kî√l_ﬁd_dev_t


58 
	t__kî√l_ﬁd_dev_t
;

65 #i‚de‡
__kî√l_size_t


66 #i‡
__BITS_PER_LONG
 != 64

67 
	t__kî√l_size_t
;

68 
	t__kî√l_ssize_t
;

69 
	t__kî√l_±rdiff_t
;

71 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

72 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

77 #i‚de‡
__kî√l_fsid_t


79 
	mvÆ
[2];

80 } 
	t__kî√l_fsid_t
;

86 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

87 
	t__kî√l_loff_t
;

88 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

90 
	t__kî√l_timî_t
;

91 
	t__kî√l_˛ockid_t
;

92 * 
	t__kî√l_ˇddr_t
;

93 
	t__kî√l_uid16_t
;

94 
	t__kî√l_gid16_t
;

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #i‡
deföed
(
__x86_64__
Ë&& !deföed(
__ILP32__
)

5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
270
6693
BasePort.cpp
BasePort.h
ComPort/CTcpPortServer.cpp
ComPort/CTcpPortServer.h
ComPort/SerialPort.cpp
ComPort/SerialPort.h
ComPort/TcpClient.cpp
ComPort/TcpClient.h
ComPort/TcpListen.cpp
ComPort/TcpListen.h
ComPort/TcpPort.cpp
ComPort/TcpPort.h
ComPort/ccomport.cpp
ComPort/ccomport.h
Dbase/database.cpp
Dbase/database.h
Dbase/dbasedatatype.h
Dbase/dbasemanager.cpp
Dbase/dbasemanager.h
Dbase/dbasemanager_soe.cpp
Dbase/dbasemanager_soe.h
Dbase/sqlite3.h
Dbase/sqlite3dbase.cpp
Dbase/sqlite3dbase.h
Element/calarm_indicator_yx.cpp
Element/calarm_indicator_yx.h
Element/canalog_data_sign.cpp
Element/canalog_data_sign.h
Element/cbreaker.cpp
Element/cbreaker.h
Element/ccircle_indicator_sign.cpp
Element/ccircle_indicator_sign.h
Element/ccontactor.cpp
Element/ccontactor.h
Element/cct_sign.cpp
Element/cct_sign.h
Element/ceelment.cpp
Element/ceelment.h
Element/cgeneratrix.cpp
Element/cgeneratrix.h
Element/cimage_yc.cpp
Element/cimage_yc.h
Element/clightning_protector.cpp
Element/clightning_protector.h
Element/clinker.cpp
Element/clinker.h
Element/cload_breaker_2pos.cpp
Element/cload_breaker_2pos.h
Element/cload_breaker_3pos.cpp
Element/cload_breaker_3pos.h
Element/cpower.cpp
Element/cpower.h
Element/cpt_sign.cpp
Element/cpt_sign.h
Element/crect_indicator_sign.cpp
Element/crect_indicator_sign.h
Element/cswitch_2pos.cpp
Element/cswitch_2pos.h
Element/cswitch_3pos.cpp
Element/cswitch_3pos.h
Element/cswitch_connect_earth.cpp
Element/cswitch_connect_earth.h
Element/ctext_sign.cpp
Element/ctext_sign.h
Element/ctransformer.cpp
Element/ctransformer.h
Keyboard/keyboard.cpp
Keyboard/keyboard.h
Pages/cpage.cpp
Pages/cpage.h
Pages/cpage_dataquery.cpp
Pages/cpage_dataquery.h
Pages/cpage_diagnostic.cpp
Pages/cpage_diagnostic.h
Pages/cpage_home.cpp
Pages/cpage_home.h
Pages/cpage_sysparameter.cpp
Pages/cpage_sysparameter.h
Pages/cpage_syspic.cpp
Pages/cpage_syspic.h
Proto/cmethod.cpp
Proto/cmethod.h
Proto/cprotocol.cpp
Proto/cprotocol.h
Proto/publicmethod.cpp
Proto/publicmethod.h
Typedef.h
calarmdlg.cpp
calarmdlg.h
cglobal.cpp
cglobal.h
clogindlg.cpp
clogindlg.h
cmsg.cpp
cmsg.h
cresetpwddlg.cpp
cresetpwddlg.h
cykdlg.cpp
cykdlg.h
eput800lineedit.cpp
eput800lineedit.h
loadlibrary.cpp
loadlibrary.h
main.cpp
profile.cpp
profile.h
structure.h
widget.cpp
widget.h
/usr/include/arpa/inet.h
/usr/include/ctype.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/linux/input.h
/usr/include/linux/ioctl.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/sqlite3.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/ioctl.h
/usr/include/sys/mman.h
/usr/include/sys/msg.h
/usr/include/sys/param.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/asm/ioctl.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/msq.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/param.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/linux/types.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/sys/ipc.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/asm/types.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/mman-linux.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket_type.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/linux/posix_types.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm-generic/types.h
/usr/include/asm/errno.h
/usr/include/asm/param.h
/usr/include/asm/posix_types.h
/usr/include/bits/local_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/stddef.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/param.h
/usr/include/asm/posix_types_32.h
/usr/include/asm/posix_types_64.h
/usr/include/asm/posix_types_x32.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm-generic/sockios.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
